<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>DreamcatcherDENG 的个人博客</title>
  
  
  <link href="https://dreamcatcherdeng.gitee.io/personal-blog/atom.xml" rel="self"/>
  
  <link href="https://dreamcatcherdeng.gitee.io/personal-blog/"/>
  <updated>2022-05-02T12:35:45.356Z</updated>
  <id>https://dreamcatcherdeng.gitee.io/personal-blog/</id>
  
  <author>
    <name>dreamcatcherdeng</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>TableLayout</title>
    <link href="https://dreamcatcherdeng.gitee.io/personal-blog/2022/05/02/TableLayout/"/>
    <id>https://dreamcatcherdeng.gitee.io/personal-blog/2022/05/02/TableLayout/</id>
    <published>2022-05-02T12:33:05.143Z</published>
    <updated>2022-05-02T12:35:45.356Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>1.TableLayout属性</p><p>2.TableLayout布局</p></blockquote><span id="more"></span><h1 id="TableLayout属性"><a href="#TableLayout属性" class="headerlink" title="TableLayout属性"></a>TableLayout属性</h1><h2 id="对于父控件"><a href="#对于父控件" class="headerlink" title="对于父控件"></a>对于父控件</h2><div class="table-container"><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td><code>collapseColumns</code></td><td>隐藏该列（可以是多列）</td></tr><tr><td><code>shrinkColumns</code></td><td>收缩该列（可以是多列）</td></tr><tr><td><code>stretchColumns</code></td><td>拉伸该列（可以是多列）</td></tr></tbody></table></div><h2 id="对于子控件"><a href="#对于子控件" class="headerlink" title="对于子控件"></a>对于子控件</h2><div class="table-container"><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td></td></tr></tbody></table></div><h1 id="TableLayout布局"><a href="#TableLayout布局" class="headerlink" title="TableLayout布局"></a>TableLayout布局</h1><h2 id="正常"><a href="#正常" class="headerlink" title="正常"></a>正常</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">TableLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TableRow</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;按钮0&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;按钮1&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;按钮2&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;按钮3&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TableRow</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TableRow</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;按钮4&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;按钮5&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;按钮6&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TableRow</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">TableLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220502185327112.png" alt="image-20220502185327112"></p><h2 id="设置拉伸列"><a href="#设置拉伸列" class="headerlink" title="设置拉伸列"></a>设置拉伸列</h2><p>仅当<code>TableRow</code>还有多余的空间时才有用</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">TableLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:stretchColumns</span>=<span class="string">&quot;1,2&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TableRow</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;按钮0&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;按钮1&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;按钮2&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TableRow</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">TableLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220502190008701.png" alt="image-20220502190008701"></p><h2 id="设置收缩列"><a href="#设置收缩列" class="headerlink" title="设置收缩列"></a>设置收缩列</h2><p>仅当一个<code>TableRow</code>显示不下所有单元格时才有用</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">TableLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:shrinkColumns</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TableRow</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;按钮0&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;按钮1&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;按钮2&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;按钮3&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;按钮4&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TableRow</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">TableLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220502185801483.png" alt="image-20220502185801483"></p><h2 id="设置隐藏列"><a href="#设置隐藏列" class="headerlink" title="设置隐藏列"></a>设置隐藏列</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">TableLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:collapseColumns</span>=<span class="string">&quot;0,2&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TableRow</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;按钮0&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;按钮1&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;按钮2&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;按钮3&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;按钮4&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TableRow</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">TableLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220502190252035.png" alt="image-20220502190252035"></p><h2 id="跨列显示与从第几列显示"><a href="#跨列显示与从第几列显示" class="headerlink" title="跨列显示与从第几列显示"></a>跨列显示与从第几列显示</h2><p>只有行数大于1时有效</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">TableLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    第二列跨两列--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TableRow</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;按钮0&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_span</span>=<span class="string">&quot;2&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;按钮1&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;按钮2&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;按钮3&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TableRow</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--从第二列开始显示--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TableRow</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_column</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;按钮0&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;按钮1&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;按钮2&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;按钮3&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TableRow</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">TableLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220502192228355.png" alt="image-20220502192228355"></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;1.TableLayout属性&lt;/p&gt;
&lt;p&gt;2.TableLayout布局&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Android" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/Android/"/>
    
    <category term="Android 布局" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/Android/Android-%E5%B8%83%E5%B1%80/"/>
    
    
  </entry>
  
  <entry>
    <title>RelativeLaout</title>
    <link href="https://dreamcatcherdeng.gitee.io/personal-blog/2022/05/02/RelativeLayout/"/>
    <id>https://dreamcatcherdeng.gitee.io/personal-blog/2022/05/02/RelativeLayout/</id>
    <published>2022-05-02T12:33:05.137Z</published>
    <updated>2022-05-02T12:35:45.353Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>1.RelativeLayout属性</p><p>2.RelativeLayout布局</p></blockquote><span id="more"></span><h1 id="RelativeLayout属性"><a href="#RelativeLayout属性" class="headerlink" title="RelativeLayout属性"></a>RelativeLayout属性</h1><h2 id="根据父容器定位的属性"><a href="#根据父容器定位的属性" class="headerlink" title="根据父容器定位的属性"></a>根据父容器定位的属性</h2><div class="table-container"><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td><code>layout_alignParentLeft</code></td><td>左对齐</td></tr><tr><td><code>layout_alignParentRight</code></td><td>右对齐</td></tr><tr><td><code>layout_alignParentTop</code></td><td>顶部对齐</td></tr><tr><td><code>layout_alignParentBottom</code></td><td>底部对齐</td></tr><tr><td><code>layout_centerHorizontal</code></td><td>水平居中</td></tr><tr><td><code>layout_centerVertical</code></td><td>垂直居中</td></tr><tr><td><code>layout_centerInParent</code></td><td>中间位置</td></tr></tbody></table></div><h2 id="根据兄弟组件定位的属性"><a href="#根据兄弟组件定位的属性" class="headerlink" title="根据兄弟组件定位的属性"></a>根据兄弟组件定位的属性</h2><div class="table-container"><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>layout_toLeftOf</td><td>放置于参考组件的左边</td></tr><tr><td>layout_toRightOf</td><td>放置于参考组件的右边</td></tr><tr><td>layout_above</td><td>放置于参考组件的上方</td></tr><tr><td>layout_below</td><td>放置于参考组件的下方</td></tr><tr><td>layout_alignTop</td><td>对齐参考组件的上边界</td></tr><tr><td>layout_alignBottom</td><td>对齐参考组件的下边界</td></tr><tr><td>layout_alignLeft</td><td>对齐参考组件的左边界</td></tr><tr><td>layout_alignRight</td><td>对齐参考组件的右边界</td></tr></tbody></table></div><h2 id="其他属性"><a href="#其他属性" class="headerlink" title="其他属性"></a>其他属性</h2><div class="table-container"><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td><code>layout_margin</code></td><td>相对于父容器上下左右的边距</td></tr><tr><td><code>layout_marginLeft</code></td><td>相对于父容器左边的边距</td></tr><tr><td><code>layout_marginTop</code></td><td>相对于父容器上边的边距</td></tr><tr><td><code>layout_marginRight</code></td><td>相对于父容器右边的边距</td></tr><tr><td><code>layout_marginBottom</code></td><td>相对于父容器下边的边距</td></tr><tr><td><code>layout_marginStart</code></td><td>相对于父容器开始位置的边距</td></tr><tr><td><code>layout_marginEnd</code></td><td>相对于父容器结束位置的边距（右边）</td></tr><tr><td><code>layout_marginHorizontal</code></td><td>相对于父容器左右边界的边距(相当于同时指定<code>layout_marginStart</code>和<code>layout_marginEnd</code>的值为相同的的值)</td></tr><tr><td><code>layout_marginVertical</code></td><td>相对于父容器左右边界的边距(相当于同时指定<code>layout_marginTop</code>和<code>layout_marginBottom</code>的值为相同的的值)</td></tr><tr><td><code>padding</code></td><td>设置子容器与自身上下左右到边界的边距</td></tr><tr><td><code>paddingHorizontal</code></td><td>设置子容器与自身左右到边界的边距</td></tr><tr><td><code>paddingVertical</code></td><td>设置子容器与自身上下到边界的边距</td></tr><tr><td><code>paddingLeft</code></td><td>设置子容器与自身左边到边界的边距</td></tr><tr><td><code>paddingTop</code></td><td>设置子容器与自身上边到边界的边距</td></tr><tr><td><code>paddingRight</code></td><td>设置子容器与自身右边到边界的边距</td></tr><tr><td><code>paddingBottom</code></td><td>设置子容器与自身下边到边界的边距</td></tr><tr><td><code>paddingStart</code></td><td>同<code>paddingRight</code></td></tr><tr><td><code>paddingEnd</code></td><td>同<code>paddingRight</code></td></tr></tbody></table></div><blockquote><p>margin是相对于父容器的，padding是相对于自己内部的</p></blockquote><h1 id="RelativeLayout布局"><a href="#RelativeLayout布局" class="headerlink" title="RelativeLayout布局"></a>RelativeLayout布局</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;#FF0000&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    绿色，相对父容器最开始位置，即右上角,相当于Left--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentStart</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#00FF00&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    黄色，相对父容器最开始位置的最右边，相当于Right--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentEnd</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#FFFF00&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--浅蓝色,相对于父容器最开始的位置的最下面--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentBottom</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#00FFFF&quot;</span> /&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!--    黑色，相对于父容器最开始位置，水平居中--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_centerHorizontal</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#000000&quot;</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!--    白色，相对于父容器最开始位置，垂直居中--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_centerVertical</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#FFFFFF&quot;</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!--    蓝色，相对于父容器整体居中--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_centerInParent</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#0000FF&quot;</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!--    粉色,相对于父容器最开始位置最右边+最下边--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentBottom</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentRight</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#FF00FF&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span> </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220502143018092.png" alt="image-20220502143018092"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;#FF0000&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--绿色--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginHorizontal</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#00FF00&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--黄色--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    因为左右的间距都为200dp，中间剩余的间距已经不足100dp,所以显示不下--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginHorizontal</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#FFFF00&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    粉色--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginVertical</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#FF00FF&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    蓝色--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/blue&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginVertical</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#0000FF&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    浅蓝色,显示在蓝色的下方，引用兄弟布局的id--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_below</span>=<span class="string">&quot;@id/blue&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#00FFFF&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220502170916295.png" alt="image-20220502170916295"></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;1.RelativeLayout属性&lt;/p&gt;
&lt;p&gt;2.RelativeLayout布局&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Android" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/Android/"/>
    
    <category term="Android 布局" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/Android/Android-%E5%B8%83%E5%B1%80/"/>
    
    <category term="margin" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/Android/Android-%E5%B8%83%E5%B1%80/margin/"/>
    
    <category term="padding" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/Android/Android-%E5%B8%83%E5%B1%80/padding/"/>
    
    
  </entry>
  
  <entry>
    <title>GridLayout</title>
    <link href="https://dreamcatcherdeng.gitee.io/personal-blog/2022/05/02/GridLayout/"/>
    <id>https://dreamcatcherdeng.gitee.io/personal-blog/2022/05/02/GridLayout/</id>
    <published>2022-05-02T12:33:05.101Z</published>
    <updated>2022-05-02T12:35:45.339Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>1.GridLayout属性</p><p>2.GridLayout布局</p></blockquote><span id="more"></span><h1 id="GridLayout属性"><a href="#GridLayout属性" class="headerlink" title="GridLayout属性"></a>GridLayout属性</h1><h2 id="GridLayout的属性"><a href="#GridLayout的属性" class="headerlink" title="GridLayout的属性"></a>GridLayout的属性</h2><div class="table-container"><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>orientation</td><td>设置排列方向</td></tr><tr><td>columnCount</td><td>设置列数，超过的部分换行显示</td></tr><tr><td>rowCount</td><td>设置行数，超过的部分换列显示</td></tr></tbody></table></div><h2 id="子控件的属性"><a href="#子控件的属性" class="headerlink" title="子控件的属性"></a>子控件的属性</h2><div class="table-container"><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>layout_column</td><td>显示在第几列</td></tr><tr><td>layout_row</td><td>显示在第几行</td></tr><tr><td>layout_rowSpan</td><td>横向跨几行</td></tr><tr><td>layout_columnSpan</td><td>横向跨几列</td></tr><tr><td>layout_columnWeight</td><td>横向剩余空间的权重</td></tr><tr><td>layout_gravity</td><td>在网格中的显示位置</td></tr><tr><td>layout_rowWeight</td><td>纵向剩余空间的权重</td></tr></tbody></table></div><h1 id="GridLayout布局"><a href="#GridLayout布局" class="headerlink" title="GridLayout布局"></a>GridLayout布局</h1><h2 id="设置纵向排列，排列3行"><a href="#设置纵向排列，排列3行" class="headerlink" title="设置纵向排列，排列3行"></a>设置纵向排列，排列3行</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">GridLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:rowCount</span>=<span class="string">&quot;3&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;按钮1&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;按钮2&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;按钮3&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;按钮4&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;按钮5&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;按钮6&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;按钮7&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">GridLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220502201645675.png" alt="image-20220502201645675"></p><h2 id="设置横向排列，排列2列"><a href="#设置横向排列，排列2列" class="headerlink" title="设置横向排列，排列2列"></a>设置横向排列，排列2列</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">GridLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:columnCount</span>=<span class="string">&quot;2&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;按钮1&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;按钮2&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;按钮3&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;按钮4&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;按钮5&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;按钮6&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;按钮7&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">GridLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220502194432119.png" alt="image-20220502194432119"></p><h2 id="子控件属性的使用"><a href="#子控件属性的使用" class="headerlink" title="子控件属性的使用"></a>子控件属性的使用</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">GridLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    使用layout_rowWeight确定纵向剩余空间权重--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_row</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_column</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_columnWeight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;按钮1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    使用layout_rowWeight确定纵向剩余空间权重--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_row</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_column</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_columnWeight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;按钮2&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--使用layout_columnSpan，设置跨两列--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_row</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_column</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_columnSpan</span>=<span class="string">&quot;2&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">&quot;fill&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;按钮3&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    使用layout_rowWeight确定纵向剩余空间权重--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_row</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_rowWeight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_column</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;按钮4&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--使用layout_columnWeight确定横向剩余空间权重--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_columnWeight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;按钮5&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_row</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_column</span>=<span class="string">&quot;3&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;按钮6&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_row</span>=<span class="string">&quot;2&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_column</span>=<span class="string">&quot;3&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;按钮7&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">GridLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220502202258295.png" alt="image-20220502202258295"></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;1.GridLayout属性&lt;/p&gt;
&lt;p&gt;2.GridLayout布局&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Android" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/Android/"/>
    
    <category term="Android 布局" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/Android/Android-%E5%B8%83%E5%B1%80/"/>
    
    
  </entry>
  
  <entry>
    <title>FrameLayout</title>
    <link href="https://dreamcatcherdeng.gitee.io/personal-blog/2022/05/02/FrameLayout/"/>
    <id>https://dreamcatcherdeng.gitee.io/personal-blog/2022/05/02/FrameLayout/</id>
    <published>2022-05-02T12:33:05.099Z</published>
    <updated>2022-05-02T12:35:45.337Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>1.FrameLayout布局</p><p>2.FrameLayout前景色设置</p></blockquote><span id="more"></span><h1 id="FrameLayout布局"><a href="#FrameLayout布局" class="headerlink" title="FrameLayout布局"></a>FrameLayout布局</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">FrameLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;#FF0000&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;400dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;400dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#000000&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;300dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;300dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#FFFF00&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#0000FF&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220502164422675.png" alt="image-20220502164422675"></p><h1 id="FrameLayout前景色设置"><a href="#FrameLayout前景色设置" class="headerlink" title="FrameLayout前景色设置"></a>FrameLayout前景色设置</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">FrameLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;#FF0000&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;400dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;400dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#000000&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:foreground</span>=<span class="string">&quot;@drawable/ic_launcher_background&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:foregroundGravity</span>=<span class="string">&quot;right|bottom&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;300dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;300dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#FFFF00&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#0000FF&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220502165039637.png" alt="image-20220502165039637"></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;1.FrameLayout布局&lt;/p&gt;
&lt;p&gt;2.FrameLayout前景色设置&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Android" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/Android/"/>
    
    <category term="Android 布局" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/Android/Android-%E5%B8%83%E5%B1%80/"/>
    
    
  </entry>
  
  <entry>
    <title>ConstrainLayout</title>
    <link href="https://dreamcatcherdeng.gitee.io/personal-blog/2022/05/02/ConstrainLayout/"/>
    <id>https://dreamcatcherdeng.gitee.io/personal-blog/2022/05/02/ConstrainLayout/</id>
    <published>2022-05-02T12:33:05.086Z</published>
    <updated>2022-05-02T12:38:54.388Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><p><a href="https://www.bilibili.com/video/BV13y4y1E7pF?p=20">视频</a></p><p>ConstrainLayout直接使用布局设计器拖动更方便，无需记属性</p>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;
&lt;p&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV13y4y1E7pF?p=20&quot;&gt;视频&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ConstrainLayout直接使用布局设计器拖动更方便，无需记属性&lt;/p&gt;
</summary>
      
    
    
    
    <category term="Android" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/Android/"/>
    
    <category term="Android 布局" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/Android/Android-%E5%B8%83%E5%B1%80/"/>
    
    
  </entry>
  
  <entry>
    <title>PopupWindow</title>
    <link href="https://dreamcatcherdeng.gitee.io/personal-blog/2022/05/01/PopupWindow/"/>
    <id>https://dreamcatcherdeng.gitee.io/personal-blog/2022/05/01/PopupWindow/</id>
    <published>2022-05-01T12:38:19.780Z</published>
    <updated>2022-05-02T12:35:45.349Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>1.设置PopupWindow属性</p><p>2.PopupWindow的使用</p></blockquote><span id="more"></span><h1 id="设置PopupWindow属性"><a href="#设置PopupWindow属性" class="headerlink" title="设置PopupWindow属性"></a>设置PopupWindow属性</h1><div class="table-container"><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>setContentView(View contentView)</td><td>设置PopupWindow:显示的View</td></tr><tr><td>showAsDropDown(View anchor)</td><td>相对某个控件的位置（正左下方），无偏移</td></tr><tr><td>setFocusable(boolean focusable)</td><td>设置是否获取焦点</td></tr><tr><td>setBackgroundDrawable(Drawable background)</td><td>设置背景</td></tr><tr><td>dismiss()</td><td>关闭弹窗</td></tr><tr><td>setAnimationStyle(int animationStyle)</td><td>设置加载动画</td></tr><tr><td>setTouchable(boolean touchable)</td><td>设置PopupWindow可以触摸</td></tr><tr><td>setOutsideTouchable(boolean touchable)</td><td>设置PopupWindow外面的可以触摸</td></tr></tbody></table></div><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><p>在<code>activity_main.xml</code>中的代码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;显示popupWindow&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">        <span class="attr">android:onClick</span>=<span class="string">&quot;showPopupWindow&quot;</span></span></span><br><span class="line"><span class="tag">         /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在<code>popup_view.xml</code>中的代码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;@drawable/ic_launcher_background&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;北京&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:onClick</span>=<span class="string">&quot;beiJin&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;上海&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:onClick</span>=<span class="string">&quot;shangHai&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在<code>MainActivity.java中的代码</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.popupwindow;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.ActionBar;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.PopupWindow;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    PopupWindow popupWindow;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">beiJin</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;北京被点击了&quot;</span>);</span><br><span class="line">        <span class="comment">//点击后关闭窗口</span></span><br><span class="line">        popupWindow.dismiss();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">shangHai</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;上海被点击了&quot;</span>);</span><br><span class="line">        <span class="comment">//点击后关闭窗口</span></span><br><span class="line">        popupWindow.dismiss();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showPopupWindow</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        View layoutPopupWindow = getLayoutInflater().inflate(R.layout.popup_view,<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//第一个参数为layout布局，为弹窗的布局资源，第二三个为设置弹窗大小，第四个为点击点击PopupWindow外的区域可以自动收起弹窗</span></span><br><span class="line">        popupWindow = <span class="keyword">new</span> PopupWindow(layoutPopupWindow, ViewGroup.LayoutParams.WRAP_CONTENT,ViewGroup.LayoutParams.WRAP_CONTENT,<span class="keyword">true</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//设置相对于显示在某个View的下方，该方法有重载，可设置p</span></span><br><span class="line">        popupWindow.showAsDropDown(view);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h1><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/1651407198094.gif" alt="1651407198094 00_00_00-00_00_30"></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;1.设置PopupWindow属性&lt;/p&gt;
&lt;p&gt;2.PopupWindow的使用&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>JavaScript and NodeJs</title>
    <link href="https://dreamcatcherdeng.gitee.io/personal-blog/2022/05/01/Nodejs/"/>
    <id>https://dreamcatcherdeng.gitee.io/personal-blog/2022/05/01/Nodejs/</id>
    <published>2022-05-01T09:36:31.275Z</published>
    <updated>2022-05-02T12:35:45.385Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文介绍了Node.js的安装与配置方法,javascript的部分新增语法特性,收录了javascript和Node.js学习网站和前端框架网站,收集了学习过程中遇到的问题</p></blockquote><span id="more"></span><h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><ul><li><p><a href="http://javascript.ruanyifeng.com/grammar/basic.html">阮一峰Javascript标准参考教程</a> </p></li><li><p><a href="https://www.javascript.fun/">前端工坊</a> javascript和node.js框架库</p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript">MDN Web Docs</a> javascript 权威教程</p></li><li><p><a href="https://element.eleme.cn/#/en-US">Element-ui</a> 前端Ui组件库</p></li><li><p><a href="https://www.bootcss.com/">Bootstrap</a> 前端Ui组件库</p></li><li><p><a href="https://www.chinaw3c.org/">W3C中文官网</a></p></li><li><p><a href="https://cnodejs.org/">Node.js中文社区</a></p></li></ul><h1 id="Node-js安装与配置"><a href="#Node-js安装与配置" class="headerlink" title="Node.js安装与配置"></a>Node.js安装与配置</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>从官网下载Node.js <a href="https://nodejs.org/en/">node官网</a>设置安装路径一直点击<code>next</code>就可以了</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>默认情况下，npm下载的包都存放在<code>C:\Users\YOU\AppData\Roaming\npm\node_modules</code>目录的下<br>缓存放在<code>C:\Users\YOU\AppData\Local\npm-cache</code>下,可使用<br><code>npm config list -l</code>查看详情信息</p><p>更改默认缓存和包的位置，设置为自定义路径<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm config set prefix &quot;...\NodeJs\npm_gloabal_config\npm&quot;</span><br><span class="line"></span><br><span class="line">npm config set cache &quot;...\NodeJs\npm_gloabal_config\npm-cache&quot;</span><br></pre></td></tr></table></figure><br>将该路径加入到环境变量<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">...\NodeJs\npm_gloabal_config\npm\node_modules</span><br></pre></td></tr></table></figure></p><h2 id="Nodejs权限设置"><a href="#Nodejs权限设置" class="headerlink" title="Nodejs权限设置"></a>Nodejs权限设置</h2><p>当nodejs安装在其他盘时，无法使用 <code>npm install</code>命令，需要对node的安装目录进行权限设置，需要赋予用户对该文件的完全控制、修改等权限</p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20211107184427464.png" alt="image-20211107184427464"></p><h2 id="安装国内淘宝cnpm"><a href="#安装国内淘宝cnpm" class="headerlink" title="安装国内淘宝cnpm"></a>安装国内淘宝cnpm</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h1 id="Node-js学习指南-中文官网入门教程"><a href="#Node-js学习指南-中文官网入门教程" class="headerlink" title="Node.js学习指南 中文官网入门教程"></a>Node.js学习指南 <a href="http://nodejs.cn/learn">中文官网入门教程</a></h1><h2 id="新手入门目录"><a href="#新手入门目录" class="headerlink" title="新手入门目录"></a>新手入门目录</h2><ul><li>词汇结构</li><li>表达式</li><li>数据类型</li><li>类</li><li>变量</li><li>函数</li><li>this</li><li>箭头函数</li><li>循环</li><li>作用域</li><li>数组</li><li>模板字面量</li><li>分号</li><li>严格模式</li><li>ECMAScript 6、2016、2017<h2 id="高手进阶须知"><a href="#高手进阶须知" class="headerlink" title="高手进阶须知"></a>高手进阶须知</h2></li><li>异步编程与回调</li><li>定时器</li><li>Promise</li><li>Async 与 Await</li><li>闭包</li><li>事件循环</li></ul><h1 id="Node-js介绍"><a href="#Node-js介绍" class="headerlink" title="Node.js介绍"></a>Node.js介绍</h1><blockquote><p>Node.js® is a JavaScript runtime built on Chrome’s V8 JavaScript engine.   ——<a href="https://nodejs.org/en/">node.js官网</a></p><p>Node.js是基于chrome’s V8 JavaScript 引擎的Javascript运行时环境</p></blockquote><h2 id="Node-js和浏览器的区别"><a href="#Node-js和浏览器的区别" class="headerlink" title="Node.js和浏览器的区别"></a>Node.js和浏览器的区别</h2><ul><li>Node.js = EcmaScript + API</li><li>浏览器 = EcmaScript + BOM + DOM</li></ul><h1 id="安装-vue-cli-3-12-1"><a href="#安装-vue-cli-3-12-1" class="headerlink" title="安装@vue/cli@3.12.1"></a>安装@vue/cli@3.12.1</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i @vue/cli@3.12.1 -g</span><br></pre></td></tr></table></figure><p>命令行输入<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vue ui</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>运行失败，将<code>@vue下</code>的<code>cli</code>文件拷贝到<code>\@vue\cli\node_modules\@vue</code>目录下即可</p><blockquote><p>虽然很让包重复了，但能有效解决问题</p><p>导致运行失败的原因:由于自定义包路径时将包目录设置成立<code>\NodeJs\npm_gloabal_config\npm\node_modules</code>导致最终生成的包下载目录为<br><code>\NodeJs\npm_gloabal_config\npm\node_modules\node_modules</code>,<br><code>vue ui</code>启动时找到的加载目录不对，导致无法启动<br>正确的设置应该是<code>\NodeJs\npm_gloabal_config\npm\</code>,当npm下载包时将自动在该目录下创建<code>node_modules</code>目录</p></blockquote><h1 id="ES6新增特性"><a href="#ES6新增特性" class="headerlink" title="ES6新增特性"></a>ES6新增特性</h1><h2 id="let和const"><a href="#let和const" class="headerlink" title="let和const"></a>let和const</h2><p>let用于定义变量，const用于定义常量<br>使用let和const替代var，可以避免变量穿透和常量被修改，使用<code>&#39;use strict&#39;</code>启用严格检查模式，必选使用let,const,var定义变量，否则编译报错</p><h2 id="模板字符串"><a href="#模板字符串" class="headerlink" title="模板字符串"></a>模板字符串</h2><p>ES6使用字符串模板语法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;张三&quot;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="string">&quot;18&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">introduce1</span>(<span class="params">person</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;我是&quot;</span> + person.name + <span class="string">&quot;,我今年&quot;</span> + person.age + <span class="string">&quot;岁!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//ES6模板字符串</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">introduce2</span>(<span class="params">person</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`我是<span class="subst">$&#123;person.name&#125;</span>我今年<span class="subst">$&#123;person.age&#125;</span>岁!`</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(introduce(person))</span><br><span class="line"><span class="comment">//输出:我是张三我今年18岁!</span></span><br></pre></td></tr></table></figure><h2 id="函数默认参数"><a href="#函数默认参数" class="headerlink" title="函数默认参数"></a>函数默认参数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//调用sum()返回NaN</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//调用sum()返回0</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">a = <span class="number">0</span>, b = <span class="number">0</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> sum = <span class="function"><span class="keyword">function</span> (<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> sum = <span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// do something else</span></span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//当返回函数体可以直接由一行代码计算出返回结果时，可以省略return</span></span><br><span class="line"><span class="keyword">var</span> sum = <span class="function">(<span class="params">a, b</span>) =&gt;</span> a + b;</span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>,<span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//当函数体只有一个参数时，可以省略小括号</span></span><br><span class="line"><span class="keyword">var</span> sum = <span class="function"><span class="params">arr</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> result = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        result = result + arr[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr2 = arr.map(<span class="function"><span class="params">obj</span> =&gt;</span> obj * <span class="number">2</span>);</span><br></pre></td></tr></table></figure><h2 id="对象简写"><a href="#对象简写" class="headerlink" title="对象简写"></a>对象简写</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> age = <span class="number">18</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//key和value名称一样时，可以直接使用value直接表示key和value</span></span><br><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">    <span class="attr">name</span>: name,</span><br><span class="line">    <span class="attr">age</span>: age</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> person1 = &#123;</span><br><span class="line">    name,</span><br><span class="line">    age</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="对象解构"><a href="#对象解构" class="headerlink" title="对象解构"></a>对象解构</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;张三&quot;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">18</span>,</span><br><span class="line">    <span class="attr">height</span>: <span class="number">180</span>,</span><br><span class="line">    <span class="attr">gender</span>: <span class="string">&quot;男&quot;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> &#123; name, age, height, gender &#125; = person;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(person.name, person.age, person.height, person.gender)</span><br><span class="line"><span class="built_in">console</span>.log(person[<span class="string">&#x27;name&#x27;</span>], person[<span class="string">&#x27;age&#x27;</span>], person[<span class="string">&#x27;height&#x27;</span>], person[<span class="string">&#x27;gender&#x27;</span>])</span><br><span class="line"><span class="built_in">console</span>.log(name, age, height, gender)</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输出：</span></span><br><span class="line"><span class="comment">张三 18 180 男</span></span><br><span class="line"><span class="comment">张三 18 180 男</span></span><br><span class="line"><span class="comment">张三 18 180 男</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="对象传播操作符"><a href="#对象传播操作符" class="headerlink" title="对象传播操作符"></a>对象传播操作符</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;张三&quot;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">18</span>,</span><br><span class="line">    <span class="attr">height</span>: <span class="number">180</span>,</span><br><span class="line">    <span class="attr">gender</span>: <span class="string">&quot;男&quot;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将未被接受的属性全部赋值到...后的变量中</span></span><br><span class="line"><span class="keyword">var</span> &#123; name, age, ...other &#125; = person;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(name, age, other.gender, other.height)</span><br></pre></td></tr></table></figure><h1 id="Node-js-API"><a href="#Node-js-API" class="headerlink" title="Node.js API"></a>Node.js API</h1><h1 id="process"><a href="#process" class="headerlink" title="process"></a>process</h1><p>process是一个全局内置对象，可以在代码中的任何位置访问此对象，这个对象代表我们的node.js代码宿主的操作系统进程对象。</p><p>使用process对象可以截获进程的异常、退出等事件，也可以获取进程的当前目录、环境变量、内存占用等信息，还可以执行进程退出、工作目录切换等操作。</p><h2 id="获取当前文件路径"><a href="#获取当前文件路径" class="headerlink" title="获取当前文件路径"></a>获取当前文件路径</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var path = process.cwd()</span><br><span class="line">console.log(path);</span><br></pre></td></tr></table></figure><h2 id="切换目录"><a href="#切换目录" class="headerlink" title="切换目录"></a>切换目录</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">process.chdir(&quot;D:/dir&quot;);</span><br></pre></td></tr></table></figure><h2 id="标准输出流"><a href="#标准输出流" class="headerlink" title="标准输出流"></a>标准输出流</h2><p>日志输出就是用标准输出封装<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.hello = <span class="function"><span class="keyword">function</span>(<span class="params">d</span>)</span>&#123;</span><br><span class="line">    process.stdout.write(d+<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.hello(<span class="string">&quot;哈哈哈&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log = <span class="function"><span class="keyword">function</span>(<span class="params">d</span>)</span>&#123;</span><br><span class="line">    process.stdout.write(d+<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;哈哈哈&quot;</span>)</span><br></pre></td></tr></table></figure></p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20211107203906303.png" alt="image-20211107203906303"></p><h2 id="标准错误输出"><a href="#标准错误输出" class="headerlink" title="标准错误输出"></a>标准错误输出</h2><p>标准错误输出用来输入错误信息<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">process.stderr.write(<span class="string">&quot;test&quot;</span>)</span><br></pre></td></tr></table></figure></p><h2 id="标准输入流"><a href="#标准输入流" class="headerlink" title="标准输入流"></a>标准输入流</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">process.stdin.on(<span class="string">&#x27;readable&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> chunk = process.stdin.read();</span><br><span class="line">    <span class="keyword">if</span> (chunk !== <span class="literal">null</span>) &#123;</span><br><span class="line">        process.stdout.write(<span class="string">&#x27;data: &#x27;</span> + chunk);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20211107204402314.png" alt="image-20211107204402314"></p><h2 id="退出"><a href="#退出" class="headerlink" title="退出"></a>退出</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">process.exit(code);</span><br></pre></td></tr></table></figure><h2 id="监听事件"><a href="#监听事件" class="headerlink" title="监听事件"></a>监听事件</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">process.on(<span class="string">&#x27;event name&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">    <span class="comment">//do something</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">process.stdin.setEncoding(编码);</span><br><span class="line"> </span><br><span class="line">process.stdout.setEncoding(编码);</span><br><span class="line"> </span><br><span class="line">process.stderr.setEncoding(编码);</span><br></pre></td></tr></table></figure><h1 id="fs模块-文件操作"><a href="#fs模块-文件操作" class="headerlink" title="fs模块(文件操作)"></a>fs模块(文件操作)</h1><p>fs没有专门的文件移动函数，可以通过重命名文件实现文件移动</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"> </span><br><span class="line">fs.rename(oldPath,newPath,<span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span><br><span class="line">   <span class="keyword">if</span> (err) <span class="keyword">throw</span> err;</span><br><span class="line">   <span class="built_in">console</span>.log(<span class="string">&#x27;renamed complete&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="url模块-url操作"><a href="#url模块-url操作" class="headerlink" title="url模块(url操作))"></a>url模块(url操作))</h1><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20211107205859438.png" alt="image-20211107205859438"></p><blockquote><p>import和require都可以导入模块,<code>require/exports</code>是CommonJS的标准,而<code>import/export</code>是ECMAScript2015（ES6）标准</p><p>CommonJS 加载的是一个对象（即 module.exports 属性），该对象只有在脚本运行完才会生成。而 ES6 模块不是对象，它的对外接口只是一种静态定义，在代码静态解析阶段就会生成。——阮一峰</p></blockquote><h1 id="使用node-js创建一个服务"><a href="#使用node-js创建一个服务" class="headerlink" title="使用node.js创建一个服务"></a>使用node.js创建一个服务</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用require()函数添加导入node的module</span></span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>);</span><br><span class="line">http.createServer(<span class="function"><span class="keyword">function</span> (<span class="params">request, response</span>) </span>&#123;</span><br><span class="line">    response.writeHead(<span class="number">200</span>, &#123; <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/plain&#x27;</span> &#125;);</span><br><span class="line">    response.end(<span class="string">&#x27;Hello World&#x27;</span>);</span><br><span class="line">&#125;).listen(<span class="number">8081</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;Server running at http://127.0.0.1:8081/&#x27;</span>);</span><br></pre></td></tr></table></figure><h1 id="使用node-js连接mysql数据库"><a href="#使用node-js连接mysql数据库" class="headerlink" title="使用node.js连接mysql数据库"></a>使用node.js连接mysql数据库</h1><blockquote><p>可去<a href="https://www.npmjs.com/">nmp的官网</a>搜索下载需要的module, 下载方法参加<a href="https://docs.npmjs.com/">npm官方文档</a>,搜索结果页附带模块的具体使用教程的官方地址<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//当没有mysql的module时,使用nmp install mysql</span></span><br><span class="line"><span class="keyword">var</span> mysql = <span class="built_in">require</span>(<span class="string">&quot;mysql&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> connection = mysql.createConnection(&#123;</span><br><span class="line">    <span class="attr">host</span>: <span class="string">&quot;localhost&quot;</span>,</span><br><span class="line">    <span class="attr">user</span>: <span class="string">&quot;********&quot;</span>,</span><br><span class="line">    <span class="attr">password</span>: <span class="string">&quot;********&quot;</span>,</span><br><span class="line">    <span class="attr">database</span>: <span class="string">&quot;********&quot;</span></span><br><span class="line">&#125;);</span><br><span class="line">connection.connect();</span><br><span class="line"></span><br><span class="line">connection.query(<span class="string">&#x27;select * from exam_record_2012&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">error, results, fields</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (error) <span class="keyword">throw</span> error;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(results);</span><br><span class="line">&#125;);</span><br><span class="line">connection.end();</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>连接时会报错<code>ER_NOT_SUPPORTED_AUTH_MODE</code><br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">code: &#x27;<span class="title">ER_NOT_SUPPORTED_AUTH_MODE</span>&#x27;,</span></span><br><span class="line"><span class="function"><span class="title">errno</span>: 1251,</span></span><br><span class="line"><span class="function"><span class="title">sqlMessage</span>: &#x27;<span class="title">Client</span> <span class="title">does</span> <span class="title">not</span> <span class="title">support</span> <span class="title">authentication</span> <span class="title">protocol</span> <span class="title">requested</span> <span class="title">by</span> <span class="title">server</span>; <span class="title">consider</span> <span class="title">upgrading</span> <span class="title">MySQL</span> <span class="title">client</span>&#x27;,</span></span><br><span class="line"><span class="function"><span class="title">sqlState</span>: &#x27;08004&#x27;,</span></span><br><span class="line"><span class="function"><span class="title">fatal</span>: <span class="title">true</span></span></span><br></pre></td></tr></table></figure><br>这是因为mysql8.0后采用caching_sha2_password加密，而node的mysql连接库采用mysql_native_password 加密方式<br>登录mysql重新设置mysql加密方式</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span><span class="keyword">alter</span> <span class="keyword">user</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> identified <span class="keyword">with</span> mysql_native_password <span class="keyword">by</span> <span class="string">&#x27;yourpassword&#x27;</span>;</span><br><span class="line">查看表是否更改</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> host,<span class="keyword">user</span>,plugin <span class="keyword">from</span> <span class="keyword">user</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+------------------+-----------------------+</span></span><br><span class="line"><span class="operator">|</span> host      <span class="operator">|</span> <span class="keyword">user</span>             <span class="operator">|</span> plugin                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+------------------+-----------------------+</span></span><br><span class="line"><span class="operator">|</span> localhost <span class="operator">|</span> mysql.infoschema <span class="operator">|</span> caching_sha2_password <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> localhost <span class="operator">|</span> mysql.session    <span class="operator">|</span> caching_sha2_password <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> localhost <span class="operator">|</span> mysql.sys        <span class="operator">|</span> caching_sha2_password <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> localhost <span class="operator">|</span> root             <span class="operator">|</span> mysql_native_password <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+------------------+-----------------------+</span></span><br></pre></td></tr></table></figure><p>成功修改后，重新运行连接mysql的js代码结果如下<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  RowDataPacket &#123;</span><br><span class="line"><span class="function">    id: 1,</span></span><br><span class="line"><span class="function">    <span class="title">uid</span>: 123,</span></span><br><span class="line"><span class="function">    <span class="title">exam_id</span>: 123,</span></span><br><span class="line"><span class="function">    <span class="title">start_time</span>: 2021-11-05<span class="title">T10</span>:57:50.000<span class="title">Z</span>,</span></span><br><span class="line"><span class="function">    <span class="title">submit_time</span>: 2021-11-20<span class="title">T10</span>:57:55.000<span class="title">Z</span>,</span></span><br><span class="line"><span class="function">    <span class="title">score</span>: 95</span></span><br><span class="line"><span class="function">  &#125;</span></span><br><span class="line"><span class="function">]</span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文介绍了Node.js的安装与配置方法,javascript的部分新增语法特性,收录了javascript和Node.js学习网站和前端框架网站,收集了学习过程中遇到的问题&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="JavaScript" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/JavaScript/"/>
    
    <category term="ES6" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/JavaScript/ES6/"/>
    
    <category term="Node" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/JavaScript/Node/"/>
    
    
  </entry>
  
  <entry>
    <title>AlertDialog</title>
    <link href="https://dreamcatcherdeng.gitee.io/personal-blog/2022/05/01/AlertDialog/"/>
    <id>https://dreamcatcherdeng.gitee.io/personal-blog/2022/05/01/AlertDialog/</id>
    <published>2022-05-01T08:19:34.119Z</published>
    <updated>2022-05-02T12:35:45.330Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>1.AlertDialog属性</p><p>2.AlertDialog的使用</p></blockquote><span id="more"></span><h1 id="AlertDialog属性"><a href="#AlertDialog属性" class="headerlink" title="AlertDialog属性"></a>AlertDialog属性</h1><h2 id="使用AlertDialog-Builder为dialog设置属性"><a href="#使用AlertDialog-Builder为dialog设置属性" class="headerlink" title="使用AlertDialog.Builder为dialog设置属性"></a>使用<code>AlertDialog.Builder</code>为<code>dialog</code>设置属性</h2><div class="table-container"><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>icon</td><td>图标</td></tr><tr><td>Message</td><td>消息</td></tr><tr><td>negativeButton</td><td>取消按钮</td></tr><tr><td>positiveButton</td><td>确认按钮</td></tr><tr><td>neutralButton</td><td>中立按钮（并非在中间，而是根据系统的布局决定排列位置）</td></tr><tr><td>view</td><td>dialog显示的布局</td></tr><tr><td>title</td><td>标题</td></tr></tbody></table></div><h1 id="AlertDialog的使用"><a href="#AlertDialog的使用" class="headerlink" title="AlertDialog的使用"></a>AlertDialog的使用</h1><h2 id="xml布局文件"><a href="#xml布局文件" class="headerlink" title="xml布局文件"></a>xml布局文件</h2><p>该文件名为<code>activity_main.xml</code>，该文件中放置了一个<code>Button</code>，实现功能为点击<code>Button</code>弹出<code>Dialog</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/button&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;显示Dialog&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:onClick</span>=<span class="string">&quot;show&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>该文件名为<code>dialog.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;@drawable/ic_launcher_background&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;这是Dialog布局内容&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="java代码"><a href="#java代码" class="headerlink" title="java代码"></a>java代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.alertdialog;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AlertDialog;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.DialogInterface;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line"><span class="comment">//使用布局解析器解析dialog.xml,将其转化为View</span></span><br><span class="line">        View dialog = getLayoutInflater().inflate(R.layout.dialog, <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">        AlertDialog.Builder alertDialog = <span class="keyword">new</span> AlertDialog.Builder(<span class="keyword">this</span>);</span><br><span class="line">        alertDialog.setTitle(<span class="string">&quot;对话框&quot;</span>)</span><br><span class="line">                .setIcon(R.drawable.ic_launcher_background)</span><br><span class="line">                .setMessage(<span class="string">&quot;对话框里显示内容&quot;</span>)</span><br><span class="line">                .setNegativeButton(<span class="string">&quot;取消按钮&quot;</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</span><br><span class="line">                        System.out.println(<span class="string">&quot;取消按钮被点击了&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                .setPositiveButton(<span class="string">&quot;确认按钮&quot;</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</span><br><span class="line">                        System.out.println(<span class="string">&quot;确认按钮被点击了&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                .setNeutralButton(<span class="string">&quot;中间&quot;</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</span><br><span class="line">                        System.out.println(<span class="string">&quot;中间按钮被点击了&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                .setView(dialog)</span><br><span class="line">                .create()</span><br><span class="line">                .show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h2><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/ezgif-1-f0edb831b7.gif" alt="ezgif-1-f0edb831b7"></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;1.AlertDialog属性&lt;/p&gt;
&lt;p&gt;2.AlertDialog的使用&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Android" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/Android/"/>
    
    <category term="Android 控件" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/Android/Android-%E6%8E%A7%E4%BB%B6/"/>
    
    
  </entry>
  
  <entry>
    <title>ToolBar</title>
    <link href="https://dreamcatcherdeng.gitee.io/personal-blog/2022/05/01/ToolBar/"/>
    <id>https://dreamcatcherdeng.gitee.io/personal-blog/2022/05/01/ToolBar/</id>
    <published>2022-05-01T07:56:17.913Z</published>
    <updated>2022-05-02T12:35:45.363Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><blockquote><ol><li>ToolBar常见属性设置</li><li>设置navigationIcon可被点击</li><li>设置ToolBar的Title居中</li></ol></blockquote><h1 id="ToolBar常见属性设置"><a href="#ToolBar常见属性设置" class="headerlink" title="ToolBar常见属性设置"></a>ToolBar常见属性设置</h1><div class="table-container"><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>android:background</td><td>背景</td></tr><tr><td>app:title</td><td>标题</td></tr><tr><td>app:subtitle</td><td>子标题</td></tr><tr><td>app:titleTextColor</td><td>颜色</td></tr><tr><td>app:subtitleTextColor</td><td>子标题颜色</td></tr><tr><td>app:titleMarginStart</td><td>标题距离左边开始的间距(有Icon相对于Icon,无Icon相对于父容器边界)</td></tr><tr><td>app:navigationIcon</td><td>导航图标</td></tr><tr><td>app:logo</td></tr></tbody></table></div><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">androidx.appcompat.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/toolbar1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;?attr/actionBarSize&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#00FF00&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:title</span>=<span class="string">&quot;大标题&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:subtitle</span>=<span class="string">&quot;小标题&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:titleTextColor</span>=<span class="string">&quot;#FF0000&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:subtitleTextColor</span>=<span class="string">&quot;#0000FF&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:titleMarginStart</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:navigationIcon</span>=<span class="string">&quot;@drawable/ic_baseline_arrow_back_24&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:logo</span>=<span class="string">&quot;@drawable/ic_launcher_background&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220501152343113.png" alt="image-20220501152343113"></p><h1 id="设置navigationIcon可被点击"><a href="#设置navigationIcon可被点击" class="headerlink" title="设置navigationIcon可被点击"></a>设置navigationIcon可被点击</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Toolbar toolbar = findViewById(R.id.toolbar1);</span><br><span class="line"></span><br><span class="line">toolbar.setNavigationOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;箭头被点击了!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="设置ToolBar的Title居中"><a href="#设置ToolBar的Title居中" class="headerlink" title="设置ToolBar的Title居中"></a>设置ToolBar的Title居中</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">androidx.appcompat.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/toolbar2&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;?attr/actionBarSize&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#00FF00&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:navigationIcon</span>=<span class="string">&quot;@drawable/ic_baseline_arrow_back_24&quot;</span></span></span><br><span class="line"><span class="tag">        &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;标题&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">androidx.appcompat.widget.Toolbar</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220501153306602.png" alt="image-20220501153306602"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;ToolBar常见属性设置&lt;/li&gt;
&lt;li&gt;设置navigationIcon可被点击&lt;/li&gt;
&lt;li&gt;设置ToolBar的Title居中&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote</summary>
      
    
    
    
    <category term="Android" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/Android/"/>
    
    <category term="Android 控件" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/Android/Android-%E6%8E%A7%E4%BB%B6/"/>
    
    
  </entry>
  
  <entry>
    <title>Notification</title>
    <link href="https://dreamcatcherdeng.gitee.io/personal-blog/2022/04/30/Notification/"/>
    <id>https://dreamcatcherdeng.gitee.io/personal-blog/2022/04/30/Notification/</id>
    <published>2022-04-30T09:19:43.836Z</published>
    <updated>2022-05-02T12:35:45.347Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>创建通知服务</p></blockquote><span id="more"></span><h1 id="创建通知服务"><a href="#创建通知服务" class="headerlink" title="创建通知服务"></a>创建通知服务</h1><div class="table-container"><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>setSmallIcon</td><td>设置通知的左上角小图标，只能是Alpha通道，不能包含RGB</td></tr><tr><td>setColor</td><td>为图标设置颜色</td></tr><tr><td>setContentTitle</td><td>设置通知Title</td></tr><tr><td>setContentText</td><td>设置通知内容</td></tr><tr><td>setLargeIcon</td><td>设置右侧大图标</td></tr><tr><td>setAutoCancel</td><td>设置点击通知弹窗后是否自动删除通知</td></tr><tr><td>setContentIntent</td><td>设置点击通知后跳转的界面</td></tr><tr><td>setPriority</td><td>设置通知的</td></tr></tbody></table></div><p>对<code>NotificationChannel</code>的通知重要程度的说明</p><div class="table-container"><table><thead><tr><th>IMPORTANCE_NONE</th><th>关闭通知</th></tr></thead><tbody><tr><td>IMPORTANCE_MIN</td><td>开启通知，不会弹出，但没有提示音，状态栏中无显示</td></tr><tr><td>IMPORTANCE_LOW</td><td>开启通知，不会弹出，不发出提示音，状态栏中显示</td></tr><tr><td>IMPORTANCE_DEFAULT</td><td>开启通知，不会弹出，发出提示音,状态栏中显示</td></tr><tr><td>IMPORTANCE_HIGH</td><td>开启通知，会弹出，发出提示音，状态栏中显示</td></tr></tbody></table></div><h2 id="Activity中的代码"><a href="#Activity中的代码" class="headerlink" title="Activity中的代码"></a>Activity中的代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    NotificationManager manager;</span><br><span class="line">    Notification notification;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建通知服务管理器</span></span><br><span class="line">        manager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//8.0以后引入了channel，需要设置ChannelID</span></span><br><span class="line">        <span class="keyword">if</span>(Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O)&#123;</span><br><span class="line">            NotificationChannel notificationChannel = <span class="keyword">new</span> NotificationChannel(<span class="string">&quot;hello&quot;</span>,<span class="string">&quot;测试&quot;</span>,NotificationManager.IMPORTANCE_HIGH);</span><br><span class="line">            manager.createNotificationChannel(notificationChannel);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//创建跳转意图，该跳转意图跳转到IntentActivity</span></span><br><span class="line">        Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>,IntentActivity.class);</span><br><span class="line">        PendingIntent pendingIntent = PendingIntent.getActivity(<span class="keyword">this</span>,<span class="number">0</span>,intent,<span class="number">0</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//channelId需要和创建的NotificationChannel的Id一致</span></span><br><span class="line">        notification = <span class="keyword">new</span> NotificationCompat.Builder(<span class="keyword">this</span>, <span class="string">&quot;hello&quot;</span>)</span><br><span class="line">                .setSmallIcon(R.drawable.notification_icon)</span><br><span class="line">                .setColor(Color.parseColor(<span class="string">&quot;#FF0000&quot;</span>))</span><br><span class="line">                .setContentTitle(<span class="string">&quot;HelloAndroid&quot;</span>)</span><br><span class="line">                .setContentText(<span class="string">&quot;你的账户有风险&quot;</span>)</span><br><span class="line">                .setLargeIcon(BitmapFactory.decodeResource(getResources(),R.drawable.lake))</span><br><span class="line">                .setAutoCancel(<span class="keyword">true</span>)</span><br><span class="line">                .setContentIntent(pendingIntent )</span><br><span class="line">                .setPriority(NotificationCompat.PRIORITY_DEFAULT)</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendNotification</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        manager.notify(<span class="number">1</span>, notification);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">cancelNotification</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//cancel的id需要和notify的id一致</span></span><br><span class="line">        manager.cancel(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IntentActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(<span class="meta">@Nullable</span> Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_intent);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="资源布局文件"><a href="#资源布局文件" class="headerlink" title="资源布局文件"></a>资源布局文件</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/textView&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;HelloIntent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:layout_editor_absoluteX</span>=<span class="string">&quot;137dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:layout_editor_absoluteY</span>=<span class="string">&quot;395dp&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;发送通知&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:onClick</span>=<span class="string">&quot;sendNotification&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;取消通知&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:onClick</span>=<span class="string">&quot;cancelNotification&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h2><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/1651310063282_.gif" alt="1651310063282_"></p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/1651310292469_.gif" alt="1651310292469_"></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;创建通知服务&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Android" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/Android/"/>
    
    <category term="Android 服务" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/Android/Android-%E6%9C%8D%E5%8A%A1/"/>
    
    <category term="通知服务" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/Android/Android-%E6%9C%8D%E5%8A%A1/%E9%80%9A%E7%9F%A5%E6%9C%8D%E5%8A%A1/"/>
    
    
  </entry>
  
  <entry>
    <title>ProgressBar</title>
    <link href="https://dreamcatcherdeng.gitee.io/personal-blog/2022/04/30/ProgressBar/"/>
    <id>https://dreamcatcherdeng.gitee.io/personal-blog/2022/04/30/ProgressBar/</id>
    <published>2022-04-30T07:27:33.301Z</published>
    <updated>2022-05-02T12:35:45.351Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>1.进度条常用属性</p><p>2.进度条样式详解</p></blockquote><span id="more"></span><h1 id="进度条常用属性"><a href="#进度条常用属性" class="headerlink" title="进度条常用属性"></a>进度条常用属性</h1><div class="table-container"><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>max</td><td>进度条最大值（针对长条形）</td></tr><tr><td>progress</td><td>进度条已完成的进度值（针对长条形）</td></tr><tr><td>indeterminate</td><td>如果为true,进度条不显示进度值，显示为循环加载（针对长条形）</td></tr><tr><td>style</td><td>进度条样式</td></tr></tbody></table></div><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ProgressBar</span></span></span><br><span class="line"><span class="tag">             <span class="attr">android:id</span>=<span class="string">&quot;@+id/progressbar&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">             /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/button&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:clickable</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;隐藏&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:onClick</span>=<span class="string">&quot;click&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    Button button;</span><br><span class="line">    ProgressBar progressBar;</span><br><span class="line">    <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        button = findViewById(R.id.button);</span><br><span class="line"></span><br><span class="line">        progressBar = findViewById(R.id.progressbar);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">String <span class="title">change</span><span class="params">()</span></span>&#123;</span><br><span class="line">        flag = !flag;</span><br><span class="line">        <span class="keyword">return</span> flag ?<span class="string">&quot;显示&quot;</span>: <span class="string">&quot;隐藏&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">click</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        button.setText(change());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (progressBar.getVisibility() == View.GONE) &#123;</span><br><span class="line">            progressBar.setVisibility(View.VISIBLE);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            progressBar.setVisibility(View.GONE);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/1651298441391.gif" alt="1651298441391_"></p><h1 id="进度条样式详解"><a href="#进度条样式详解" class="headerlink" title="进度条样式详解"></a>进度条样式详解</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ProgressBar</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:id</span>=<span class="string">&quot;@+id/p1&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:max</span>=<span class="string">&quot;100&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">style</span>=<span class="string">&quot;?android:attr/progressBarStyle&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:layout_width</span>=<span class="string">&quot;80dp&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:layout_height</span>=<span class="string">&quot;80dp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">ProgressBar</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:id</span>=<span class="string">&quot;@+id/p2&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:max</span>=<span class="string">&quot;100&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">style</span>=<span class="string">&quot;?android:attr/progressBarStyleHorizontal&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:layout_width</span>=<span class="string">&quot;180dp&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:layout_height</span>=<span class="string">&quot;80dp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">ProgressBar</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:id</span>=<span class="string">&quot;@+id/p3&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:max</span>=<span class="string">&quot;100&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">style</span>=<span class="string">&quot;?android:attr/progressBarStyleSmall&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:layout_width</span>=<span class="string">&quot;80dp&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:layout_height</span>=<span class="string">&quot;80dp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">ProgressBar</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:id</span>=<span class="string">&quot;@+id/p4&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:max</span>=<span class="string">&quot;100&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">style</span>=<span class="string">&quot;?android:attr/progressBarStyleSmallTitle&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:layout_width</span>=<span class="string">&quot;80dp&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:layout_height</span>=<span class="string">&quot;80dp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">ProgressBar</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:id</span>=<span class="string">&quot;@+id/p5&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:max</span>=<span class="string">&quot;100&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">style</span>=<span class="string">&quot;?android:attr/progressBarStyleLarge&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:layout_width</span>=<span class="string">&quot;80dp&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:layout_height</span>=<span class="string">&quot;80dp&quot;</span> /&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">ProgressBar</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:id</span>=<span class="string">&quot;@+id/p6&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:max</span>=<span class="string">&quot;100&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">style</span>=<span class="string">&quot;?android:attr/progressBarStyleInverse&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:layout_width</span>=<span class="string">&quot;80dp&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:layout_height</span>=<span class="string">&quot;80dp&quot;</span></span></span><br><span class="line"><span class="tag">     /&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">ProgressBar</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:id</span>=<span class="string">&quot;@+id/p7&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:max</span>=<span class="string">&quot;100&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">style</span>=<span class="string">&quot;?android:attr/progressBarStyleSmallInverse&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:layout_width</span>=<span class="string">&quot;80dp&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:layout_height</span>=<span class="string">&quot;80dp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">ProgressBar</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:id</span>=<span class="string">&quot;@+id/p8&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:max</span>=<span class="string">&quot;100&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">style</span>=<span class="string">&quot;?android:attr/progressBarStyleLargeInverse&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:layout_width</span>=<span class="string">&quot;80dp&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:layout_height</span>=<span class="string">&quot;80dp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:id</span>=<span class="string">&quot;@+id/button&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:text</span>=<span class="string">&quot;加载&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">android:clickable</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        Button button = findViewById(R.id.button);</span><br><span class="line">        button.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">int</span>[] list = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;R.id.p1, R.id.p2, R.id.p3, R.id.p4, R.id.p5, R.id.p6, R.id.p7, R.id.p8&#125;;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) &#123;</span><br><span class="line">                    ProgressBar progressBar = findViewById(list[i]);</span><br><span class="line">                    <span class="keyword">int</span> progress = progressBar.getProgress();</span><br><span class="line">                    System.out.println(progress);</span><br><span class="line">                    progressBar.setProgress(progress+<span class="number">10</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="../../../Desktop/ezgif-4-ead4364b6c.gif" alt="ezgif-4-ead4364b6c"></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;1.进度条常用属性&lt;/p&gt;
&lt;p&gt;2.进度条样式详解&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Android" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/Android/"/>
    
    <category term="Android 控件" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/Android/Android-%E6%8E%A7%E4%BB%B6/"/>
    
    
  </entry>
  
  <entry>
    <title>ImageView</title>
    <link href="https://dreamcatcherdeng.gitee.io/personal-blog/2022/04/29/ImageView/"/>
    <id>https://dreamcatcherdeng.gitee.io/personal-blog/2022/04/29/ImageView/</id>
    <published>2022-04-29T15:24:23.705Z</published>
    <updated>2022-05-02T12:35:45.341Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>1.常用属性</p><p>2.<code>ScaleType</code>详解</p></blockquote><span id="more"></span><h1 id="常用属性"><a href="#常用属性" class="headerlink" title="常用属性"></a>常用属性</h1><div class="table-container"><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td><code>src</code></td><td>放置图片资源</td></tr><tr><td><code>scaleType</code></td><td>设置图片的拉绳类型</td></tr><tr><td><code>maxHeight</code></td><td>设置图片的最大高度</td></tr><tr><td><code>maxWidth</code></td><td>设置图片的最大宽度</td></tr><tr><td><code>adjustViewBounds</code></td><td>调整<code>View</code>的界限,默认为<code>false</code>,此时<code>maxHeight</code>,<code>maxWidth</code>不生效</td></tr></tbody></table></div><h1 id="ScaleType详解"><a href="#ScaleType详解" class="headerlink" title="ScaleType详解"></a><code>ScaleType</code>详解</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:scaleType</span>=<span class="string">&quot;fitStart&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:src</span>=<span class="string">&quot;@drawable/Wave&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><ol><li><p><code>fitStart</code>保持宽高比缩放图片，直到较长的边与<code>Image</code>的边长相等，缩放完成后将图片放在ImageView的左上角</p><p><code>android:scaleType=&quot;fitStart&quot;</code></p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220429223527221.png" alt="image-20220429223527221"></p></li></ol><ol><li><p><code>fitCenter</code>默认值，同上，缩放后放于中间</p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220429223634655.png" alt="image-20220429223634655"></p></li><li><p><code>fitEnd</code>同上，缩放后放于右下角</p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220429223650182.png" alt="image-20220429223650182"></p></li><li><p><code>fitXY</code>对图像的横纵方向进行独立缩放，使得该图片完全适应<code>ImageV1ew</code>,但是图片的宽高比可能会发生改变</p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220429223624239.png" alt="image-20220429223624239"></p></li><li><p><code>center</code>保持原图的大小，显示在<code>ImageView</code>的中心。当原图的<code>size</code>大于<code>ImageView</code>的<code>size</code>,超过部分裁剪处理</p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220429223715377.png" alt="image-20220429223715377"></p></li><li><p><code>centerCrop</code>保持宽高比缩放图片，直到完全覆盖<code>ImageView</code>,可能会出现图片的显示不完全，<code>centerlnside</code>保持宽高比缩放图片，直到<code>ImageView</code>能够完全地显示图片</p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220429223732774.png" alt="image-20220429223732774"></p></li><li><p><code>matrix</code>不改变原图的大小，从<code>ImageView</code>的左上角开始绘制原图，原图超过<code>ImageView</code>的部分作裁剪处理</p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220429223752779.png" alt="image-20220429223752779"></p></li></ol>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;1.常用属性&lt;/p&gt;
&lt;p&gt;2.&lt;code&gt;ScaleType&lt;/code&gt;详解&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Android" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/Android/"/>
    
    <category term="Android 控件" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/Android/Android-%E6%8E%A7%E4%BB%B6/"/>
    
    <category term="图片拉伸及填充" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/Android/Android-%E6%8E%A7%E4%BB%B6/%E5%9B%BE%E7%89%87%E6%8B%89%E4%BC%B8%E5%8F%8A%E5%A1%AB%E5%85%85/"/>
    
    
  </entry>
  
  <entry>
    <title>EditText</title>
    <link href="https://dreamcatcherdeng.gitee.io/personal-blog/2022/04/29/EditText/"/>
    <id>https://dreamcatcherdeng.gitee.io/personal-blog/2022/04/29/EditText/</id>
    <published>2022-04-29T08:37:45.481Z</published>
    <updated>2022-05-02T12:35:45.335Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>1.EditText常用属性</p><p>2.获取EditText中的内容</p><p>3.常见问题</p></blockquote><span id="more"></span><h1 id="EditText常用属性"><a href="#EditText常用属性" class="headerlink" title="EditText常用属性"></a>EditText常用属性</h1><div class="table-container"><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td><code>hint</code></td><td>输入提示</td></tr><tr><td><code>textColorHint</code></td><td>输入提示的颜色</td></tr><tr><td><code>inputType</code></td><td>输入类型(具体可以输入哪些类型可以<code>Ctrl+B</code>查看)</td></tr><tr><td><code>drawableLeft</code>[<code>Right</code>,<code>Bottom</code>,<code>Top</code>]</td><td>在输入框的左方添加可绘制资源</td></tr><tr><td><code>drawablePadding</code></td><td>设置可绘制资源与输入内容的间距</td></tr><tr><td><code>paddingLeft</code>[<code>Right</code>,<code>Bottom</code>,<code>Top</code>]</td><td>设置内容(包括可绘制资源文件)与边框左边的间距</td></tr></tbody></table></div><h1 id="获取EditText中的内容"><a href="#获取EditText中的内容" class="headerlink" title="获取EditText中的内容"></a>获取EditText中的内容</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/edit_one&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;300dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:drawableStart</span>=<span class="string">&quot;@drawable/ic_baseline_account_circle_24&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:drawablePadding</span>=<span class="string">&quot;50dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:hint</span>=<span class="string">&quot;Hello&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:paddingLeft</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:inputType</span>=<span class="string">&quot;text&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;@color/teal_700&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center_vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;70dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">&quot;获取EditText中的文本内容&quot;</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    EditText editText;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        Button btn = findViewById(R.id.btn);</span><br><span class="line">        editText = findViewById(R.id.edit_one);</span><br><span class="line">        btn.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                System.out.println(editText.getText().toString());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220429163131533.png" alt="image-20220429163131533"></p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220429163239786.png" alt="image-20220429163239786"></p><h1 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h1><p>关于<code>Cannot resolve symbol &#39;@+id/edit_one&#39;</code>的问题，点击<code>Build</code>-&gt;<code>Clean Project</code>重构项目就可解决</p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220429161258390.png" alt="image-20220429161258390"></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;1.EditText常用属性&lt;/p&gt;
&lt;p&gt;2.获取EditText中的内容&lt;/p&gt;
&lt;p&gt;3.常见问题&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Android" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/Android/"/>
    
    <category term="Android 控件" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/Android/Android-%E6%8E%A7%E4%BB%B6/"/>
    
    <category term="常见问题" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"/>
    
    
  </entry>
  
  <entry>
    <title>Button</title>
    <link href="https://dreamcatcherdeng.gitee.io/personal-blog/2022/04/29/Button/"/>
    <id>https://dreamcatcherdeng.gitee.io/personal-blog/2022/04/29/Button/</id>
    <published>2022-04-29T05:00:55.192Z</published>
    <updated>2022-05-02T12:35:45.332Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>1.点击<code>Button</code>切换<code>Button</code>背景</p><p>2.<code>Button</code>点击事件</p></blockquote><span id="more"></span><h1 id="点击Button切换Button背景"><a href="#点击Button切换Button背景" class="headerlink" title="点击Button切换Button背景"></a>点击<code>Button</code>切换<code>Button</code>背景</h1><ul><li><p><code>xml</code>方式</p><ol><li><p>在<code>drawable</code>资源文件夹中创建两个可绘制矢量图</p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220429113331779.png" alt="image-20220429113331779"></p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220429113356958.png" alt="image-20220429113356958"></p></li></ol></li></ul><ol><li><p>在<code>drawable</code>资源文件夹下创建一个选择器<code>btn_selector.xml</code></p><p><code>state_pressed</code>表示点击时的显示的图片，另一个为默认图片</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">selector</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:state_pressed</span>=<span class="string">&quot;true&quot;</span> <span class="attr">android:drawable</span>=<span class="string">&quot;@drawable/ic_baseline_access_time_24&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:drawable</span>=<span class="string">&quot;@drawable/ic_baseline_add_to_home_screen_24&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">selector</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>选择器在引用<code>drawable</code>时，如果是引用的颜色，显示不会生效</p></blockquote></li><li><p>在<code>layout</code>布局资源文件中的<code>activity_main.xml</code>中添加一个<code>Button</code>并引用该文件，将该<code>Button</code>设置为可以点击</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_one&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;@drawable/btn_selector&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:clickable</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">&quot;Hello World!&quot;</span></span></span><br><span class="line"><span class="tag">     /&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>显示</p><p>默认显示</p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220429114045055.png" alt="image-20220429114045055"></p><p>点击<code>Button</code>时显示</p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220429114054793.png" alt="image-20220429114054793"></p></li></ol><h1 id="Button点击事件"><a href="#Button点击事件" class="headerlink" title="Button点击事件"></a><code>Button</code>点击事件</h1><h2 id="onTouch"><a href="#onTouch" class="headerlink" title="onTouch"></a>onTouch</h2><p>当按钮被点击时，<code>OnTouch</code>事件监听器优先被触发，触发后执行<code>onTouch</code>函数里面的内容，如何返回值为fasle，则表示该事件未被消费，还可以触发<code>OnLongClickListener</code>和<code>OnClickListener</code>，如果返回值为true，表示该事件被消费，不会触发<code>OnLongClickListener</code>和<code>OnClickListener</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">btn_one.setOnTouchListener(<span class="keyword">new</span> View.OnTouchListener()&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouch</span><span class="params">(View v, MotionEvent event)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;onTouch被触发&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="setOnLongClickListener"><a href="#setOnLongClickListener" class="headerlink" title="setOnLongClickListener"></a>setOnLongClickListener</h2><p>当按钮被长时间点击时，如果该事件未被消费，触发该事件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">btn_one.setOnLongClickListener(<span class="keyword">new</span> View.OnLongClickListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onLongClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;setOnLongClickListener被触发&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="setOnClickListener"><a href="#setOnClickListener" class="headerlink" title="setOnClickListener"></a>setOnClickListener</h2><p>当按钮被点击时，如果该事件未被消费，则触发该事件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">btn_one.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;setOnClickListener被触发&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;1.点击&lt;code&gt;Button&lt;/code&gt;切换&lt;code&gt;Button&lt;/code&gt;背景&lt;/p&gt;
&lt;p&gt;2.&lt;code&gt;Button&lt;/code&gt;点击事件&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Android" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/Android/"/>
    
    <category term="Android 控件" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/Android/Android-%E6%8E%A7%E4%BB%B6/"/>
    
    
  </entry>
  
  <entry>
    <title>TextView</title>
    <link href="https://dreamcatcherdeng.gitee.io/personal-blog/2022/04/29/TextView/"/>
    <id>https://dreamcatcherdeng.gitee.io/personal-blog/2022/04/29/TextView/</id>
    <published>2022-04-29T01:48:25.791Z</published>
    <updated>2022-05-02T12:35:45.361Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>1.运行第一个android应用</p><p>2.实现文字带阴影</p><p>2.实现文字跑马灯</p></blockquote><span id="more"></span><h1 id="第一个Android应用"><a href="#第一个Android应用" class="headerlink" title="第一个Android应用"></a>第一个Android应用</h1><h2 id="创建Project"><a href="#创建Project" class="headerlink" title="创建Project"></a>创建<code>Project</code></h2><p>下载并配置完<code>Android Studio</code>,选择<code>New Project</code> -&gt; 选择<code>Empty Activity</code>-&gt;<code>next</code>,等待项目构建</p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220425203316935.png" alt="image-20220425203316935"></p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220425203510060.png" alt="image-20220425203510060"></p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220425203800729.png" alt="image-20220425203800729"></p><h2 id="配置模拟器"><a href="#配置模拟器" class="headerlink" title="配置模拟器"></a>配置模拟器</h2><h3 id="下载模拟器"><a href="#下载模拟器" class="headerlink" title="下载模拟器"></a>下载模拟器</h3><p><del>模拟器随便选能用就行</del></p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220425204810357.png" alt="image-20220425204810357"><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220425204843248.png" alt="image-20220425204843248"><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220425204947363.png" alt="image-20220425204947363"></p><h3 id="启动模拟器"><a href="#启动模拟器" class="headerlink" title="启动模拟器"></a>启动模拟器</h3><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220425205202996.png" alt="image-20220425205202996"></p><h2 id="第一个安卓应用"><a href="#第一个安卓应用" class="headerlink" title="第一个安卓应用"></a>第一个安卓应用</h2><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220425205415122.png" alt="image-20220425205415122"></p><h3 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h3><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220425205554559.png" alt="image-20220425205554559"></p><h3 id="项目结构介绍"><a href="#项目结构介绍" class="headerlink" title="项目结构介绍"></a>项目结构介绍</h3><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220425210705505.png" alt="image-20220425210705505"></p><h1 id="TextView"><a href="#TextView" class="headerlink" title="TextView"></a><code>TextView</code></h1><h2 id="常用属性"><a href="#常用属性" class="headerlink" title="常用属性"></a>常用属性</h2><div class="table-container"><table><thead><tr><th>字段</th><th>解释</th></tr></thead><tbody><tr><td><code>layout_width</code></td><td>控件的宽度单位 <code>dp</code> 可选值:fill_parent、match_parent(和匹配父容器),wrap_content（包裹内容）</td></tr><tr><td><code>layout_height</code></td><td>控件的高度<code>dp</code>，（同<code>layout_width</code>）</td></tr><tr><td><code>id</code></td><td>控件的id，用于区别其他组件</td></tr><tr><td><code>text</code></td><td>控件中文本显示的内容</td></tr><tr><td><code>textColor</code></td><td>文本字体颜色</td></tr><tr><td><code>textStyle</code></td><td>可选风格:normal(无效果)，bold(加粗)，italic(斜体)</td></tr><tr><td><code>textSize</code></td><td>文本字体大小单位<code>sp</code>,</td></tr><tr><td><code>background</code></td><td>控件背景色（可以是图片）</td></tr><tr><td><code>gravity</code></td><td>内容的对齐方向</td></tr><tr><td><code>textAllCape</code></td><td>设置大小写</td></tr><tr><td><code>hint</code></td><td>设置提示文本</td></tr><tr><td><code>textColorHint</code></td><td>设置提示文本的颜色</td></tr><tr><td><code>maxLength</code></td><td>限制文本长度</td></tr><tr><td><code>textIsSelectable</code></td><td>设置文本是否可以复制</td></tr></tbody></table></div><p>将光标放在属性上，按<code>ctrl+B</code>可以查看对应属性的说明：<code>name</code>指该属性的名称，<code>format</code>指该属性可以填的内容的格式，常见格式有如下：</p><ul><li>string 字符串</li><li>reference 引用，可以引用其他<code>.xml</code>文件中的值</li><li>color 字符串表示的颜色<code>#00000000</code>分别为一个透明度通道和RGB</li><li>dimension 尺寸</li></ul><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220425214115361.png" alt="image-20220425214115361"></p><h2 id="三种方式设置文本显示内容"><a href="#三种方式设置文本显示内容" class="headerlink" title="三种方式设置文本显示内容"></a>三种方式设置文本显示内容</h2><ul><li>直接在<code>xml</code>设置文本</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:text</span>=<span class="string">&quot;Hello Android!&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:id</span>=<span class="string">&quot;@+id/textview1&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_width</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">...</span></span></span><br><span class="line"><span class="tag">          /&gt;</span></span><br></pre></td></tr></table></figure><ul><li>引用<code>strings.xml</code>中的值</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;app_name&quot;</span>&gt;</span>HelloAndroid<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span> <span class="attr">name</span>=<span class="string">&quot;tv_one&quot;</span>&gt;</span>Hello Android<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:id</span>=<span class="string">&quot;@+id/textview1&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_width</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_height</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:text</span>=<span class="string">&quot;@string/tv_one&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">...</span></span></span><br><span class="line"><span class="tag">          /&gt;</span></span><br></pre></td></tr></table></figure><ul><li>使用<code>java</code>代码添加</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        TextView viewById = (TextView) findViewById(R.id.textview1);</span><br><span class="line">        viewById.setText(<span class="string">&quot;HELLO ANDROID&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h1><h2 id="文字带阴影"><a href="#文字带阴影" class="headerlink" title="文字带阴影"></a>文字带阴影</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/textview1&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">&quot;@string/tv_one&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:textColor</span>=<span class="string">&quot;@color/black&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:textSize</span>=<span class="string">&quot;30sp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;@color/teal_200&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">&quot;center_horizontal&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:shadowColor</span>=<span class="string">&quot;#FA0505&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:shadowDx</span>=<span class="string">&quot;10.0&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:shadowDy</span>=<span class="string">&quot;10.0&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:shadowRadius</span>=<span class="string">&quot;3.0&quot;</span></span></span><br><span class="line"><span class="tag">     /&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220428123711360.png" alt="image-20220428123711360"></p><h2 id="文字跑马灯"><a href="#文字跑马灯" class="headerlink" title="文字跑马灯"></a>文字跑马灯</h2><ul><li><p>设置<code>TextView</code>可点击，运行程序后点击就可实现跑马灯</p>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">...</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:singleLine</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:ellipsize</span>=<span class="string">&quot;end&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:marqueeRepeatLimit</span>=<span class="string">&quot;marquee_forever&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:focusable</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:clickable</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">TextView</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>添加请求焦点的标签，程序运行自动实现跑马灯</p>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">...</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:singleLine</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:ellipsize</span>=<span class="string">&quot;end&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:marqueeRepeatLimit</span>=<span class="string">&quot;marquee_forever&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:focusable</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:clickable</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">requestFocus</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">TextView</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>使用<code>java</code>代码设置请求焦点</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        TextView viewById = findViewById(R.id.textview1);</span><br><span class="line">        viewById.requestFocus();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>使用自定义<code>TextView</code>请求焦点</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SuppressLint(&quot;AppCompatCustomView&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyView</span> <span class="keyword">extends</span> <span class="title">TextView</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyView</span><span class="params">(<span class="meta">@NonNull</span> Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyView</span><span class="params">(<span class="meta">@NonNull</span> Context context, <span class="meta">@Nullable</span> AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyView</span><span class="params">(<span class="meta">@NonNull</span> Context context, <span class="meta">@Nullable</span> AttributeSet attrs, <span class="keyword">int</span> defStyleAttr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs, defStyleAttr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isFocused</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line"><span class="tag">&lt;<span class="name">com.example.helloandroid.MyView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">...</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:singleLine</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:ellipsize</span>=<span class="string">&quot;marquee&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:marqueeRepeatLimit</span>=<span class="string">&quot;marquee_forever&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:focusableInTouchMode</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:clickable</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:focusable</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">com.example.helloandroid.MyView</span>&gt;</span></span><br><span class="line">  </span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;1.运行第一个android应用&lt;/p&gt;
&lt;p&gt;2.实现文字带阴影&lt;/p&gt;
&lt;p&gt;2.实现文字跑马灯&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Android" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/Android/"/>
    
    <category term="Android 控件" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/Android/Android-%E6%8E%A7%E4%BB%B6/"/>
    
    <category term="效果" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/%E6%95%88%E6%9E%9C/"/>
    
    <category term="文字阴影" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/%E6%95%88%E6%9E%9C/%E6%96%87%E5%AD%97%E9%98%B4%E5%BD%B1/"/>
    
    <category term="跑马灯" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/%E6%95%88%E6%9E%9C/%E8%B7%91%E9%A9%AC%E7%81%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>JAVA</title>
    <link href="https://dreamcatcherdeng.gitee.io/personal-blog/2022/03/17/JAVA/"/>
    <id>https://dreamcatcherdeng.gitee.io/personal-blog/2022/03/17/JAVA/</id>
    <published>2022-03-17T08:44:48.786Z</published>
    <updated>2022-05-02T12:35:45.378Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>文档描述</p></blockquote> <span id="more"></span><h1 id="学习资源"><a href="#学习资源" class="headerlink" title="学习资源"></a>学习资源</h1><p>书籍：</p><ul><li>《Head First Java》</li><li>《Java 8实战》</li><li>《Effective Java》</li></ul><p>视频：</p><ul><li><p><a href="https://www.bilibili.com/video/BV1Kb411W75N">java 8</a> </p></li><li><p><a href="https://www.bilibili.com/video/BV18J411W7cE?from=search&amp;seid=2932013915815479004&amp;spm_id_from=333.337.0.0">java</a></p></li></ul><p>代码：</p><ul><li><a href="https://github.com/biezhi/30-seconds-of-java8">java 8代码片段</a></li></ul><p>项目：</p><hr><hr><h1 id="Java简介"><a href="#Java简介" class="headerlink" title="Java简介"></a>Java简介</h1><h2 id="JAVA环境"><a href="#JAVA环境" class="headerlink" title="JAVA环境"></a>JAVA环境</h2><ul><li>JRE (Java Runtime Environment)<br>要运行一个java程序只需要 jre 即可</li><li>JDK (Java Development Environment)<br>jdk 包含了编译工具javac.exe和运行工具java.exe</li></ul><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20211017231706372.png" alt="image-20211017231706372"></p><h2 id="JAVA语言特点"><a href="#JAVA语言特点" class="headerlink" title="JAVA语言特点"></a>JAVA语言特点</h2><ul><li><p>面向对象<br>Java语言的设计集中于对象及其接口 ,它提供了简单的类机制以及动态的接口模型。对象中封装了它的状态变量以及相应的方法 ,实现了模块化和信息隐藏 ;而类则提供了一类对象的原型 ,并且通过继承机制 ,子类可以使用父类所提供的方法 ,实现了代码的复用。</p></li><li><p>分布性<br>Java是面向网络的语言。通过它提供的类库可以处理 TCP/IP协议 ,用户可以通过URL地址在网络上很方便地访问其它对象。</p></li><li><p>简单性<br>Java语言是一种面向对象的语言 ,它通过提供最基本的方法来完成指定的任务 ,只需理解一些基本的概念 ,就可以用它编写出适合于各种情况的应用程序。 Java略去了运算符重载、多重继承等模糊的概念 ,并且通过实现自动垃圾收集大大简化了程序设计者的内存管理工作。另外 ,Java也适合于在小型机上运行 ,它的基本解释器及类的支持只有 40KB左右 ,加上标准类库和线程的支持也只有 215KB左右。库和线程的支持也只有 215KB左右。</p></li><li><p>鲁棒性<br>Java在编译和运行程序时 ,都要对可能出现的问题进行检查 ,以消除错误的产生。它提供自动垃圾收集来进行内存管理 ,防止程序员在管理内存时容易产生的错误。通过集成的面向对象的例外处理机制 ,在编译时,Java提示出可能出现但未被处理的例外 ,帮助程序员正确地进行选择以防止系统的崩溃。另外,Java在编译时还可捕获类型声明中的许多常见错误 ,防止动态运行时不匹配问题的出现。</p></li><li><p>可移植性<br>与平台无关的特性使 Java程序可以方便地被移植到网络上的不同机器。同时 ,Java的类库中也实现了与不同平台的接口 ,使这些类库可以移植。另外,Java编译器是由 Java语言实现的 ,Java运行时系统由标准 C实现 ,这使得Java系统本身也具有可移植性。</p></li><li><p>体系结构中立<br>Java解释器生成与体系结构无关的字节码指令 ,只要安装了 Java运行时系统 ,Java程序就可在任意的处理器上运行。这些字节码指令对应于 Java虚拟机中的表示 ,Java解释器得到字节码后 ,对它进行转换 ,使之能够在不同的平台运行。</p></li><li><p>安全性<br>用于网络、分布环境下的 Java必须要防止病毒的入侵。 Java不支持指针,一切对内存的访问都必须通过对象的实例变量来实现 ,这样就防止程序员使用”特洛伊”木马等欺骗手段访问对象的私有成员 ,同时也避免了指针操作中容易产生的错误。</p></li><li><p>解释执行<br>Java解释器直接对 Java字节码进行解释执行。字节码本身携带了许多编译时信息 ,使得连接过程更加简单。</p></li><li><p>动态性<br>Java的设计使它适合于一个不断发展的环境。在类库中可以自由地加入新的方法和实例变量而不会影响用户程序的执行。并且 Java通过接口来支持多重继承 ,使之比严格的类继承具有更灵活的方式和扩展性。</p></li><li><p>多线程<br>多线程机制使应用程序能够并行执行 ,而且同步机制保证了对共享数据的正确操作。通过使用多线程 ,程序设计者可以分别用不同的线程完成特定的行为 ,而不需要采用全局的事件循环机制 ,这样就很容易地实现网络上的实时交互行为。</p></li><li><p>高性能<br>和其它解释执行的语言如 BASIC、 TCL不同 ,Java字节码的设计使之能很容易地直接转换成对应于特定CPU的机器码 ,从而得到较高的性能。</p></li></ul><h2 id="JAVA语言发展史"><a href="#JAVA语言发展史" class="headerlink" title="JAVA语言发展史"></a>JAVA语言发展史</h2><div class="table-container"><table><thead><tr><th style="text-align:center">版本</th><th style="text-align:center">年份</th><th style="text-align:center">新特性</th><th style="text-align:center">类与接口数量</th></tr></thead><tbody><tr><td style="text-align:center">1.0</td><td style="text-align:center">1996</td><td style="text-align:center">语言本身</td><td style="text-align:center">211</td></tr><tr><td style="text-align:center">1.1</td><td style="text-align:center">1997</td><td style="text-align:center">内部类</td><td style="text-align:center">477</td></tr><tr><td style="text-align:center">1.2</td><td style="text-align:center">1998</td><td style="text-align:center">无</td><td style="text-align:center">1524</td></tr><tr><td style="text-align:center">1.3</td><td style="text-align:center">2000</td><td style="text-align:center">无</td><td style="text-align:center">1840</td></tr><tr><td style="text-align:center">1.4</td><td style="text-align:center">2004</td><td style="text-align:center">断言</td><td style="text-align:center">2723</td></tr><tr><td style="text-align:center">5.0（1.5）</td><td style="text-align:center">2004</td><td style="text-align:center">泛型、增强for循环、可变元参数、自动打包、元数据、枚举、静态导入</td><td style="text-align:center">3279</td></tr><tr><td style="text-align:center">6（1.6）</td><td style="text-align:center">2006</td><td style="text-align:center">无</td><td style="text-align:center">3777</td></tr></tbody></table></div><blockquote><p>java 5.0及以后默认省去了1</p></blockquote><h2 id="JVM内存模型"><a href="#JVM内存模型" class="headerlink" title="JVM内存模型"></a>JVM内存模型</h2><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20211116154119954.png" alt="image-20211116154119954"></p><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><h2 id="专业术语"><a href="#专业术语" class="headerlink" title="专业术语"></a>专业术语</h2><div class="table-container"><table><thead><tr><th style="text-align:center">术语</th><th style="text-align:center">缩写</th><th style="text-align:center">解释</th></tr></thead><tbody><tr><td style="text-align:center">Java Development Kit</td><td style="text-align:center">JDK</td><td style="text-align:center">编写Java程序的程序员使用的软件（Java 开发环境工具包）</td></tr><tr><td style="text-align:center">Java Runtime Environment</td><td style="text-align:center">JRE</td><td style="text-align:center">运行Java程序的用户使用的软件（Java运行环境）</td></tr><tr><td style="text-align:center">Standard Edition</td><td style="text-align:center">SE</td><td style="text-align:center">用于桌面或简单的服务器应用的Java平台（标准版）</td></tr><tr><td style="text-align:center">Enterprise Edition</td><td style="text-align:center">EE</td><td style="text-align:center">用于复杂的服务器应用的Java平台（企业版）</td></tr><tr><td style="text-align:center">Micro Edition</td><td style="text-align:center">ME</td><td style="text-align:center">用于微型手机cell phone和其他小型设备的Java平台（微型版）</td></tr><tr><td style="text-align:center">Java 2</td><td style="text-align:center">J2</td><td style="text-align:center">一个过时的术语，用于描述1998年~2006年之间的Java版本</td></tr><tr><td style="text-align:center">Software Development Kit</td><td style="text-align:center">SDK</td><td style="text-align:center">一个过时的术语，用于描述1998年~2006年之间的JDK</td></tr><tr><td style="text-align:center">Update</td><td style="text-align:center">u</td><td style="text-align:center">Sun的术语，用于发布修改的bug</td></tr><tr><td style="text-align:center">NetBeans</td><td style="text-align:center"></td><td style="text-align:center">Sun的集成开发环境</td></tr><tr><td style="text-align:center">Java Archive</td><td style="text-align:center">JAR</td><td style="text-align:center">Java 归档文件,是与平台无关的文件格式(Java标准版归档文件)</td></tr><tr><td style="text-align:center">Web Application Archive</td><td style="text-align:center">WAR</td><td style="text-align:center">WAR 与 JAR 类似，是JAVA编写的Web应用程序打包文件用于运行在Web容器中</td></tr><tr><td style="text-align:center">Enterprise Archive file</td><td style="text-align:center">EAR</td><td style="text-align:center">除了包含JAR、WAR以外，还包括 EJB 组件(Java企业版归档文件)</td></tr><tr><td style="text-align:center">Java Virtual Machine</td><td style="text-align:center">JVM</td><td style="text-align:center">Java虚拟机，用于运行Java字节码</td></tr></tbody></table></div><h2 id="下载JDK"><a href="#下载JDK" class="headerlink" title="下载JDK"></a>下载JDK</h2><p>登录<a href="https://www.oracle.com/java/technologies/downloads/">Oracle官方提供的下载页</a>，选择需要下载的版本,这里以<code>java 17</code>为例</p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220126170554537.png" alt="image-20220126170554537"></p><blockquote><p>当下载的版本不是最新版时，需要注册Oracle账号进行，后缀为<code>.zip</code>的需要配置环境变量</p></blockquote><p>选择<code>.exe</code>后缀下载，下载完成双击进入安装向导，选择安装路径，下一步点击下一步即可完成安装</p><p>安装完成后在命令提示符里输入<code>java -version</code>，提示版本信息则安装成功</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\****&gt;<span class="title">java</span> -<span class="title">version</span></span></span><br><span class="line"><span class="function"><span class="title">java</span> <span class="title">version</span> &quot;17.0.2&quot; 2022-01-18 <span class="title">LTS</span></span></span><br><span class="line"><span class="function"><span class="title">Java</span>(<span class="title">TM</span>) <span class="title">SE</span> <span class="title">Runtime</span> <span class="title">Environment</span> (<span class="title">build</span> 17.0.2+8-<span class="title">LTS</span>-86)</span></span><br><span class="line"><span class="function"><span class="title">Java</span> <span class="title">HotSpot</span>(<span class="title">TM</span>) 64-<span class="title">Bit</span> <span class="title">Server</span> <span class="title">VM</span> (<span class="title">build</span> 17.0.2+8-<span class="title">LTS</span>-86, <span class="title">mixed</span> <span class="title">mode</span>, <span class="title">sharing</span>)</span></span><br></pre></td></tr></table></figure><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><p>打开资源管理器-&gt;右键单击此电脑-&gt;左键单击属性-&gt;左键单击系统设置-&gt;左键单击环境变量-&gt;单击新建</p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220126172931132.png" alt="image-20220126172931132"></p><p>输入变量名<code>`JAVA_HOME</code>，变量值为<code>java</code>的安装路径，安装路径下可见如下文件</p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220126173151873.png" alt="image-20220126173151873"></p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220126173007925.png" alt="image-20220126173007925"></p><p>再新建环境变量<code>ClassPath</code>,值为<code>.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;</code></p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220126173259283.png" alt="image-20220126173259283"></p><p>点击所有确认按钮保存成功后，环境变量设置完毕</p><h2 id="HelloWorld"><a href="#HelloWorld" class="headerlink" title="HelloWorld"></a>HelloWorld</h2><p>新建文件夹<code>HelloWorld.java</code>,编写如下代码并保存<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;Hello world!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>使用如下命令编译</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javac.exe HelloWorld.java</span><br></pre></td></tr></table></figure><p>使用如下命令执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java.exe HelloWorld</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello World!</span><br></pre></td></tr></table></figure><h2 id="JShell"><a href="#JShell" class="headerlink" title="JShell"></a><code>JShell</code></h2><p>在命令行输入<code>jshell</code>可进入java的交互式编程环境</p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220310153921327.png" alt="image-20220310153921327"></p><h1 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h1><h2 id="文档注释"><a href="#文档注释" class="headerlink" title="文档注释"></a>文档注释</h2><ul><li><p>单行注释</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//双斜杠用于单行注释</span></span><br></pre></td></tr></table></figure></li><li><p>多行注释</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">用于多行注释</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>类注释：类注释必须放在<code>import</code>之后类之前</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 类注释用于说明该类的特征，使用方法</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>方法注释:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> 变量描述</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 返回值描述</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> 类异常描述</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure></li><li><p>域注释</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 域说明</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure></li><li><p>通用注释</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@deprecated</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> </span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h2><p>在java语言中，变量、常量、类、对象、方法、语句块等的名字被称为标识符。</p><ul><li>标识符以字母、下划线、数字、<code>$</code>、<code>￥</code>组成</li><li>标识符可以是汉字，但不建议使用汉字作为标识符</li><li>不能以数字开头</li><li>不能是<code>java</code>语言关键字。</li></ul><p>合法标识符:<code>name123</code>,<code>name_123</code>,<code>_name123</code>,<code>$abc</code></p><p>非法标识符:<code>123name</code>，<code>&amp;name</code>,<code>#name</code></p><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><p>运行过程中不变的量称为常量。如字符，字符串，数字，布尔值。</p><p><code>&#39;a&#39; , &quot;abc&quot;, 123 , ture , false</code></p><p>标识符可以作为常量，但要用<code>final修饰</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="keyword">int</span> arg = <span class="number">123</span>;</span><br></pre></td></tr></table></figure><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>在运行过程中可以改变的量。<code>java</code>语言中采用标识符作为变量。</p><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p><code>java</code>中数据类型包括<strong><em>基本数据类型</em></strong>和<strong><em>引用数据类型</em></strong></p><h3 id="基本类型"><a href="#基本类型" class="headerlink" title="基本类型"></a>基本类型</h3><ul><li><p>整型 <code>byte, short, int, long</code></p></li><li><p>浮点型 <code>float ,double</code></p></li><li><p>字符型 <code>char</code></p></li><li><p>布尔型 <code>boolean</code></p><blockquote><p>注:自动类型转换:当运算时，若运算类型不一致，<code>jvm</code>将对数据类型进行自动转换，转换规则为:由低级向高级转换</p></blockquote></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center"><code>\</code></th><th style="text-align:center">不参与转换</th><th style="text-align:center">低级</th><th style="text-align:center"><code>-&gt;</code></th><th style="text-align:center"><code>-&gt;</code></th><th style="text-align:center"><code>-&gt;</code></th><th style="text-align:center"><code>-&gt;</code></th><th style="text-align:center"><code>\</code></th><th style="text-align:center"><code>-&gt;</code></th><th style="text-align:center">高级</th></tr></thead><tbody><tr><td style="text-align:center">类型</td><td style="text-align:center"><code>boolean</code></td><td style="text-align:center"><code>byte</code></td><td style="text-align:center"><code>short</code></td><td style="text-align:center"><code>char</code></td><td style="text-align:center"><code>int</code></td><td style="text-align:center"><code>long</code></td><td style="text-align:center"><code>long long</code></td><td style="text-align:center"><code>float</code></td><td style="text-align:center"><code>double</code></td></tr><tr><td style="text-align:center">java</td><td style="text-align:center">1bit</td><td style="text-align:center">1B</td><td style="text-align:center">2B</td><td style="text-align:center">2B</td><td style="text-align:center">4B</td><td style="text-align:center">8B</td><td style="text-align:center"><code>\</code></td><td style="text-align:center">4B</td><td style="text-align:center">8B</td></tr><tr><td style="text-align:center">32位机c语言</td><td style="text-align:center">1bit</td><td style="text-align:center"><code>\</code></td><td style="text-align:center">2B</td><td style="text-align:center">1B</td><td style="text-align:center">4B</td><td style="text-align:center">4B</td><td style="text-align:center">8B</td><td style="text-align:center">4B</td><td style="text-align:center">8B</td></tr><tr><td style="text-align:center">64位机c语言</td><td style="text-align:center">1bit</td><td style="text-align:center"><code>\</code></td><td style="text-align:center">2B</td><td style="text-align:center">1B</td><td style="text-align:center">4B</td><td style="text-align:center">8B</td><td style="text-align:center">8B</td><td style="text-align:center">4B</td><td style="text-align:center">8B</td></tr></tbody></table></div><h3 id="引用类型"><a href="#引用类型" class="headerlink" title="引用类型"></a>引用类型</h3><p><code>java</code>中引用类型的变量非常类似于C/C++的指针，引用类型指向一个对象。</p><h4 id="引用类型-1"><a href="#引用类型-1" class="headerlink" title="引用类型"></a>引用类型</h4><p><code>java</code>中引用类型包括：</p><ul><li>类</li><li>接口</li><li>数组</li></ul><h4 id="包装类型"><a href="#包装类型" class="headerlink" title="包装类型"></a>包装类型</h4><p><code>java</code>语言将基本类型包装，得到对应的基本类型的包装类，称为包装类型。包装类型也是引用类型，相比与基本类型，包装类型有更多的操作，简化程序的编写过程。</p><div class="table-container"><table><thead><tr><th style="text-align:center">基本数据类型</th><th style="text-align:center">包装类型</th></tr></thead><tbody><tr><td style="text-align:center"><code>byte</code></td><td style="text-align:center"><code>Byte</code></td></tr><tr><td style="text-align:center"><code>shor</code></td><td style="text-align:center"><code>Short</code></td></tr><tr><td style="text-align:center"><code>int</code></td><td style="text-align:center"><code>Integer</code></td></tr><tr><td style="text-align:center"><code>long</code></td><td style="text-align:center"><code>Long</code></td></tr><tr><td style="text-align:center"><code>float</code></td><td style="text-align:center"><code>Float</code></td></tr><tr><td style="text-align:center"><code>double</code></td><td style="text-align:center"><code>Double</code></td></tr><tr><td style="text-align:center"><code>char</code></td><td style="text-align:center"><code>Character</code></td></tr><tr><td style="text-align:center"><code>boolean</code></td><td style="text-align:center"><code>Boolean</code></td></tr></tbody></table></div><p>自动装箱和自动拆箱是<code>Java SE5</code>后具有的特性，该特性使得包装类型和基本数据类型能具有相同的操作。</p><ul><li><p>自动装箱</p><p>将基本数据类型自动转换为包装数据类型。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Integer i = <span class="number">10</span>;<span class="comment">//自动装箱</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>自动拆箱</p><p>将包装数据类型自动转换为基本数据类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> ii = i;<span class="comment">//自动拆箱</span></span><br></pre></td></tr></table></figure></li></ul><blockquote><p>原本等号的左右两端的类型是不同的，一个是基本数据类型，一个是引用数据类型，不能用赋值符号直接赋值，但<code>Java SE5</code>后自动装箱在装箱的时候自动调用的是<code>Integer</code>的<code>valueOf(int)</code>方法。而在拆箱的时候自动调用的是<code>Integer</code>的<code>intValue()</code>方法。其他包装类同理。</p></blockquote><h2 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h2><p><code>java</code>关键字是<code>java</code>语言事先定义的具有特殊用途的标识符，关键字有53个，其中有2个保留字，保留字也是标识符，但不能被使用，是<code>java</code>语言保留下供未来特殊用途使用。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span>    <span class="keyword">extends</span> <span class="keyword">implements</span> <span class="title">null</span>      <span class="title">strictfp</span>     <span class="title">true</span></span></span><br><span class="line"><span class="class"><span class="title">assert</span>   <span class="title">const</span>    <span class="title">false</span>   <span class="title">import</span>     <span class="title">package</span>   <span class="title">super</span>        <span class="title">try</span></span></span><br><span class="line"><span class="class"><span class="title">boolean</span>  <span class="title">continue</span> <span class="title">final</span>   <span class="title">instanceof</span> <span class="title">private</span>   <span class="title">switch</span>       <span class="title">void</span></span></span><br><span class="line"><span class="class"><span class="title">break</span>    <span class="title">default</span>  <span class="title">finally</span> <span class="title">int</span>        <span class="title">protected</span> <span class="title">synchronized</span> <span class="title">volatile</span></span></span><br><span class="line"><span class="class"><span class="title">byte</span>     <span class="title">do</span>       <span class="title">float</span>   <span class="title">interface</span>  <span class="title">public</span>    <span class="title">this</span>         <span class="title">while</span></span></span><br><span class="line"><span class="class"><span class="title">case</span>     <span class="title">double</span>   <span class="title">for</span>     <span class="title">long</span>       <span class="title">return</span>    <span class="title">throw</span></span></span><br><span class="line"><span class="class"><span class="title">catch</span>    <span class="title">else</span>     <span class="title">goto</span>    <span class="title">native</span>     <span class="title">short</span>     <span class="title">throws</span></span></span><br><span class="line"><span class="class"><span class="title">char</span>     <span class="title">enum</span>     <span class="title">if</span>      <span class="title">new</span>        <span class="title">static</span>    <span class="title">transient</span></span></span><br></pre></td></tr></table></figure><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><ul><li><p>算术运算符</p><p><code>+,-,*,/,%,++,--</code></p></li></ul><ul><li><p>前缀自增、自减:先进行自增(+1)或者自减(-1)运算，再进行表达式运算。</p></li><li><p>后缀自增、自减:先进行表达式运算，再进行自增(+1)或者自减(-1)运算</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> x = <span class="number">2</span>*++a;</span><br><span class="line"><span class="keyword">int</span> y = <span class="number">2</span>*b++;</span><br><span class="line">System.out.println(<span class="string">&quot;前缀a=&quot;</span>+a+<span class="string">&quot;,x=&quot;</span>+x);<span class="comment">//前缀a=6,x=12</span></span><br><span class="line">System.out.println(<span class="string">&quot;后缀b=&quot;</span>+b+<span class="string">&quot;,y=&quot;</span>+y);<span class="comment">//后缀b=6,y=10</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>关系运算符</p><p><code>==,!=,&gt;=,&lt;=,&gt;,&lt;</code></p></li></ul><ul><li><p>位运算符</p><p><code>&amp;,|,^,~,&lt;&lt;,&gt;&gt;,&gt;&gt;&gt;</code></p><p><code>java</code>中右移运算符有两个<code>&gt;&gt;</code>和<code>&gt;&gt;&gt;</code>,<code>&gt;&gt;</code>表示带符号右移,<code>&gt;&gt;&gt;</code>表示无符号右移</p><ul><li>对于正数，两个右移运算符无区别</li><li>对于负数，<code>&gt;&gt;&gt;</code>将带右移的数视作无符号整数，所有的位都向右移动指定位数，低位将被移除，高位被0补齐；<code>&gt;&gt;</code>将待右移的数是做带符号整数，只将表示数值的位进行右移，符号位不移动，低位移除，高位0补齐，</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = -<span class="number">4</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">4</span>;</span><br><span class="line">System.out.println(a &gt;&gt;&gt; <span class="number">1</span>);<span class="comment">//2147483646</span></span><br><span class="line">System.out.println(a &gt;&gt; <span class="number">1</span>);<span class="comment">//-2</span></span><br><span class="line">System.out.println(b &gt;&gt; <span class="number">1</span>);<span class="comment">//2</span></span><br><span class="line">System.out.println(b &gt;&gt;&gt; <span class="number">1</span>);<span class="comment">//2</span></span><br></pre></td></tr></table></figure></li><li><p>逻辑运算符</p><p><code>&amp;&amp;,||,!</code></p><p>短路逻辑:当<code>&amp;&amp;</code>的左边为<code>false</code>时，<code>&amp;&amp;</code>的右边不再继续运算；当<code>||</code>的左边为<code>true</code>时，<code>||的右边不再运算</code></p></li><li><p>赋值运算符</p><p><code>=,+=,-=,*=,/=,%=,&lt;&lt;=,&gt;&gt;=,&amp;=,^=,|=</code></p></li><li><p>条件运算符</p><p><code>()=()?():()</code></p><p><code>value = (expression)?(if expression is true):(if expression is false)</code></p></li><li><p><code>instanceof</code>运算符</p><p>该运算符用于检测一个对象是否为某种类型或接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">    <span class="comment">//code ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">B</span> <span class="keyword">extends</span> <span class="title">A</span></span>&#123;</span><br><span class="line"><span class="comment">//code ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        A a = <span class="keyword">new</span> A();</span><br><span class="line">        B b = <span class="keyword">new</span> B();</span><br><span class="line">        <span class="keyword">if</span> (a <span class="keyword">instanceof</span> B)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;a instance of B&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (b <span class="keyword">instanceof</span> A)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;b instance of A.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输出:</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">b instance of A.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>运算符优先级:</p></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">操作符</th><th style="text-align:center">类别</th><th style="text-align:center">关联性</th><th style="text-align:center"></th></tr></thead><tbody><tr><td style="text-align:center"><code>() [] .</code></td><td style="text-align:center">后缀</td><td style="text-align:center">左到右</td><td style="text-align:center">高</td></tr><tr><td style="text-align:center"><code>expr++ expr--</code></td><td style="text-align:center">一元</td><td style="text-align:center">从左到右</td><td style="text-align:center">↓</td></tr><tr><td style="text-align:center"><code>++expr --expr + - ～ ！</code></td><td style="text-align:center">一元</td><td style="text-align:center">从右到左</td><td style="text-align:center">↓</td></tr><tr><td style="text-align:center"><code>* / ％</code></td><td style="text-align:center">乘性</td><td style="text-align:center">左到右</td><td style="text-align:center">↓</td></tr><tr><td style="text-align:center"><code>+ -</code></td><td style="text-align:center">加性</td><td style="text-align:center">左到右</td><td style="text-align:center">↓</td></tr><tr><td style="text-align:center"><code>&gt;&gt; &gt;&gt;&gt;  &lt;&lt;</code></td><td style="text-align:center">移位</td><td style="text-align:center">左到右</td><td style="text-align:center">↓</td></tr><tr><td style="text-align:center"><code>&gt; &gt;= &lt; &lt;=</code></td><td style="text-align:center">关系</td><td style="text-align:center">左到右</td><td style="text-align:center">↓</td></tr><tr><td style="text-align:center"><code>== !=</code></td><td style="text-align:center">相等</td><td style="text-align:center">左到右</td><td style="text-align:center">↓</td></tr><tr><td style="text-align:center"><code>＆</code></td><td style="text-align:center">按位与</td><td style="text-align:center">左到右</td><td style="text-align:center">↓</td></tr><tr><td style="text-align:center"><code>^</code></td><td style="text-align:center">按位异或</td><td style="text-align:center">左到右</td><td style="text-align:center">↓</td></tr><tr><td style="text-align:center">&#124;</td><td style="text-align:center">按位或</td><td style="text-align:center">左到右</td><td style="text-align:center">↓</td></tr><tr><td style="text-align:center"><code>&amp;&amp;</code></td><td style="text-align:center">逻辑与</td><td style="text-align:center">左到右</td><td style="text-align:center">↓</td></tr><tr><td style="text-align:center">&#124; &#124;</td><td style="text-align:center">逻辑或</td><td style="text-align:center">左到右</td><td style="text-align:center">↓</td></tr><tr><td style="text-align:center"><code>?:</code></td><td style="text-align:center">条件</td><td style="text-align:center">从右到左</td><td style="text-align:center">↓</td></tr><tr><td style="text-align:center"><code>=,+=,-=,*=,/=,％=,&gt;&gt;=,&lt;&lt;=,＆=,^=,</code>&#124;<code>=</code></td><td style="text-align:center">赋值</td><td style="text-align:center">从右到左</td><td style="text-align:center">↓</td></tr><tr><td style="text-align:center"><code>,</code></td><td style="text-align:center">逗号</td><td style="text-align:center">左到右</td><td style="text-align:center">低</td></tr></tbody></table></div><h2 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h2><ul><li><p><code>if...else...</code></p></li><li><p><code>if...else if...else</code></p></li><li><p><code>switch</code></p><p><code>case</code>后面的值的类型要与<code>ch</code>的类型一致，否则会编译不通过</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">char</span> ch = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (ch) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>:</span><br><span class="line">        System.out.println(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;b&#x27;</span>:</span><br><span class="line">        System.out.println(<span class="string">&quot;b&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        System.out.println(<span class="string">&quot;c&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h2><ul><li><p><code>while</code>循环</p></li><li><p><code>do ... while ...</code>循环</p></li><li><p><code>for</code>循环</p></li><li><p>增强<code>for</code>循环</p><p>增强<code>for</code>循环用于数组或者实现了<code>Iterable</code>接口的对象的遍历，是对for循环的简写。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">ArrayList&lt;Character&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">list.add(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">list.add(<span class="string">&#x27;b&#x27;</span>);</span><br><span class="line">list.add(<span class="string">&#x27;c&#x27;</span>);</span><br><span class="line">list.add(<span class="string">&#x27;d&#x27;</span>);</span><br><span class="line">list.add(<span class="string">&#x27;e&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i : arr)&#123;</span><br><span class="line">    System.out.print(i);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">char</span> ch: list)&#123;</span><br><span class="line">    System.out.print(ch);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输出：</span></span><br><span class="line"><span class="comment">12345</span></span><br><span class="line"><span class="comment">abcde</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p><code>continue</code>关键字</p></li><li><p><code>break</code>关键字</p></li><li><p>带标签循环体</p><p>  可以为循环体定义一个标签，标签的名字是区别于关键字的标识符。可以使用<code>continue</code>和<code>break</code>直接跳到该标签处</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">label2:<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt;= <span class="number">5</span>;i++)&#123;</span><br><span class="line">            label1:<span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">                i++;</span><br><span class="line">                <span class="keyword">if</span>(i == <span class="number">3</span>)&#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;i = 3&quot;</span>);</span><br><span class="line">                    i = <span class="number">9</span>;</span><br><span class="line">                    <span class="keyword">continue</span> label1;<span class="comment">//直接跳到label1定义的循环</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (i == <span class="number">10</span>)&#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;i = 10&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span> label2;<span class="comment">//直接跳出label2定义的循环</span></span><br><span class="line">                &#125;</span><br><span class="line">                System.out.println(<span class="string">&quot;i = &quot;</span>+i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输出：</span></span><br><span class="line"><span class="comment">i = 1</span></span><br><span class="line"><span class="comment">i = 2</span></span><br><span class="line"><span class="comment">i = 3</span></span><br><span class="line"><span class="comment">i = 10</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><h2 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//声明和赋值同时进行</span></span><br><span class="line"><span class="keyword">int</span>[] arr1 = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//动态声明后续赋值</span></span><br><span class="line"><span class="comment">// n 是变量</span></span><br><span class="line"><span class="keyword">int</span>[] arr2 = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">arr2[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">arr2[<span class="number">1</span>] = <span class="number">2</span>;</span><br><span class="line">arr2[<span class="number">2</span>] = <span class="number">3</span>;</span><br><span class="line">...</span><br><span class="line">    </span><br><span class="line"><span class="comment">//创建并初始化</span></span><br><span class="line"><span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br></pre></td></tr></table></figure><h2 id="多维数组"><a href="#多维数组" class="headerlink" title="多维数组"></a>多维数组</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//声明同时赋值，编译器将自动计算行和列</span></span><br><span class="line"><span class="keyword">int</span>[][] arr = &#123;</span><br><span class="line">    &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span> &#125;,</span><br><span class="line">    &#123; <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>&#125;,</span><br><span class="line">    &#123; <span class="number">9</span>, <span class="number">10</span> &#125;</span><br><span class="line">&#125;;</span><br><span class="line">System.out.println(<span class="string">&quot;arr 有 %d 行&quot;</span>.formatted(arr.length));</span><br><span class="line">System.out.println(<span class="string">&quot;arr[0] 有 %d 列&quot;</span>.formatted(arr[<span class="number">0</span>].length));</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span>[] i : arr)&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j:i)&#123;</span><br><span class="line">        System.out.println(j);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//动态声明，需要将指定行</span></span><br><span class="line"><span class="keyword">int</span>[][] arr1 = <span class="keyword">new</span> <span class="keyword">int</span>[][<span class="number">4</span>];<span class="comment">//不合法</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span>[][] arr2 = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>][];<span class="comment">//合法，但未指定列</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//后续对arr2的每列动态声明长度，该循环为arr2声明了一个3行4列的数组</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">3</span>;i++)&#123;</span><br><span class="line">arr2[i] =<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">4</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//也可以将arr2声明为不定长二维数组</span></span><br><span class="line">arr2[<span class="number">0</span>] = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];<span class="comment">//声明第一列长度为2</span></span><br><span class="line">arr2[<span class="number">1</span>] = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">1</span>];<span class="comment">//声明第二列长度为1</span></span><br><span class="line">arr2[<span class="number">2</span>] = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];<span class="comment">//声明第三列长度10</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">int</span>[][] arr3 = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>][<span class="number">4</span>];<span class="comment">//合法,3行4列数组</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1><ul><li><p><code>OOA（Object-Oriented Analysis）</code>面向对象分析</p></li><li><p><code>OOD (Object-Oriented Design)</code>面向对象设计</p></li><li><p><code>OOP(Object-Oriented Programming)</code>面向对象编程</p></li></ul><h2 id="访问控制"><a href="#访问控制" class="headerlink" title="访问控制"></a>访问控制</h2><ul><li>成员访问控制</li></ul><p>被访问控制作用的成员变量和成员函数只能在指定的使用范围内使用。<code>java</code>的成员访问控制有如下四种:</p><pre><code>- `private`    - `default`    - `protected`    - `public`</code></pre><div class="table-container"><table><thead><tr><th style="text-align:center">使用范围</th><th style="text-align:center">private</th><th style="text-align:center">default</th><th style="text-align:center">protected</th><th style="text-align:center">public</th></tr></thead><tbody><tr><td style="text-align:center">同一类中</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">√</td></tr><tr><td style="text-align:center">同一包中子类和非子类</td><td style="text-align:center">×</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">√</td></tr><tr><td style="text-align:center">不同包中的子类</td><td style="text-align:center">×</td><td style="text-align:center">×</td><td style="text-align:center">√</td><td style="text-align:center">√</td></tr><tr><td style="text-align:center">不同包中的非子类</td><td style="text-align:center">×</td><td style="text-align:center">×</td><td style="text-align:center">×</td><td style="text-align:center">√</td></tr></tbody></table></div><ul><li>类访问控制<br>  类访问控制只有两种:<ul><li><code>default</code></li><li><code>public</code></li></ul></li></ul><p>​    作用范围和成员访问控制一样</p><blockquote><p>default 即默认的访问控制，不能写default关键字来声明</p></blockquote><h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2><ul><li><p>属性</p><p>定义在类中的变量被称作属性。</p></li><li><p>方法</p><p>定义在类中的函数被称为方法。方法不能修改基本数据类型的参数，可以修改对象引用的参数。</p><blockquote><p>方法也不能修改String类的参数，java的形参传递的是参数的拷贝，String类被传入方法中被使用时实际上是在常量池拷贝了一份一样的字符串。而其他类作为参数时，拷贝的是该类的对象引用，即地址值，地址指向的区域数据被修改，那么实际上该对象的属性就被修改了。</p></blockquote><ul><li>方法可变参数</li></ul></li></ul>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        variable(<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>);</span><br><span class="line">        variable(<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">variable</span><span class="params">(<span class="keyword">int</span>... args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : args) &#123;</span><br><span class="line">            System.out.print(i);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">0123456</span></span><br><span class="line"><span class="comment">0123</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><ul><li><p>方法重载与方法重写</p><p>重载是一个方法对应于不同的参数类型或不同的参数个数，根据调用时使用的参数不同，调用的方法体不同。</p><p>重写是某个方法继承于父类的方法，需要覆盖父类的该方法，该方法与父类有相同的方法名，相同的参数类型，相同的参数个数，相同的返回值，不同的方法体。</p><p>重载：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span>  <span class="title">test</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span>  <span class="title">test</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span>  <span class="title">test</span><span class="params">(String s,<span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>  <span class="title">test</span><span class="params">(String s,String a)</span></span>&#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重写:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    String s;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>类</p><p>类是对象的蓝图，是现实中一类具有共同属性和行为的事物的抽象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> age = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;动物吃&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此处<code>Animal</code>是一个对象，该对象拥有一个<code>age</code>属性和一个<code>eat()</code>方法。</p></li><li><p>对象</p><p>是类的具体实例，对象拥有类的属性和方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Animal animal = <span class="keyword">new</span> Animal();</span><br><span class="line">        System.out.println(animal.age);</span><br><span class="line">        animal.eat();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此处<code>animal</code>是一个对象，使用<code>new</code>关键字创建了<code>Animal</code>类的一个实例，该实例即为一个对象。该对象具有<code>Animal</code>的属性和方法。</p></li><li><p>内部类</p><p>定义在类的内部的类，此处Inner为内部类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Outer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">in</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;类方法in()&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Inner</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">in</span><span class="params">()</span></span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;内部类方法in()&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Outer outer = <span class="keyword">new</span> Outer();</span><br><span class="line">        outer.in();</span><br><span class="line"></span><br><span class="line">        Outer.Inner inner = outer.<span class="function">new <span class="title">Inner</span><span class="params">()</span></span>;</span><br><span class="line">        inner.in();</span><br><span class="line">        <span class="comment">//Outer.Inner inner = new Outer().new Inner();</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输出：</span></span><br><span class="line"><span class="comment">类方法in()</span></span><br><span class="line"><span class="comment">内部类方法in()</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><ul><li><p>局部内部类</p><p>定义在方法里的类，该类只能在方法中使用。</p><p>特点：</p><ul><li>内部类可以直接访问”外部类”的成员</li><li>“外部类”要访问内部类的成员要创建对象</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Outer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">in</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">Inner</span></span>&#123;</span><br><span class="line">            <span class="function"><span class="keyword">void</span> <span class="title">in</span><span class="params">()</span></span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;局部内部类方法in()&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Inner inner = <span class="keyword">new</span> Inner();</span><br><span class="line">        inner.in();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Outer outer = <span class="keyword">new</span> Outer();</span><br><span class="line">        outer.in();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输出：</span></span><br><span class="line"><span class="comment">局部内部类方法in()</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>匿名内部类</p><p>匿名内部类是没有名字的类，该类继承自某个类或者实现了某个接口。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Outer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实现了Outer接口并调用了接口的show()方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Outer() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;Outer 接口&quot;</span>);   </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输出：</span></span><br><span class="line"><span class="comment">Outer 接口</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//若想多次调用该匿名内部类的方法，可以为该类创建对象，</span></span><br><span class="line">  <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">          Outer outer = <span class="keyword">new</span> Outer() &#123;</span><br><span class="line">              <span class="meta">@Override</span></span><br><span class="line">              <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                  System.out.println(<span class="string">&quot;Outer 接口&quot;</span>);</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;;</span><br><span class="line">          outer.show();</span><br><span class="line">          outer.show();</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">  输出：</span></span><br><span class="line"><span class="comment">  Outer 接口</span></span><br><span class="line"><span class="comment">  Outer 接口</span></span><br><span class="line"><span class="comment">  </span></span><br><span class="line"><span class="comment">  */</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//当接口只有一个方法时，可以使用箭头函数</span></span><br><span class="line">  <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">          ((Outer) () -&gt; System.out.println(<span class="string">&quot;Outer 接口&quot;</span>)).show();</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">  输出：</span></span><br><span class="line"><span class="comment">  Outer 接口</span></span><br><span class="line"><span class="comment">  */</span></span><br></pre></td></tr></table></figure><p>箭头函数参考：<a href="#Lambda表达式">lambda</a></p><p>匿名内部类的应用：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Sleep</span> </span>&#123;</span><br><span class="line">      <span class="function"><span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span></span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">      <span class="function"><span class="keyword">void</span> <span class="title">sleap</span><span class="params">(Sleep s)</span></span>&#123;</span><br><span class="line">          s.sleep();</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">          Animal animal = <span class="keyword">new</span> Animal();</span><br><span class="line">          animal.sleap(<span class="keyword">new</span> Sleep() &#123;</span><br><span class="line">              <span class="meta">@Override</span></span><br><span class="line">              <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                  System.out.println(<span class="string">&quot;马站着睡！&quot;</span>);</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;);</span><br><span class="line">  </span><br><span class="line">          animal.sleap(<span class="keyword">new</span> Sleep() &#123;</span><br><span class="line">              <span class="meta">@Override</span></span><br><span class="line">              <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                  System.out.printf(<span class="string">&quot;人躺着睡！&quot;</span>);</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;);</span><br><span class="line">  <span class="comment">//        animal.sleap(() -&gt; System.out.println(&quot;马站着睡！&quot;));</span></span><br><span class="line">  <span class="comment">//        animal.sleap(() -&gt; System.out.printf(&quot;人躺着睡！&quot;));</span></span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">  输出：</span></span><br><span class="line"><span class="comment">  马站着睡！</span></span><br><span class="line"><span class="comment">  人躺着睡！</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  </span><br></pre></td></tr></table></figure></li></ul><ul><li><p>抽象类</p><p>抽象类是对类的抽象，不能像一般类一样刻画某一个对象的细节，只能声明某个类有什么属性和方法。在<code>java</code>中一个没有方法体的方法应该被定义为抽象方法，一个有抽象方法的类应该被定义为抽象类。抽象类因为没有具体的细节来描述一个对象，所以不能被实例化，因此不能用<code>new</code>关键字来实例化一个对象，它只能被他的子类继承并实现它的方法。</p><p>抽象类和抽象方法都用关键字<code>abstract</code>修饰</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;动物都要吃东西!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">sleap</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><p>接口是对事物行为的抽象，其中的方法规定了实现它接口的类必须做什么而不关心怎么做。</p><p>定义一个接口使用<code>interface</code>关键字。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Sleep</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>接口中的方法默认为<code>public abstract</code>方法</p></li><li><p>接口中的属性都是常量，默认为<code>public static final</code></p></li><li><p>使用<code>default</code>关键字修饰的方法可以有实现</p></li><li><p>接口中可以有私有方法，但私有方法不能被继承所以被定义的私有方法必须被实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Sleep</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">default</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//code ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>接口中使用<code>static</code>关键字修饰的方法只能通过<code>接口名称.方法名称</code>调用。</p></li><li><p>接口不能包含成员变量，除了 static 和 final 变量。</p></li></ul><blockquote><p>抽象类和接口的区别:</p><ul><li>接口是对行为的抽象，抽象类是对事物的抽象</li><li>接口没有构造方法，而抽象类可以有构造方法</li><li>接口中不能含有静态代码块，抽象类中可以有静态代码块</li><li>一个类只能继承于一个抽象类，但可以实现多个接口</li></ul></blockquote><h2 id="枚举"><a href="#枚举" class="headerlink" title="枚举"></a>枚举</h2><p>枚举类表示常量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">enum</span> <span class="title">Week</span> </span>&#123;</span><br><span class="line">    Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Week a = Week.Friday;</span><br><span class="line">        System.out.printf(String.valueOf(a));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输出:</span></span><br><span class="line"><span class="comment">Friday</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><blockquote><p>所有的类都有个clone()方法，该方法被protected修饰，需要重写后使用。该方法属于浅拷贝。</p></blockquote><h2 id="常用类"><a href="#常用类" class="headerlink" title="常用类"></a>常用类</h2><ul><li><code>Calendar</code></li><li><code>Date</code></li><li><code>String</code>和<code>StringBuilder</code></li><li><code>Random</code></li><li><code>BigInteger</code>处理任意精度的整数</li><li><p><code>BigDecimal</code>处理任意精度的浮点数</p></li><li><p>类之间的关系</p><ul><li>依赖(“uses-a”)一个类的方法中操作了某个对象</li><li>聚合(“has-a”)类中含有某个类的对象</li><li>继承(“is-a”)继承于某个类</li></ul></li></ul><h2 id="static"><a href="#static" class="headerlink" title="static"></a>static</h2><ul><li>使用<code>static</code>修饰方法表示该方法是静态方法</li><li>使用<code>static</code>修饰修饰属性表示该属性是静态属性</li><li>使用<code>static</code>修饰的代码块表示该代码块是静态代码块</li></ul><blockquote><p>使用static关键字修饰的方法或属性本质上不属于该类，但可以理解为它属于该类但不属于类创建的对象，但可以通过该类或得该属性和方法。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> String className = <span class="string">&quot;main&quot;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">method</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;这是Main类中的静态方法!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Main 类被加载!&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(Main.className);</span><br><span class="line">        Main.method();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四大特性"><a href="#四大特性" class="headerlink" title="四大特性"></a>四大特性</h2><ul><li><p>多态</p><p>同一类事物，不同对象所表现的行为不一样。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Child</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;儿子吃饭!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PoorChild</span> <span class="keyword">extends</span> <span class="title">Child</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;儿子吃空气!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RichChild</span> <span class="keyword">extends</span> <span class="title">Child</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;儿子吃山珍海味!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Child child = <span class="keyword">new</span> Child();</span><br><span class="line">        child.eat();</span><br><span class="line">        Child poorChild = <span class="keyword">new</span> PoorChild();</span><br><span class="line">        poorChild.eat();</span><br><span class="line">        Child richChild = <span class="keyword">new</span> RichChild();</span><br><span class="line">        poorChild.eat();</span><br><span class="line">       </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输出:</span></span><br><span class="line"><span class="comment">儿子吃饭!</span></span><br><span class="line"><span class="comment">儿子吃空气!</span></span><br><span class="line"><span class="comment">儿子吃山珍海味!</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>多态口诀:编译看左边，执行看右边</p></blockquote></li><li><p>继承</p></li><li><p>封装</p><p>将属性封装在类中，使用访问控制进行数据保护，将方法封装在类中，隐藏具体的实现细节，减少耦合，方便使用易用性。</p></li><li><p>抽象</p></li></ul><h1 id="泛型"><a href="#泛型" class="headerlink" title="泛型"></a>泛型</h1><h2 id="泛型的好处"><a href="#泛型的好处" class="headerlink" title="泛型的好处"></a>泛型的好处</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Collection collection = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        collection.add(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        collection.add(<span class="string">&quot;world&quot;</span>);</span><br><span class="line">        collection.add(<span class="number">1000</span>);</span><br><span class="line">        Iterator iterator = collection.iterator();</span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext())&#123;</span><br><span class="line">            System.out.println(iterator.next());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">hello</span></span><br><span class="line"><span class="comment">world</span></span><br><span class="line"><span class="comment">1000</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><ul><li>将运行时期的异常提前到了编译期</li></ul><p>当未指定<code>Collection</code>中存储的类型时，默认任为<code>&lt;Object&gt;</code>,指定类型后可以编译器将检查存储数据的类型，所以当<code>collection.add(100)</code>时报错</p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220313160501925.png" alt="image-20220313160501925"></p><ul><li>避免强制转换</li></ul><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220313160652742.png" alt="image-20220313160652742"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Collection&lt;String&gt; collection = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        collection.add(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        collection.add(<span class="string">&quot;world&quot;</span>);</span><br><span class="line">        Iterator&lt;String&gt; iterator = collection.iterator();</span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext())&#123;</span><br><span class="line">            String s = iterator.next();</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">hello</span></span><br><span class="line"><span class="comment">world</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="泛型类"><a href="#泛型类" class="headerlink" title="泛型类"></a>泛型类</h2> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Generic</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line">    T t;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setT</span><span class="params">(T t)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.t = t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">T <span class="title">getT</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> t;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Generic&lt;String&gt; s = <span class="keyword">new</span> Generic&lt;&gt;();</span><br><span class="line">        s.setT(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        System.out.println(s.getT());</span><br><span class="line"></span><br><span class="line">        Generic&lt;Integer&gt; i = <span class="keyword">new</span> Generic&lt;&gt;();</span><br><span class="line">        i.setT(<span class="number">1000</span>);</span><br><span class="line">        System.out.println(i.getT());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">hello</span></span><br><span class="line"><span class="comment">1000</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>定义多参数列表泛型类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Generic</span>&lt;<span class="title">T</span>,<span class="title">E</span>,<span class="title">V</span>&gt; </span>&#123;</span><br><span class="line">    V v;</span><br><span class="line">    &lt;T&gt; <span class="function">T <span class="title">get</span><span class="params">(T t)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> t;</span><br><span class="line">    &#125;</span><br><span class="line">    &lt;E&gt; <span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">        System.out.println(e);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setV</span><span class="params">(V v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.v = v;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="泛型方法"><a href="#泛型方法" class="headerlink" title="泛型方法"></a>泛型方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Generic</span></span>&#123;</span><br><span class="line">    &lt;T&gt; <span class="function">T <span class="title">show</span><span class="params">(T t)</span></span>&#123;</span><br><span class="line">        System.out.println(t);</span><br><span class="line">        <span class="keyword">return</span> t;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Generic s = <span class="keyword">new</span> Generic();</span><br><span class="line">        String name = s.show(<span class="string">&quot;孙悟空&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> age = s.show(<span class="number">18</span>);</span><br><span class="line">        System.out.println(name+age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">孙悟空</span></span><br><span class="line"><span class="comment">18</span></span><br><span class="line"><span class="comment">孙悟空18</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="泛型接口"><a href="#泛型接口" class="headerlink" title="泛型接口"></a>泛型接口</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//泛型接口的定义和泛型类定义一样</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Generic</span>&lt;<span class="title">T</span>&gt;</span>&#123;</span><br><span class="line">    &lt;T&gt; <span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">(T t)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//泛型接口的是仙女要加泛型参数T</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GenericImp</span>&lt;<span class="title">T</span>&gt; <span class="keyword">implements</span> <span class="title">Generic</span>&lt;<span class="title">T</span>&gt;</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">(T t)</span> </span>&#123;</span><br><span class="line">        System.out.println(t);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        GenericImp genericImp = <span class="keyword">new</span> GenericImp();</span><br><span class="line">        genericImp.show(<span class="string">&quot;孙悟空&quot;</span>);</span><br><span class="line">        genericImp.show(<span class="number">18</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">孙悟空</span></span><br><span class="line"><span class="comment">18</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="泛型通配符"><a href="#泛型通配符" class="headerlink" title="泛型通配符"></a>泛型通配符</h2><p><code>&lt;?&gt;</code>可以代表任意的类型，代表<code>Object</code>及其子类</p><p><code>&lt;? extends Number&gt;</code>，泛型通配符上限，代表<code>Number</code>及其子类</p><p><code>&lt;? super Number&gt;</code>,泛型通配符下限，代表<code>Number</code>及其父类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">List&lt;?&gt; list = <span class="keyword">new</span> ArrayList&lt;Object&gt;();<span class="comment">//合法</span></span><br><span class="line">List&lt;? extends Number&gt; list1 = <span class="keyword">new</span> ArrayList&lt;Number&gt;();<span class="comment">//合法</span></span><br><span class="line">List&lt;? extends Number&gt; list2 = <span class="keyword">new</span> ArrayList&lt;Object&gt;();<span class="comment">//非法</span></span><br><span class="line">List&lt;? <span class="keyword">super</span> Number&gt; list3 = <span class="keyword">new</span> ArrayList&lt;Number&gt;();<span class="comment">//合法</span></span><br><span class="line">List&lt;? <span class="keyword">super</span> Number&gt; list4 = <span class="keyword">new</span> ArrayList&lt;Object&gt;();<span class="comment">//合法</span></span><br><span class="line">List&lt;? <span class="keyword">super</span> Number&gt; list5 = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();<span class="comment">//非法</span></span><br></pre></td></tr></table></figure><h1 id="Stream-API"><a href="#Stream-API" class="headerlink" title="Stream API"></a>Stream API</h1><h2 id="编程思想"><a href="#编程思想" class="headerlink" title="编程思想"></a>编程思想</h2><ul><li><p>函数式编程思想</p><p>强调做什么而不强调怎么做。</p></li><li><p>面向对象编程思想</p><p>必须通过对象来做某件事情。</p></li></ul><h2 id="Lambda表达式"><a href="#Lambda表达式" class="headerlink" title="Lambda表达式"></a>Lambda表达式</h2><h3 id="Lambda表达式格式"><a href="#Lambda表达式格式" class="headerlink" title="Lambda表达式格式"></a>Lambda表达式格式</h3><p>Lambda表达式相当于一个匿名的函数，没有指出函数名和返回结果类型，但<code>jvm</code>可以对其进行推导。Lambda表达式程序编写更加简洁。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">([Type1 param1,Type2 param2 ...]) -&gt; &#123;</span><br><span class="line">    <span class="comment">//code...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>案例:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Sleep</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">sleep</span><span class="params">(Sleep s)</span></span>&#123;</span><br><span class="line">        s.sleep();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Horse</span> <span class="keyword">implements</span> <span class="title">Sleep</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;马站着睡！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Animal animal = <span class="keyword">new</span> Animal();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//类实现类接口</span></span><br><span class="line">        Sleep horse = <span class="keyword">new</span> Horse();</span><br><span class="line">        animal.sleep(horse);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//利用内部类实现接口</span></span><br><span class="line">        animal.sleep(<span class="keyword">new</span> Sleep() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;老虎趴着睡！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//利用lambda表达式实现接口,省略模式</span></span><br><span class="line">        animal.sleep(()-&gt; System.out.println(<span class="string">&quot;人躺着睡！&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输出：</span></span><br><span class="line"><span class="comment">马站着睡！</span></span><br><span class="line"><span class="comment">老虎趴着睡！</span></span><br><span class="line"><span class="comment">人躺着睡！</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>抽象方法无参：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Sleep</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        sleep(()-&gt; System.out.println(<span class="string">&quot;人躺着睡觉!&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">(Sleep s)</span></span>&#123;</span><br><span class="line">        s.sleep();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>抽象方法带参：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Sleep</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">sleep</span><span class="params">(<span class="keyword">int</span> x)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">(Sleep s)</span></span>&#123;</span><br><span class="line">        s.sleep(<span class="number">8</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        sleep((<span class="keyword">int</span> x)-&gt; System.out.println(<span class="string">&quot;人躺着睡觉!睡 %d 个小时&quot;</span>.formatted(x)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>抽象方法带参带返回值:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Sleep</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">sleep</span><span class="params">(<span class="keyword">int</span> x)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> s = sleep((<span class="keyword">int</span> x)-&gt;&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;人躺着睡觉!睡 %d 个小时&quot;</span>.formatted(x));</span><br><span class="line">            <span class="keyword">return</span> x;</span><br><span class="line">        &#125;);</span><br><span class="line">        System.out.println(s);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">sleep</span><span class="params">(Sleep s)</span></span>&#123;</span><br><span class="line">        s.sleep(<span class="number">8</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">8</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Num</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> s = num((<span class="keyword">int</span> x,<span class="keyword">int</span> y)-&gt;&#123;</span><br><span class="line">            <span class="keyword">return</span> x + y;</span><br><span class="line">        &#125;);</span><br><span class="line">        System.out.println(s);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">num</span><span class="params">(Num n)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> n.add(<span class="number">10</span>,<span class="number">11</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Lambda表达式省略模式"><a href="#Lambda表达式省略模式" class="headerlink" title="Lambda表达式省略模式"></a>Lambda表达式省略模式</h3><ul><li><p>没有返回值时，省略参数类型,但要么全部省略要不省略</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Num</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    num((x, y) -&gt;  &#123;</span><br><span class="line">        System.out.println(x + y);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">num</span><span class="params">(Num n)</span> </span>&#123;</span><br><span class="line">    n.add(<span class="number">10</span>, <span class="number">11</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>没有返回值，且当参数只有一个时可以省去参数的括号</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Num</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        num(x -&gt;  &#123;System.out.println( x);&#125;);</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">num</span><span class="params">(Num n)</span> </span>&#123;</span><br><span class="line">    n.add(<span class="number">10</span>);</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    x-&gt;System.out.println(x)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- 没有返回值，且当代码块只有一句话时可以省去大括号</span><br><span class="line"></span><br><span class="line">  ```java</span><br><span class="line">  <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Num</span> </span>&#123;</span><br><span class="line">      <span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x)</span></span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">      num(x -&gt; System.out.println(x));</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">num</span><span class="params">(Num n)</span> </span>&#123;</span><br><span class="line">      n.add(<span class="number">10</span>);</span><br><span class="line">  </span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>有返回值，且当代码块只有一句话时，若省掉大阔话，那么return 也该省略</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Num</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> s = num((x,y)-&gt; x+y);</span><br><span class="line">    System.out.println(s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">num</span><span class="params">(Num n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> n.add(<span class="number">10</span>,<span class="number">11</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>使用Lambda表达式的前提：</p><ul><li>必须要有接口，且接口中只有一个抽象方法，若有多个抽象方法，可以使用匿名内部类</li><li>必须要有上下文环境，编译器才能通过上下文环境推导出Lambda表达式对应的接口类型<ul><li>可以通过局部变量赋值推导</li><li>可以通过方法的参数类型推导</li></ul></li><li>Lambda表达式可以被推导的类型只能是接口，参数或者局部变量为匿名内部类和抽象类时不能使用Lambda表达式</li></ul><p>Lambda表达式和匿名内部类的区别:</p><ul><li>所需类型不同<br>匿名内部类：可以是接口，也可以是抽象类，还可以是具体类<br>Lambda表达式：只能是接口</li><li>使用限制不同<br>如果接口中有且仅有一个抽象方法，可以使用Lambda表达式，也可以使用匿名内部类<br>如果接口中多于一个抽象方法，只能使用匿名内部类，而不能使用Lambda表达式</li><li>实现原理不同<br>匿名内部类：编译之后，产生一个单独的.class字节码文件<br>Lambda表达式：编译之后，没有一个单独的.class字节码文件,对应的字节码会在运行的时候动态生成</li></ul></blockquote><h2 id="方法引用"><a href="#方法引用" class="headerlink" title="方法引用"></a>方法引用</h2><ul><li><p>引用类方法（引用类的静态方法）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Convert</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">convert</span><span class="params">(String s)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        userConvert(s -&gt; Integer.parseInt(s));<span class="comment">//Lambda表达式</span></span><br><span class="line">        userConvert(Integer::parseInt);<span class="comment">//方法引用，类的静态方法</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">userConvert</span><span class="params">(Convert c)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> result = c.convert(<span class="string">&quot;666&quot;</span>);</span><br><span class="line">        System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>引用对象的实例方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Upper</span></span>&#123;</span><br><span class="line">    <span class="function">String <span class="title">upper</span><span class="params">(String s)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CastUpper</span> <span class="keyword">implements</span> <span class="title">Upper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">upper</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span>  s.toUpperCase();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        CastUpper castUpper = <span class="keyword">new</span>  CastUpper();</span><br><span class="line">        cast(castUpper::upper);<span class="comment">//对象的实例方法</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">cast</span><span class="params">(Upper c)</span></span>&#123;</span><br><span class="line">        String s = c.upper(<span class="string">&quot;Hello world&quot;</span>);</span><br><span class="line">        System.out.println(s);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>引用类的实例方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">SubString</span></span>&#123;</span><br><span class="line">    <span class="function">String <span class="title">substr</span><span class="params">(String s,<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        userSub((s,x,y) -&gt; s.substring(x,y));<span class="comment">//Lambda表达式</span></span><br><span class="line">        userSub(String::substring);<span class="comment">//类的实例方法，当参数有多个时，第一个参数默认为类的实例</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">userSub</span><span class="params">(SubString c)</span></span>&#123;</span><br><span class="line">        String result = c.substr(<span class="string">&quot;012345&quot;</span>,<span class="number">2</span>,<span class="number">5</span>);</span><br><span class="line">        System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>引用构造器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    String name;</span><br><span class="line">    Student(<span class="keyword">int</span> age,String name)&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">String <span class="title">getName</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">StudentBuilder</span> </span>&#123;</span><br><span class="line">    <span class="function">Student <span class="title">build</span><span class="params">(<span class="keyword">int</span> age,String name)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        useStudentBuilder((age,name) -&gt; <span class="keyword">new</span> Student(age,name));<span class="comment">//Lambda表达式</span></span><br><span class="line">        useStudentBuilder(Student::<span class="keyword">new</span>);<span class="comment">//引用类构造器</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">useStudentBuilder</span><span class="params">(StudentBuilder sb)</span> </span>&#123;</span><br><span class="line">        Student student = sb.build(<span class="number">18</span>,<span class="string">&quot;孙悟空&quot;</span>);</span><br><span class="line">        System.out.println(student);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Student&#123;age=18, name=&#x27;孙悟空&#x27;&#125;</span></span><br><span class="line"><span class="comment">Student&#123;age=18, name=&#x27;孙悟空&#x27;&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h2 id="函数式接口"><a href="#函数式接口" class="headerlink" title="函数式接口"></a>函数式接口</h2><p>函数式接口指的是有且只有一个方法的接口</p><h3 id="定义函数式接口"><a href="#定义函数式接口" class="headerlink" title="定义函数式接口"></a>定义函数式接口</h3><p>加上注解<code>@FunctionalInterface</code>表示函数式接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@FunctionalInterface</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>若不加<code>@FunctionalInterface</code>，编译器不会检测接口是否是函数式接口，若加了，编译器会检测该接口是否只有一个方法。若接口只有一个方法时，加注解或者不加都表示函数式接口</p></blockquote><p><code>import java.util.function</code>包下自带的常用函数式接口</p><ul><li><code>Supplier</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String s = getT(()-&gt;<span class="string">&quot;孙悟空&quot;</span>);</span><br><span class="line">        Integer age = getT(() -&gt; <span class="number">18</span>);</span><br><span class="line">        System.out.println(s + age);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">T <span class="title">getT</span><span class="params">(Supplier&lt;T&gt; supplier)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> supplier.get();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><code>Consumer</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@FunctionalInterface</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Consumer</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">accept</span><span class="params">(T t)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">default</span> Consumer&lt;T&gt; <span class="title">andThen</span><span class="params">(Consumer&lt;? <span class="keyword">super</span> T&gt; after)</span> </span>&#123;</span><br><span class="line">        Objects.requireNonNull(after);</span><br><span class="line">        <span class="keyword">return</span> (T t) -&gt; &#123; accept(t); after.accept(t); &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        operatorString(<span class="string">&quot;孙悟空&quot;</span>, s -&gt; System.out.println(s), s -&gt;  System.out.println(<span class="keyword">new</span> StringBuilder(s).reverse()));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">operatorString</span><span class="params">(String name, Consumer&lt;String&gt; c1, Consumer&lt;String&gt; c2)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        c1.andThen(c2).accept(name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">孙悟空</span></span><br><span class="line"><span class="comment">空悟孙</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">c1.andThen(c2)相当于又创建了一个Consumer的实例对象consumer,该Consumer大致如下:</span></span><br><span class="line"><span class="comment">public interface Consumer&#123;</span></span><br><span class="line"><span class="comment">    void accept(String t)&#123;</span></span><br><span class="line"><span class="comment">        accept(t);//该accept调用的是c1.accept(t);</span></span><br><span class="line"><span class="comment">        affter.accept(t);//该accept调用的是c2.accept(t);</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">当consumer.accept(name)时，相当于执行了c1.accept(name)；c2.accept(name)；</span></span><br><span class="line"><span class="comment"></span></span><br></pre></td></tr></table></figure><ul><li><p><code>Predicate</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pre.negate().test(t);</span><br><span class="line">pre.and(other).test(t);</span><br><span class="line">pre.or(other).test(t);</span><br><span class="line">pre.not(other).test(t);</span><br></pre></td></tr></table></figure></li></ul><h3 id="函数式接口Function"><a href="#函数式接口Function" class="headerlink" title="函数式接口Function"></a>函数式接口<code>Function</code></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Function&lt;T,R&gt; T为参数，R为该函数式接口的返回值</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Student student = function(<span class="string">&quot;孙悟空&quot;</span>,Student::<span class="keyword">new</span>);</span><br><span class="line">        System.out.println(student);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Student <span class="title">function</span><span class="params">(String name, Function&lt;String, Student&gt; fun)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> fun.apply(name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Student&#123;name=&#x27;孙悟空&#x27;&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="Stream-API-1"><a href="#Stream-API-1" class="headerlink" title="Stream API"></a>Stream API</h2><h3 id="Stream-API提供的方法"><a href="#Stream-API提供的方法" class="headerlink" title="Stream API提供的方法"></a>Stream API提供的方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">ArrayList&lt;String&gt; list = <span class="keyword">new</span> ArrayList();</span><br><span class="line">list.add(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;李四&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;王五&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;钱六&quot;</span>);</span><br><span class="line"></span><br><span class="line">ArrayList&lt;String&gt; list1 = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">list1.add(<span class="string">&quot;刘一&quot;</span>);</span><br><span class="line">list1.add(<span class="string">&quot;陈二&quot;</span>);</span><br><span class="line">list1.add(<span class="string">&quot;孙七&quot;</span>);</span><br><span class="line">list1.add(<span class="string">&quot;周八&quot;</span>);</span><br><span class="line">list1.add(<span class="string">&quot;张三&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p><code>foreach(Comsumer comsumer)遍历流中的元素</code></p></li><li><p><code>filter(Predicate predicate)过滤元素</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">list.stream().filter(s -&gt;s.startsWith(<span class="string">&quot;张&quot;</span>)).forEach(System.out::println);</span><br><span class="line"><span class="comment">//        张三</span></span><br></pre></td></tr></table></figure></li><li><p><code>limit(long maxSize)截取[0,maxSize)的元素</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list.stream().limit(<span class="number">2</span>).forEach(System.out::println);</span><br><span class="line"><span class="comment">//        张三</span></span><br><span class="line"><span class="comment">//        李四</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p><code>skip(long n)跳过索引为[0,n)以前的元素</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list.stream().skip(<span class="number">2</span>).forEach(System.out::println);</span><br><span class="line"><span class="comment">//        王五</span></span><br><span class="line"><span class="comment">//  钱六</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p><code>concat(Stream s1,Stream s2)将两个流合并</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Stream.concat(list1.stream(),list.stream()).forEach(System.out::println);</span><br><span class="line"><span class="comment">//        刘一</span></span><br><span class="line"><span class="comment">//        陈二</span></span><br><span class="line"><span class="comment">//        孙七</span></span><br><span class="line"><span class="comment">//        周八</span></span><br><span class="line"><span class="comment">//        张三</span></span><br><span class="line"><span class="comment">//        张三</span></span><br><span class="line"><span class="comment">//        李四</span></span><br><span class="line"><span class="comment">//        王五</span></span><br><span class="line"><span class="comment">//        钱六</span></span><br><span class="line">        </span><br></pre></td></tr></table></figure></li></ul><ul><li><p><code>distinct()去除重复元素</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Stream.concat(list1.stream(),list.stream()).distinct().forEach(System.out::println);<span class="comment">////去除</span></span><br><span class="line"><span class="comment">//        刘一</span></span><br><span class="line"><span class="comment">//        陈二</span></span><br><span class="line"><span class="comment">//        孙七</span></span><br><span class="line"><span class="comment">//        周八</span></span><br><span class="line"><span class="comment">//        张三</span></span><br><span class="line"><span class="comment">//        李四</span></span><br><span class="line"><span class="comment">//        王五</span></span><br><span class="line"><span class="comment">//        钱六</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p><code>sorted()按自然排序排序流中的元素</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">list.stream().sorted().forEach(System.out::println);</span><br><span class="line"><span class="comment">//        张三</span></span><br><span class="line"><span class="comment">//        李四</span></span><br><span class="line"><span class="comment">//        王五</span></span><br><span class="line"><span class="comment">//        钱六</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p><code>sorted(Comparator comparator)按比较器排序流中的元素</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">list.stream().sorted(<span class="keyword">new</span> Comparator&lt;String&gt;() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(String o1, String o2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> o2.compareTo(o1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).forEach(System.out::println);</span><br><span class="line"><span class="comment">//        钱六</span></span><br><span class="line"><span class="comment">//        王五</span></span><br><span class="line"><span class="comment">//        李四</span></span><br><span class="line"><span class="comment">//        张三</span></span><br></pre></td></tr></table></figure></li><li><p><code>map(Function func)按照函数的映射关系操作，结果存储在返回的流中</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ArrayList&lt;String&gt; list = <span class="keyword">new</span> ArrayList();</span><br><span class="line">list.add(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;3&quot;</span>);</span><br><span class="line">list.stream().map(Integer::parseInt).forEach(System.out::println);</span><br><span class="line"><span class="comment">//        0</span></span><br><span class="line"><span class="comment">//        1</span></span><br><span class="line"><span class="comment">//        2</span></span><br><span class="line"><span class="comment">//        3</span></span><br></pre></td></tr></table></figure></li><li><p><code>mapToInt(ToIntFunction mapper)该方法返回的流为IntStream</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list.stream().mapToInt(Integer::parseInt).forEach(System.out::println);</span><br></pre></td></tr></table></figure></li><li><p><code>sum()返回数值，结束流的操作</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> result = list.stream().mapToInt(Integer::parseInt).sum();</span><br></pre></td></tr></table></figure></li><li><p><code>collect(Collector collector将流转化为Collection</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; s =  list.stream().collect(Collectors.toList());</span><br></pre></td></tr></table></figure></li></ul><h1 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h1><h2 id="异常体系"><a href="#异常体系" class="headerlink" title="异常体系"></a>异常体系</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">graph TD</span><br><span class="line">Trowable--&gt;Eorror --&gt;问题严重,处理不了</span><br><span class="line">Trowable--&gt;Exception</span><br><span class="line">Exception--&gt;RumtimeException --&gt;可以预见的异常,在运行时处理</span><br><span class="line">Exception--&gt;非RumtimeException --&gt;编译前就必须处理,编译器会自动检测</span><br></pre></td></tr></table></figure><h2 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h2><ul><li>如果不人为处理，<code>Jvm</code>会默认处理<ul><li>抛出异常，给出异常原因</li><li>停止运行程序</li></ul></li><li>人为处理</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    <span class="comment">//可能会发生异常的代码</span></span><br><span class="line">&#125;<span class="keyword">catch</span>(ExceptionType e)&#123;</span><br><span class="line">    e.printStackTrace();<span class="comment">//打印异常信息</span></span><br><span class="line">    <span class="comment">//处理发生异常</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[]  a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            System.out.println(a[<span class="number">3</span>]);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (ArrayIndexOutOfBoundsException e)&#123;</span><br><span class="line">            </span><br><span class="line">            System.out.println(e.getMessage());</span><br><span class="line">            System.out.println(e.toString());</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;结束&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输出:</span></span><br><span class="line"><span class="comment">=====================</span></span><br><span class="line"><span class="comment">Index 3 out of bounds for length 3</span></span><br><span class="line"><span class="comment">java.lang.ArrayIndexOutOfBoundsException: Index 3 out of bounds for length 3</span></span><br><span class="line"><span class="comment">=====================</span></span><br><span class="line"><span class="comment">结束</span></span><br><span class="line"><span class="comment">java.lang.ArrayIndexOutOfBoundsException: Index 3 out of bounds for length 3</span></span><br><span class="line"><span class="comment">at test.Main.main(Main.java:15)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Process finished with exit code 0                                        </span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>​    java的异常提示包括两部分:    </p><ol><li>异常类型</li><li>异常信息</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">e.getMessage() -&gt;<span class="string">&quot;Index 3 out of bounds for length 3&quot;</span></span><br><span class="line">e.toString() -&gt; <span class="string">&quot;java.lang.ArrayIndexOutOfBoundsException: Index 3 out of bounds for length 3&quot;</span></span><br><span class="line">e.printStackTrace() -&gt; </span><br><span class="line">    <span class="string">&quot;java.lang.ArrayIndexOutOfBoundsException: Index 3 out of bounds for length 3 at test.Main.main(Main.java:15)&quot;</span></span><br></pre></td></tr></table></figure><ul><li>当无权限处理或不知道如何处理时可用<code>throws</code>抛出异常，留给方法调用者处理</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> <span class="keyword">throws</span> FileNotFoundException </span>&#123;</span><br><span class="line">    File file;</span><br><span class="line">    FileReader fileReader = <span class="keyword">new</span> FileReader(<span class="string">&quot;test.png&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="自定义异常"><a href="#自定义异常" class="headerlink" title="自定义异常"></a>自定义异常</h2><p>自定义异常需要继承<code>Exception</code>或<code>RumtimeException</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//自定义异常</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestException</span> <span class="keyword">extends</span> <span class="title">Exception</span></span>&#123;</span><br><span class="line">    TestException()&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    TestException(String message)&#123;</span><br><span class="line">        <span class="keyword">super</span>(message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//使用自定义异常</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            test();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (TestException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> <span class="keyword">throws</span> TestException </span>&#123;</span><br><span class="line">        <span class="comment">//code ...</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> TestException(<span class="string">&quot;测试代码有问题!&quot;</span>);</span><br><span class="line">        &#125;         </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">est.TestException: 测试代码有问题!</span></span><br><span class="line"><span class="comment">at test.Main.test(Main.java:23)</span></span><br><span class="line"><span class="comment">at test.Main.main(Main.java:14)</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h1 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h1><h2 id="集合体系"><a href="#集合体系" class="headerlink" title="集合体系"></a>集合体系</h2><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20211116143449210.png" alt="image-20211116143449210"></p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220314164718557.png" alt="image-20220314164718557"></p><h2 id="Collection"><a href="#Collection" class="headerlink" title="Collection"></a>Collection</h2><h3 id="Collection常用方法"><a href="#Collection常用方法" class="headerlink" title="Collection常用方法"></a>Collection常用方法</h3><div class="table-container"><table><thead><tr><th style="text-align:left">方法</th><th style="text-align:left">方法描述</th></tr></thead><tbody><tr><td style="text-align:left"><code>boolean add(E e)</code></td><td style="text-align:left">添加一个元素</td></tr><tr><td style="text-align:left"><code>boolean remove(Object o)</code></td><td style="text-align:left">删除集合中指定元素<code>o</code></td></tr><tr><td style="text-align:left"><code>void clear()</code></td><td style="text-align:left">删除集合中所有元素</td></tr><tr><td style="text-align:left"><code>boolen isEmpty()</code></td><td style="text-align:left">判断集合是否为空</td></tr><tr><td style="text-align:left"><code>int size()</code></td><td style="text-align:left">返回集合中元素个数</td></tr><tr><td style="text-align:left"><code>boolean contains(Object o)</code></td><td style="text-align:left">判断集合中是否包含元素<code>o</code></td></tr><tr><td style="text-align:left"><code>Iterator iterator()</code></td><td style="text-align:left">返回此集合中的元素的迭代器。</td></tr><tr><td style="text-align:left"><code>default stream()</code></td><td style="text-align:left">返回以此集合作为源的顺序 <code>Stream</code> 。</td></tr><tr><td style="text-align:left"><code>Object toArray()</code></td><td style="text-align:left">返回一个包含此集合中所有元素的数组。</td></tr><tr><td style="text-align:left"><code>boolean addAll(Collection&lt;? extends E&gt; c)</code></td><td style="text-align:left">将集合<code>c</code>中的所有元素添加到此集合。</td></tr><tr><td style="text-align:left"><code>boolean containsAll(Collection&lt;?&gt; c)</code></td><td style="text-align:left">判断集合<code>c</code>是否为此集合的字迹</td></tr><tr><td style="text-align:left"><code>boolean removeAll(Collection&lt;?&gt; c)</code></td><td style="text-align:left">删除此集合与集合<code>c</code>的交集</td></tr></tbody></table></div><h3 id="Collection的遍历"><a href="#Collection的遍历" class="headerlink" title="Collection的遍历"></a>Collection的遍历</h3><ul><li><p>使用迭代器遍历</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Collection&lt;String&gt; collection = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">collection.add(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">collection.add(<span class="string">&quot;world&quot;</span>);</span><br><span class="line">collection.add(<span class="string">&quot;javaee&quot;</span>);</span><br><span class="line"></span><br><span class="line">Iterator&lt;String&gt; iterator = collection.iterator();</span><br><span class="line"><span class="keyword">while</span> (iterator.hasNext())&#123;</span><br><span class="line">    String s = iterator.next();</span><br><span class="line">    System.out.println(s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>使用增强<code>for</code>循环遍历</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (String s : collection)&#123;</span><br><span class="line">    System.out.println(s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>并发修改异常</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Iterator&lt;String&gt; iterator = collection.iterator();</span><br><span class="line"><span class="keyword">while</span> (iterator.hasNext())&#123;</span><br><span class="line">    String next = iterator.next();</span><br><span class="line">    collection.add(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">    System.out.println(next);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (String s : collection)&#123;</span><br><span class="line">    System.out.println(s);</span><br><span class="line">    collection.add(<span class="string">&quot;ppt&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Exception in thread <span class="string">&quot;main&quot;</span> java.util.ConcurrentModificationException</span><br><span class="line">at java.base/java.util.ArrayList$Itr.checkForComodification(ArrayList.java:<span class="number">1013</span>)</span><br><span class="line">at java.base/java.util.ArrayList$Itr.next(ArrayList.java:<span class="number">967</span>)</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>注:使用迭代器遍历集合时增减集合元素会造成并发修改异常,增强<code>for</code>循环的本质也是迭代器遍历，所以同样也会造成该异常</p></blockquote><h3 id="List"><a href="#List" class="headerlink" title="List"></a>List</h3><h4 id="特点："><a href="#特点：" class="headerlink" title="特点："></a>特点：</h4><ul><li><p>有序</p></li><li><p>可重复</p></li><li><p>可向指定位置插入元素</p></li><li><p>可访问指定位置元素</p><p>| 方法                      | 方法描述                            |<br>| ————————————- | —————————————————- |<br>| <code>void add(int index,E e)</code> | 在指定位置添加元素                  |<br>| <code>E remove(int index)</code>     | 删除指定位置元素                    |<br>| <code>E set(int index,E e)</code>    | 修改指定位置的元素,返回被修改的元素 |<br>| <code>E get(int index)</code>        | 返回指定位置的元素                  |</p></li></ul><h4 id="List的遍历"><a href="#List的遍历" class="headerlink" title="List的遍历"></a>List的遍历</h4><p>除了通过迭代器遍历和增强<code>for</code>循环遍历外(同<code>Collection</code>的遍历),还可以通过索引遍历:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; list.size();i++)&#123;</span><br><span class="line">    System.out.println(list.get(i));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注:使用迭代器遍历<code>List</code>时增减元素会造成并发修改异常，使用列表迭代器<code>ListIterator</code></p></blockquote><h4 id="List的实现"><a href="#List的实现" class="headerlink" title="List的实现"></a>List的实现</h4><ul><li><p><code>ArrayList</code>数组实现,查询快,增删慢</p></li><li><p><code>LinkList</code>链表实现(<code>Deque</code>双端队列),查询慢,增删块</p><p><code>LinkList</code>特有的方法:</p><p>|方法             | 描述                             |<br>| ———————- | ———————————————— |<br>| <code>void addFirst(E e)</code> | 在该列表开头插入指定的元素       |<br>| <code>void addLast(E e)</code>   | 将指定的元素追加到此列表的末尾   |<br>| <code>E getFirst()</code>     | 返回此列表中的第一个元素         |<br>| <code>E getLast()</code>      | 返回此列表中的最后一个元素       |<br>| <code>E removeFirst()</code>  | 从此列表中删除并返回第一个元素   |<br>| <code>E removeLast()</code>   | 从此列表中删除并返回最后一个元素 |</p></li></ul><h3 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h3><h4 id="特点"><a href="#特点" class="headerlink" title="特点:"></a>特点:</h4><ul><li>无序</li><li>不重复</li></ul><h4 id="哈希值"><a href="#哈希值" class="headerlink" title="哈希值"></a>哈希值</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;hello&quot;</span>.hashCode());<span class="comment">//99162322</span></span><br><span class="line">System.out.println(<span class="string">&quot;文字&quot;</span>.hashCode());<span class="comment">//829104</span></span><br><span class="line">System.out.println(<span class="string">&quot;重地&quot;</span>.hashCode());<span class="comment">//1179395</span></span><br><span class="line">System.out.println(<span class="string">&quot;通话&quot;</span>.hashCode());<span class="comment">//1179395</span></span><br><span class="line">System.out.println(<span class="keyword">new</span> Object().hashCode());<span class="comment">//295530567</span></span><br></pre></td></tr></table></figure><p>一般的,相同的对象哈希值相同,不同的对象哈希值不同,如果发生哈希冲突就会造成不同对象哈希值相同.</p><h2 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h2><p>…</p><h1 id="IO流"><a href="#IO流" class="headerlink" title="IO流"></a>IO流</h1><h2 id="File"><a href="#File" class="headerlink" title="File"></a>File</h2><div class="table-container"><table><thead><tr><th>构造方法</th><th>描述</th></tr></thead><tbody><tr><td><code>File(File parent, String child)</code></td><td>从父抽象路径名和子路径名字符串创建新的<code>File</code>实例。</td></tr><tr><td><code>File(String pathname)</code></td><td>通过将给定的路径名字符串转换为抽象路径名来创建新的<code>File</code>实例。</td></tr><tr><td><code>File(String parent,  String child)</code></td><td>从父路径名字符串和子路径名字符串创建新的<code>File</code>实例。</td></tr></tbody></table></div><h4 id="创建File对象"><a href="#创建File对象" class="headerlink" title="创建File对象"></a>创建<code>File</code>对象</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">File file = <span class="keyword">new</span> File(<span class="string">&quot;test.txt&quot;</span>);</span><br></pre></td></tr></table></figure><h4 id="对象的使用"><a href="#对象的使用" class="headerlink" title="对象的使用"></a>对象的使用</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//如果该目录下有test.txt返回false,如果没有，则创建文件,并返回true</span></span><br><span class="line">File file0 = <span class="keyword">new</span> File(<span class="string">&quot;D:/test.txt&quot;</span>);</span><br><span class="line">System.out.println(file0.createNewFile());</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果有该目录并且该目录没有该文件，则创建文件并返回true否则抛出异常 `java.io.IOException: 系统找不到指定的路径。`</span></span><br><span class="line">File file1 = <span class="keyword">new</span> File(<span class="string">&quot;D:/Hello/test.txt&quot;</span>);</span><br><span class="line">System.out.println(file1.createNewFile());</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果没有该目录且父目录存在.则创建目录返回true,否则返回false</span></span><br><span class="line">File file2 = <span class="keyword">new</span> File(<span class="string">&quot;D:/World&quot;</span>);</span><br><span class="line">System.out.println(file2.mkdir());</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果目录目录存在，则返回false,不存在则递归创建目录</span></span><br><span class="line">File file3 = <span class="keyword">new</span> File(<span class="string">&quot;D:/Hello/World&quot;</span>);</span><br><span class="line">System.out.println(file3.mkdirs());</span><br><span class="line"></span><br><span class="line"><span class="comment">//该方法会装甲world.txt的目录，创建文件和目录只和调用的方法有关和文件路径无关</span></span><br><span class="line">File file4 = <span class="keyword">new</span> File(<span class="string">&quot;D:/Hello/world.txt&quot;</span>);</span><br><span class="line">System.out.println(file4.mkdir());</span><br></pre></td></tr></table></figure><h4 id="File类常用方法"><a href="#File类常用方法" class="headerlink" title="File类常用方法"></a>File类常用方法</h4><div class="table-container"><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td><code>boolean isDirectory()</code></td><td>判断是否为目录</td></tr><tr><td><code>boolean isFile()</code></td><td>判断是否为文件</td></tr><tr><td><code>boolean exists()</code></td><td>判断文件是否存在</td></tr><tr><td><code>String getAbsolutePath()</code></td><td>获取绝对路径</td></tr><tr><td><code>String getParant()</code></td><td>获取父路径</td></tr><tr><td><code>String getName()</code></td><td>获取文件名</td></tr><tr><td><code>String[] list()</code></td><td>获取抽象路径所表示的目录下所有文件或目录的名称组成的数组</td></tr><tr><td><code>File[] listFiles()</code></td><td>获取抽象路径所表示的目录下所有文件或目录的<code>File</code>对象</td></tr><tr><td><code>boolean delete()</code></td><td>删除抽象路径所表示的文件或目录，当抽象路径表示目录时，必须先删除抽象路径下的文件才能删除该目录</td></tr></tbody></table></div><h2 id="IO流常用体系"><a href="#IO流常用体系" class="headerlink" title="IO流常用体系"></a>IO流常用体系</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">IO流 --&gt; 字符流  &amp; 字节流</span><br><span class="line">字符流 --&gt; Reader &amp; Writer</span><br><span class="line">Reader --&gt; BufferedReader &amp; InputStreamReader</span><br><span class="line">Writer --&gt; BufferedWriter &amp; OutputStreamWriter</span><br><span class="line">InputStreamReader --&gt; FileReader</span><br><span class="line">OutputStreamWriter --&gt; FileWriter</span><br><span class="line"></span><br><span class="line">字节流 --&gt; InputStream &amp; OutputStream</span><br><span class="line">InputStream --&gt; FileInputStream &amp; FilterInputStream &amp; ObjectInputStream</span><br><span class="line">OutputStream --&gt; FileOutputStream &amp; FilterOutputStream &amp; ObjectOutputStream</span><br><span class="line">FilterInputStream --&gt; BufferedInputStream &amp; DataInputStream </span><br><span class="line">FilterOutputStream --&gt; BufferedOutputStream &amp; DataOutputStream </span><br></pre></td></tr></table></figure><h2 id="字节流"><a href="#字节流" class="headerlink" title="字节流"></a>字节流</h2><h3 id="字节流写入数据"><a href="#字节流写入数据" class="headerlink" title="字节流写入数据"></a>字节流写入数据</h3><ul><li><p>覆盖写</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;test.txt&quot;</span>);</span><br><span class="line">fos.write(<span class="string">&quot;test&quot;</span>.getBytes());<span class="comment">//windows 写入换行 &quot;\r\n&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>追加写</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;test.txt&quot;</span>,<span class="keyword">true</span>);</span><br><span class="line">fos.write(<span class="string">&quot;test&quot;</span>.getBytes());</span><br></pre></td></tr></table></figure></li><li><p>每次写一个字节</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(<span class="keyword">int</span> b)</span></span>;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fos.write(<span class="number">97</span>);<span class="comment">//write &#x27;a&#x27;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>每次写多个字节</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(<span class="keyword">byte</span> b[])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(<span class="keyword">byte</span> b[], <span class="keyword">int</span> off, <span class="keyword">int</span> len)</span></span>;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fos.write(<span class="string">&quot;test&quot;</span>.getBytes());<span class="comment">//write &quot;test&quot;</span></span><br><span class="line">fos.write(<span class="string">&quot;test&quot;</span>.getBytest(),<span class="number">1</span>,<span class="number">3</span>);<span class="comment">//write &quot;est&quot;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="字节流读数据"><a href="#字节流读数据" class="headerlink" title="字节流读数据"></a>字节流读数据</h3><ul><li>每次读取一个字符</li></ul><pre><code><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FileInputStream fis  = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;test.txt&quot;</span>);</span><br><span class="line"><span class="keyword">int</span> ch = fis.read();<span class="comment">//当指针指到文件末尾时,ch == -1;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">BufferedInputStream bis = <span class="keyword">new</span> BufferedInputStream(<span class="keyword">new</span> FileInputStream(<span class="string">&quot;test.txt&quot;</span>));</span><br><span class="line"><span class="keyword">int</span> ch = bis.read();</span><br></pre></td></tr></table></figure></code></pre><ul><li><p>每次读取多个字符</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">FileInputStream fis  = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;test.txt&quot;</span>);</span><br><span class="line"><span class="keyword">byte</span>[]  bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line"><span class="keyword">int</span> len = fis.read(bytes);<span class="comment">//返回值为真实的读取字节数组的长度</span></span><br></pre></td></tr></table></figure>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">BufferedInputStream bis = <span class="keyword">new</span> BufferedInputStream(<span class="keyword">new</span> FileInputStream(<span class="string">&quot;test.txt&quot;</span>));</span><br><span class="line"><span class="keyword">byte</span>[]  bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line"><span class="keyword">int</span> len = bis.read(bytes) </span><br></pre></td></tr></table></figure></li></ul><h3 id="拷贝文件"><a href="#拷贝文件" class="headerlink" title="拷贝文件"></a>拷贝文件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Timer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> <span class="keyword">throws</span> IOException</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        time(<span class="string">&quot;一次读一个字节&quot;</span>,() -&gt; &#123;</span><br><span class="line">            FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;test.mp4&quot;</span>);</span><br><span class="line">            FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;copy1-test.mp4&quot;</span>);</span><br><span class="line">            <span class="keyword">int</span> ch;</span><br><span class="line">            <span class="keyword">while</span> ((ch = fis.read()) != -<span class="number">1</span>) &#123;</span><br><span class="line">                fos.write(ch);</span><br><span class="line">            &#125;</span><br><span class="line">            fis.close();</span><br><span class="line">            fos.close();</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        time(<span class="string">&quot;一次多个字节&quot;</span>,() -&gt;&#123;</span><br><span class="line">            FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;test.mp4&quot;</span>);</span><br><span class="line">            FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;copy2-test.mp4&quot;</span>);</span><br><span class="line">            <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="keyword">int</span> ch ;</span><br><span class="line">            <span class="keyword">while</span> ((ch = fis.read(bytes)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                fos.write(bytes);</span><br><span class="line">            &#125;</span><br><span class="line">            fis.close();</span><br><span class="line">            fos.close();</span><br><span class="line">        &#125;);</span><br><span class="line">        time(<span class="string">&quot;字符缓冲流一次一个字节&quot;</span>,()-&gt;&#123;</span><br><span class="line">            BufferedInputStream bis = <span class="keyword">new</span> BufferedInputStream( <span class="keyword">new</span> FileInputStream(<span class="string">&quot;test.mp4&quot;</span>));</span><br><span class="line">            BufferedOutputStream bos = <span class="keyword">new</span> BufferedOutputStream(<span class="keyword">new</span> FileOutputStream(<span class="string">&quot;copy3-test.mp4&quot;</span>));</span><br><span class="line">            <span class="keyword">int</span> ch;</span><br><span class="line">            <span class="keyword">while</span>((ch = bis.read()) != -<span class="number">1</span>)&#123;</span><br><span class="line">                bos.write(ch);</span><br><span class="line">            &#125;</span><br><span class="line">            bis.close();</span><br><span class="line">            bos.close();</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        time(<span class="string">&quot;字符缓冲流一次读多个字节&quot;</span>,()-&gt;&#123;</span><br><span class="line">            BufferedInputStream bis = <span class="keyword">new</span> BufferedInputStream( <span class="keyword">new</span> FileInputStream(<span class="string">&quot;test.mp4&quot;</span>));</span><br><span class="line">            BufferedOutputStream bos = <span class="keyword">new</span> BufferedOutputStream(<span class="keyword">new</span> FileOutputStream(<span class="string">&quot;copy4-test.mp4&quot;</span>));</span><br><span class="line">            <span class="keyword">int</span> len;</span><br><span class="line">            <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>((len = bis.read(bytes)) != -<span class="number">1</span>)&#123;</span><br><span class="line">                bos.write(bytes,<span class="number">0</span>,len);</span><br><span class="line">            &#125;</span><br><span class="line">            bis.close();</span><br><span class="line">            bos.close();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">time</span><span class="params">(String name,Timer timer)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> start = System.currentTimeMillis();</span><br><span class="line">        timer.run();</span><br><span class="line">        <span class="keyword">long</span> end = System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">&quot;%s 耗时:%d ms&quot;</span>.formatted(name ,end - start));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输出：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">一次读一个字节 耗时:20573 ms</span></span><br><span class="line"><span class="comment">一次多个字节 耗时:16 ms</span></span><br><span class="line"><span class="comment">字符缓冲流一次一个字节 耗时:156 ms</span></span><br><span class="line"><span class="comment">字符缓冲流一次读多个字节 耗时:15 ms</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="字符流"><a href="#字符流" class="headerlink" title="字符流"></a>字符流</h2><h3 id="字符流读数据"><a href="#字符流读数据" class="headerlink" title="字符流读数据"></a>字符流读数据</h3><ul><li><p>一次读一个字符</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">InputStreamReader isr = <span class="keyword">new</span> InputStreamReader(<span class="keyword">new</span> FileInputStream(<span class="string">&quot;test.txt&quot;</span>),<span class="string">&quot;UTF-8&quot;</span>);<span class="comment">//未指定编码默认为平台编码</span></span><br><span class="line"><span class="keyword">int</span> ch = isr.read();</span><br><span class="line">System.out.print((<span class="keyword">char</span>)ch);</span><br></pre></td></tr></table></figure>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> FileReader(<span class="string">&quot;test.txt&quot;</span>));</span><br><span class="line"><span class="keyword">int</span> ch = br.read();</span><br></pre></td></tr></table></figure></li><li><p>一次读多个字符</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">InputStreamReader isr = <span class="keyword">new</span> InputStreamReader(<span class="keyword">new</span> FileInputStream(<span class="string">&quot;test.txt&quot;</span>),<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line"><span class="keyword">char</span>[] chars = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">1024</span>];</span><br><span class="line"><span class="keyword">int</span> len = isr.read(chars);</span><br><span class="line">System.out.println(<span class="keyword">new</span> String(chars,<span class="number">0</span>,len));</span><br><span class="line"></span><br></pre></td></tr></table></figure>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> FileReader(<span class="string">&quot;test.txt&quot;</span>));</span><br><span class="line"><span class="keyword">char</span>[] chars = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">1024</span>];</span><br><span class="line"><span class="keyword">int</span> len = br.read(chars);</span><br></pre></td></tr></table></figure></li></ul><h3 id="字符流写数据"><a href="#字符流写数据" class="headerlink" title="字符流写数据"></a>字符流写数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(<span class="keyword">int</span> c)</span></span>;<span class="comment">//写一个字节</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(<span class="keyword">char</span> cbuf[])</span></span>;<span class="comment">//写一个字符数组</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(<span class="keyword">char</span> cbuf[],<span class="keyword">int</span> off,<span class="keyword">int</span> len)</span></span>;<span class="comment">//写一个字符数组[oof,oof+len);</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(String s)</span></span>;<span class="comment">//写一个字符串</span></span><br></pre></td></tr></table></figure><h3 id="拷贝文本"><a href="#拷贝文本" class="headerlink" title="拷贝文本"></a>拷贝文本</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        time(<span class="string">&quot;一次写一个字符&quot;</span>,()-&gt;&#123;</span><br><span class="line">            FileWriter fw = <span class="keyword">new</span> FileWriter(<span class="string">&quot;copy1-test.txt&quot;</span>);</span><br><span class="line">            FileReader fr = <span class="keyword">new</span> FileReader(<span class="string">&quot;test.txt&quot;</span>);</span><br><span class="line">            <span class="keyword">int</span> ch;</span><br><span class="line">            <span class="keyword">while</span> ((ch = fr.read()) != -<span class="number">1</span>)&#123;</span><br><span class="line">                fw.write(ch);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        time(<span class="string">&quot;一次写一个字符数组&quot;</span>,()-&gt;&#123;</span><br><span class="line">            FileWriter fw = <span class="keyword">new</span> FileWriter(<span class="string">&quot;copy2-test.txt&quot;</span>);</span><br><span class="line">            FileReader fr = <span class="keyword">new</span> FileReader(<span class="string">&quot;test.txt&quot;</span>);</span><br><span class="line">            <span class="keyword">char</span>[] chars = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="keyword">int</span> len;</span><br><span class="line">            <span class="keyword">while</span> ((len = fr.read(chars)) != -<span class="number">1</span>)&#123;</span><br><span class="line">                fw.write(chars);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        time(<span class="string">&quot;字符缓冲流一次写一个字符&quot;</span>,()-&gt;&#123;</span><br><span class="line">            FileWriter fw = <span class="keyword">new</span> FileWriter(<span class="string">&quot;copy3-test.txt&quot;</span>);</span><br><span class="line">            FileReader fr = <span class="keyword">new</span> FileReader(<span class="string">&quot;test.txt&quot;</span>);</span><br><span class="line">            BufferedReader br = <span class="keyword">new</span> BufferedReader(fr);</span><br><span class="line">            BufferedWriter bw = <span class="keyword">new</span> BufferedWriter(fw);</span><br><span class="line">            <span class="keyword">int</span> ch;</span><br><span class="line">            <span class="keyword">while</span> ((ch = br.read()) != -<span class="number">1</span>)&#123;</span><br><span class="line">                bw.write(ch);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        time(<span class="string">&quot;字符缓冲流一次写一个字符数组&quot;</span>,()-&gt;&#123;</span><br><span class="line">            FileWriter fw = <span class="keyword">new</span> FileWriter(<span class="string">&quot;copy4-test.txt&quot;</span>);</span><br><span class="line">            FileReader fr = <span class="keyword">new</span> FileReader(<span class="string">&quot;test.txt&quot;</span>);</span><br><span class="line">            BufferedReader br = <span class="keyword">new</span> BufferedReader(fr);</span><br><span class="line">            BufferedWriter bw = <span class="keyword">new</span> BufferedWriter(fw);</span><br><span class="line">            <span class="keyword">char</span>[] chars = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="keyword">int</span> len;</span><br><span class="line">            <span class="keyword">while</span> ((len = br.read(chars)) != -<span class="number">1</span>)&#123;</span><br><span class="line">                bw.write(chars);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">time</span><span class="params">(String name,Timer timer)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> start = System.currentTimeMillis();</span><br><span class="line">        timer.run();</span><br><span class="line">        <span class="keyword">long</span> end = System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">&quot;%s 耗时:%d ms&quot;</span>.formatted(name ,end - start));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="流异常处理"><a href="#流异常处理" class="headerlink" title="流异常处理"></a>流异常处理</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">FileOutputStream fos = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    fos = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;test.txt&quot;</span>,<span class="keyword">true</span>);</span><br><span class="line">    fos.write(<span class="string">&quot;test&quot;</span>.getBytes());</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (fos != <span class="keyword">null</span>)&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            fos.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述方法过于复杂,可以使用如下方法,该方法可以将流自动关闭</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>( FileOutputStream fos  = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;test.txt&quot;</span>)) &#123;</span><br><span class="line">    fos.write(<span class="string">&quot;test&quot;</span>.getBytes());</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="存取对象"><a href="#存取对象" class="headerlink" title="存取对象"></a>存取对象</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    Student()&#123;&#125;</span><br><span class="line">    Student(String name,<span class="keyword">int</span> age)&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>对象序列化</p><p>如果一个对象需要被写入文件，可以让这个对象实现<code>Serializable</code>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ObjectOutputStream oss = <span class="keyword">new</span> ObjectOutputStream(<span class="keyword">new</span> FileOutputStream(<span class="string">&quot;student.txt&quot;</span>));</span><br><span class="line">Student student = <span class="keyword">new</span> Student(<span class="string">&quot;孙悟空&quot;</span>,<span class="number">18</span>);</span><br><span class="line">oss.writeObject(student);</span><br><span class="line">oss.close();</span><br></pre></td></tr></table></figure><p>如果一个对象的属性不限被序列化,使用<code>transient</code>关键字</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">transient</span> <span class="keyword">int</span> age;</span><br></pre></td></tr></table></figure></li><li><p>对象反序列化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(<span class="keyword">new</span> FileInputStream(<span class="string">&quot;student.txt&quot;</span>));</span><br><span class="line">Object obj = ois.readObject();</span><br><span class="line">Student student = (Student)obj;</span><br><span class="line">System.out.println(student);</span><br><span class="line"><span class="comment">//Student&#123;name=&#x27;孙悟空&#x27;, age=18&#125;</span></span><br></pre></td></tr></table></figure><p>使用<code>transient</code>关键字修饰后</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Student&#123;name=&#x27;孙悟空&#x27;, age=0&#125;</span></span><br></pre></td></tr></table></figure><p>当序列化后的的对象被修改时，反序列化会抛出异常<code>java.io.InvalidClassException</code></p><p>如果想然被修改后的对象反序列化抛出异常，可以使用<code>serialVersionUID</code>指定序列化<code>id</code>值（建议使用<code>private</code>修饰，必须使用<code>static final</code>修饰）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">42L</span>;</span><br></pre></td></tr></table></figure></li></ul><h1 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h1><p>注解是<code>java</code>中放在源代码的类，方法，注释，属性等之前的一种特殊的<code>注释</code></p><ul><li><p>注释不能被编译器读取</p></li><li><p>注解可以被编译器读取</p></li></ul><h2 id="元注解"><a href="#元注解" class="headerlink" title="元注解"></a>元注解</h2><p>元注解是用于修饰注解的注解</p><ul><li><code>@Target</code> 说明一个注解的使用范围，如在类、方法、属性等</li><li><code>@Retention</code> 说明该注解的生命周期 (SOURCE &lt; CLASS &lt; RUNTIME）默认值<code>CLASS</code>该注解不会被正在运行的程序读取</li><li><code>@Documented</code> 说明该注解会被包含在javadoc中</li><li><code>@Inherited</code> 说明子类可以继承该注解</li></ul><h2 id="自定义注解"><a href="#自定义注解" class="headerlink" title="自定义注解"></a>自定义注解</h2><ul><li><p>定义注解中的字段时，应该采用:<code>类型名 字段名()</code>的形式定义</p></li><li><p>可以为字段指定默认值，若不指定默认值，则在使用时必须为字段赋值</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Inherited</span></span><br><span class="line"><span class="meta">@Target(value = &#123;ElementType.METHOD,ElementType.FIELD&#125;)</span></span><br><span class="line"><span class="meta">@Retention(value = RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@interface</span> MyAnnotation1 &#123;</span><br><span class="line">    <span class="function">String <span class="title">methodName</span><span class="params">()</span> </span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">id</span><span class="params">()</span> <span class="keyword">default</span>  -1</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="meta">@MyAnnotation1(methodName = &quot;print&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//或者</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="meta">@MyAnnotation1(methodName = &quot;print&quot;,id = 1)</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>若自定义的注解只有一个字段，该字段可以用<code>value</code>表示，使用该注解时，可以不用显示指定的字段名称，若不使用<code>value</code>表示该字段，则必须显示指出字段名称</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Inherited</span></span><br><span class="line"><span class="meta">@Target(value = &#123;ElementType.METHOD,ElementType.FIELD&#125;)</span></span><br><span class="line"><span class="meta">@Retention(value = RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@interface</span> MyAnnotation2 &#123;</span><br><span class="line">    <span class="function">String <span class="title">value</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//使用</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="meta">@MyAnnotation2(&quot;print&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="内置注解"><a href="#内置注解" class="headerlink" title="内置注解"></a>内置注解</h2><ul><li><code>@Override</code>该注解用于修饰方法，表示被修饰的方法将重写超类的方法</li><li><code>@Deprecated</code>该注解用于修饰过时的方法、属性和类，表示不建议程序员使用该方法、属性和类，</li><li><code>@SuppressWarnings</code>用于抑制编译警告</li></ul><h1 id="反射"><a href="#反射" class="headerlink" title="反射"></a>反射</h1><h2 id="类加载"><a href="#类加载" class="headerlink" title="类加载"></a>类加载</h2><p>当程序需要某个类且该类在内存中时，<code>jvm</code>会通过类的加载、类的连接、类的初始化三个步骤对类进行初始化。</p><ul><li><p>类加载</p><ul><li>将<code>class</code>文件读入内存，并为之创建对象</li></ul></li><li><p>类连接</p><ul><li>验证阶段：验证被加载的类是否有正确的内部结构</li><li>准备阶段：为类的变量分配内存，设置默认初始值</li><li>解析阶段：将类的二进制符号引用替换为直接引用</li></ul></li><li><p>类初始化</p><p>初始化步骤：</p><ul><li>假如类还未被加载和连接，则程序先加载并连接该类</li><li>假如该类的直接父类还未被初始化，则先初始化其直接父类（所以每次<code>Object</code>类先被初始化）</li><li>假如类中有初始化语句，则系统依次执行这些初始化语句</li></ul><p>可以初始化类的时机：</p><ul><li>创建类的实例</li><li>调用类的类方法</li><li>访问类或者接口的类变量，或者为该类变量赋值</li><li>使用反射方式来强制创建某个类或接口对应的<code>java.lang.Class</code>对象</li><li>初始化某个类的子类</li><li>直接使用java.exe命令来运行某个主类</li></ul></li></ul><h2 id="类加载器"><a href="#类加载器" class="headerlink" title="类加载器"></a>类加载器</h2><h3 id="JVM的类加载机制"><a href="#JVM的类加载机制" class="headerlink" title="JVM的类加载机制"></a>JVM的类加载机制</h3><ul><li>全盘负责：就是当一个类加载器负责加载某个<code>Class</code>时，该Class所依赖的和引用的其他<code>Class</code>也将由该类加载器负责载入，除<br>非显示使用另外一个类加载器来载入</li><li>父类委托：就是当一个类加载器负责加载某个<code>Class</code>时，先让父类加载器试图加载该<code>Class</code>，只有在父类加载器无法加载该类<br>时才尝试从自己的类路径中加载该类</li><li>缓存机制：保证所有加载过的<code>Class</code>都会被缓存，当程序需要使用某个<code>Class</code>对象时，类加载器先从缓存区中搜索该<code>Class</code>，只<br>有当缓存区中不存在该<code>Class</code>对象时，系统才会读取该类对应的二进制数据，并将其转换成<code>Class</code>对象，存储到缓存区<br>日</li></ul><h3 id="类加载器-1"><a href="#类加载器-1" class="headerlink" title="类加载器"></a>类加载器</h3><p>Java运行时具有以下内置类加载器：</p><ul><li><p><code>Bootstrap class loader</code>。它是虚拟机的内置类加载器，通常表示为<code>null</code>，并且没有父<code>null</code>。</p></li><li><p><code>Platform class loader</code>。平台类加载器可以看到所有平台类 ，可以将其用作<code>ClassLoader</code>实例的父<code>ClassLoader</code>。平台类包括由平台类加载器或其祖先定义的Java SE平台API，其实现类和JDK特定的运行时类。</p></li><li><p><code>System class loader</code>。它也被称为应用程序类加载器，与平台类加载器不同。系统类加载器通常用于定义应用程序类路径，模块路径和JDK特定工具上的类。</p><p><code>Bootstrap是Platform的父类，Platform是System的父类</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">ClassLoader c1 = ClassLoader.getSystemClassLoader();</span><br><span class="line">System.out.println(c1);</span><br><span class="line"></span><br><span class="line">ClassLoader c2 = c1.getParent();</span><br><span class="line">System.out.println(c2);</span><br><span class="line"></span><br><span class="line">ClassLoader c3 = c2.getParent();</span><br><span class="line">System.out.println(c3);</span><br><span class="line"></span><br><span class="line"><span class="comment">//$AppClassLoader</span></span><br><span class="line"><span class="comment">//$PlatformClassLoader</span></span><br><span class="line"><span class="comment">//null</span></span><br><span class="line"><span class="comment">//null</span></span><br><span class="line"><span class="comment">//$AppClassLoader</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h2 id="类初始化"><a href="#类初始化" class="headerlink" title="类初始化"></a>类初始化</h2><ul><li>类的主动引用（一定会发生类的初始化）<ul><li>当虚拟机启动，先初始化main方法所在的类</li><li>new一个类的对象</li><li>调用类的静态成员（除了final常量）和静态方法</li><li>使用java.lang.reflect包的方法对类进行反射调用</li><li>当初始化一个类，如果其父类没有被初始化，则先会初始化它的父类</li></ul></li><li>类的被动引用（不会发生类的初始化）<ul><li>当访问一个静态域时，只有真正声明这个域的类才会被初始化。如：当通过子类引用父类的静态变量不会导致子类初始化</li><li>通过数组定义类引用，不会触发此类的初始化</li><li>引用常量不会触发此类的初始化（常量在链接阶段就存入调用类的常量池中了）</li></ul></li></ul><h2 id="反射获取类的信息"><a href="#反射获取类的信息" class="headerlink" title="反射获取类的信息"></a>反射获取类的信息</h2><h3 id="获取Class类的对象"><a href="#获取Class类的对象" class="headerlink" title="获取Class类的对象"></a>获取<code>Class</code>类的对象</h3><ul><li><p>一个类在内存中只有一个<code>Class</code>对象</p></li><li><p>一个类被加载后整个结构都被封装在内存中</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException </span>&#123;</span><br><span class="line">        <span class="comment">//通过类获得</span></span><br><span class="line">        Class&lt;Student&gt;  c1 = Student.class;</span><br><span class="line">        System.out.println(c1);</span><br><span class="line"></span><br><span class="line">       </span><br><span class="line">        Class&lt;Student&gt; c2 = Student.class;</span><br><span class="line">        System.out.println(c1 == c2);</span><br><span class="line"></span><br><span class="line">         <span class="comment">//通过类的实例对象获得</span></span><br><span class="line">        Student c3 = <span class="keyword">new</span> Student();</span><br><span class="line">        System.out.println(c3.getClass() == c1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//通过反射获取类的对象</span></span><br><span class="line">        Class&lt;?&gt; c4 = Class.forName(<span class="string">&quot;test.Student&quot;</span>);</span><br><span class="line">        System.out.println(c4 == c1);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//class test.Student</span></span><br><span class="line"><span class="comment">//true</span></span><br><span class="line"><span class="comment">//true</span></span><br><span class="line"><span class="comment">//true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Class c1 = Object.class;<span class="comment">//class java.lang.Object</span></span><br><span class="line">Class c2 = Comparable.class;<span class="comment">//interface java.lang.Comparable</span></span><br><span class="line">Class c3 = String.class;<span class="comment">//class java.lang.String</span></span><br><span class="line">Class c4 = String[].class;<span class="comment">//class [Ljava.lang.String;</span></span><br><span class="line">Class c5 = <span class="keyword">int</span>.class;<span class="comment">//int</span></span><br><span class="line">Class c6 = <span class="keyword">int</span>[][].class;<span class="comment">//class [[I</span></span><br><span class="line">Class c7 = Integer.class;<span class="comment">//class java.lang.Integer</span></span><br><span class="line">Class c8 = Override.class;<span class="comment">//interface java.lang.Override</span></span><br><span class="line">Class c9 = ElementType.class;<span class="comment">//class java.lang.annotation.ElementType</span></span><br><span class="line">Class c10 = <span class="keyword">void</span>.class;<span class="comment">//void</span></span><br><span class="line">Class c11 =  Class.class;<span class="comment">//class java.lang.Class</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="获取类的成员"><a href="#获取类的成员" class="headerlink" title="获取类的成员"></a>获取类的成员</h3><div class="table-container"><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td><code>Field[] getFields()</code></td><td>获取该类所有共有属性</td></tr><tr><td><code>Field[] getDeclaredFields()</code></td><td>获取该类所有的属性</td></tr><tr><td><code>Field getField()</code></td><td>获取该类指定的共有属性</td></tr><tr><td><code>Field getDeclaredField()</code></td><td>获取该类指定的属性</td></tr><tr><td><code>Method[] getMethods()</code></td><td>获取该类的所有共有方法，包括从父类继承来的方法</td></tr><tr><td><code>Method[] getDeclaredMethods()</code></td><td>获取该类的所有方法</td></tr><tr><td><code>Method getMethod()</code></td><td>获取该类指定的共有方法</td></tr><tr><td><code>Method getDeclaredMethod()</code></td><td>获取该类指定的方法</td></tr></tbody></table></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException </span>&#123;</span><br><span class="line">        <span class="comment">//通过反射获取类的对象</span></span><br><span class="line">        Class&lt;?&gt; aClass = Class.forName(<span class="string">&quot;test.Student&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取所有共有属性</span></span><br><span class="line">        <span class="keyword">for</span> (Field field : aClass.getFields()) &#123;</span><br><span class="line">            System.out.println(field);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;=======================&quot;</span>);</span><br><span class="line">        <span class="comment">//获取所有属性</span></span><br><span class="line">        <span class="keyword">for</span> (Field declaredField : aClass.getDeclaredFields()) &#123;</span><br><span class="line">            System.out.println(declaredField);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;=======================&quot;</span>);</span><br><span class="line">        <span class="comment">//获取指定共有属性</span></span><br><span class="line">        System.out.println(aClass.getField(<span class="string">&quot;id&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;=======================&quot;</span>);</span><br><span class="line">        <span class="comment">//获取指定属性</span></span><br><span class="line">        System.out.println(aClass.getDeclaredField(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;=======================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取共有方法，包括父类的方法</span></span><br><span class="line">        <span class="keyword">for</span> (Method method : aClass.getMethods()) &#123;</span><br><span class="line">            System.out.println(method);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;=======================&quot;</span>);</span><br><span class="line">        <span class="comment">//获取所有方法，不包括父类</span></span><br><span class="line">        <span class="keyword">for</span> (Method declaredMethod : aClass.getDeclaredMethods()) &#123;</span><br><span class="line">            System.out.println(declaredMethod);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获取指定共有方法</span></span><br><span class="line">        System.out.println(aClass.getMethod(<span class="string">&quot;getName&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;=======================&quot;</span>);</span><br><span class="line">        <span class="comment">//获取指定方法</span></span><br><span class="line">        System.out.println(aClass.getDeclaredMethod(<span class="string">&quot;getId&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;=======================&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">public java.lang.String test.Student.id</span></span><br><span class="line"><span class="comment">=======================</span></span><br><span class="line"><span class="comment">private java.lang.String test.Student.name</span></span><br><span class="line"><span class="comment">private int test.Student.age</span></span><br><span class="line"><span class="comment">public java.lang.String test.Student.id</span></span><br><span class="line"><span class="comment">=======================</span></span><br><span class="line"><span class="comment">public java.lang.String test.Student.id</span></span><br><span class="line"><span class="comment">=======================</span></span><br><span class="line"><span class="comment">private java.lang.String test.Student.name</span></span><br><span class="line"><span class="comment">=======================</span></span><br><span class="line"><span class="comment">public java.lang.String test.Student.getName()</span></span><br><span class="line"><span class="comment">public void test.Student.setName(java.lang.String)</span></span><br><span class="line"><span class="comment">public void test.Student.setAge(int)</span></span><br><span class="line"><span class="comment">public int test.Student.getAge()</span></span><br><span class="line"><span class="comment">public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException</span></span><br><span class="line"><span class="comment">public final void java.lang.Object.wait() throws java.lang.InterruptedException</span></span><br><span class="line"><span class="comment">public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException</span></span><br><span class="line"><span class="comment">public boolean java.lang.Object.equals(java.lang.Object)</span></span><br><span class="line"><span class="comment">public java.lang.String java.lang.Object.toString()</span></span><br><span class="line"><span class="comment">public native int java.lang.Object.hashCode()</span></span><br><span class="line"><span class="comment">public final native java.lang.Class java.lang.Object.getClass()</span></span><br><span class="line"><span class="comment">public final native void java.lang.Object.notify()</span></span><br><span class="line"><span class="comment">public final native void java.lang.Object.notifyAll()</span></span><br><span class="line"><span class="comment">=======================</span></span><br><span class="line"><span class="comment">public java.lang.String test.Student.getName()</span></span><br><span class="line"><span class="comment">public void test.Student.setName(java.lang.String)</span></span><br><span class="line"><span class="comment">private java.lang.String test.Student.getId()</span></span><br><span class="line"><span class="comment">public void test.Student.setAge(int)</span></span><br><span class="line"><span class="comment">public int test.Student.getAge()</span></span><br><span class="line"><span class="comment">public java.lang.String test.Student.getName()</span></span><br><span class="line"><span class="comment">=======================</span></span><br><span class="line"><span class="comment">private java.lang.String test.Student.getId()</span></span><br><span class="line"><span class="comment">=======================</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="获取类的构造器"><a href="#获取类的构造器" class="headerlink" title="获取类的构造器"></a>获取类的构造器</h3><div class="table-container"><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td><code>Constructor getConstructor()</code></td><td>获取指定共有构造器（通过参数类型确认构造器）,私有构造器无法获取</td></tr><tr><td><code>Constructor getDeclaredConstructor()</code></td><td>获取指定构造器（通过参数类型确认构造器）</td></tr><tr><td><code>Constructor[] getConstructors()</code></td><td>获取所有共有构造器</td></tr><tr><td><code>Constructor[] getDeclaredConstructor()</code></td><td>获取所有构造器</td></tr></tbody></table></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过反射获取类的对象</span></span><br><span class="line">Class&lt;?&gt; aClass = Class.forName(<span class="string">&quot;test.Student&quot;</span>);</span><br><span class="line"><span class="comment">//获取指定共有构造器</span></span><br><span class="line">Constructor&lt;?&gt; constructor1 = aClass.getConstructor();</span><br><span class="line">System.out.println(constructor1);</span><br><span class="line">System.out.println(<span class="string">&quot;=====================&quot;</span>);</span><br><span class="line"><span class="comment">//获取指定构造器</span></span><br><span class="line">Constructor&lt;?&gt; constructor2 = aClass.getDeclaredConstructor(String.class,<span class="keyword">int</span>.class,String.class);</span><br><span class="line">System.out.println(constructor2);</span><br><span class="line">System.out.println(<span class="string">&quot;=====================&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (Constructor&lt;?&gt; constructor : aClass.getConstructors()) &#123;</span><br><span class="line">    System.out.println(constructor);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">&quot;=====================&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (Constructor&lt;?&gt; constructor : aClass.getDeclaredConstructors()) &#123;</span><br><span class="line">    System.out.println(constructor);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">public test.Student()</span></span><br><span class="line"><span class="comment">=====================</span></span><br><span class="line"><span class="comment">private test.Student(java.lang.String,int,java.lang.String)</span></span><br><span class="line"><span class="comment">=====================</span></span><br><span class="line"><span class="comment">public test.Student()</span></span><br><span class="line"><span class="comment">=====================</span></span><br><span class="line"><span class="comment">public test.Student()</span></span><br><span class="line"><span class="comment">private test.Student(java.lang.String,int,java.lang.String)</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>通过构造器创建对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过反射获取类的对象</span></span><br><span class="line">Class&lt;?&gt; aClass = Class.forName(<span class="string">&quot;test.Student&quot;</span>);</span><br><span class="line"><span class="comment">//使用无参构造器创建对象</span></span><br><span class="line">Student s1 = (Student)aClass.newInstance();</span><br><span class="line">System.out.println(s1);</span><br><span class="line">Constructor&lt;?&gt; c1 = aClass.getConstructor();</span><br><span class="line">Student s2 = (Student)c1.newInstance();</span><br><span class="line">System.out.println(s2);</span><br><span class="line"><span class="comment">//使用有参构造器创建对象</span></span><br><span class="line"><span class="comment">//        Constructor&lt;?&gt; c2 = aClass.getConstructor(String.class,int.class,String.class);//当构造器为私有时无法使用</span></span><br><span class="line"><span class="comment">//        Student s3 = (Student) c2.newInstance(&quot;孙悟空&quot;, 18, &quot;110&quot;);</span></span><br><span class="line"><span class="comment">//        System.out.println(s3);</span></span><br><span class="line"></span><br><span class="line">Constructor&lt;?&gt; c3 = aClass.getDeclaredConstructor(String.class,<span class="keyword">int</span>.class,String.class);</span><br><span class="line">c3.setAccessible(<span class="keyword">true</span>);<span class="comment">//设置安全模式为不检查，若不设置，构造器为私有时无法使用</span></span><br><span class="line">Student s4 = (Student) c3.newInstance(<span class="string">&quot;孙悟空&quot;</span>, <span class="number">18</span>, <span class="string">&quot;110&quot;</span>);</span><br><span class="line">System.out.println(s4);</span><br></pre></td></tr></table></figure><h3 id="操作对象的成员"><a href="#操作对象的成员" class="headerlink" title="操作对象的成员"></a>操作对象的成员</h3><p>当对象的成员为私有时，直接创建的对象无法直接操作私有成员，但可以使用反射创建的对象操作该成员，需要为该成员设置<code>setAccessible(true)</code>后就可以字节操作，该方法可以启用和禁用安全检测（true表示关闭，false表示开启），关闭安全检测后，使用反射会更快</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">Class&lt;?&gt; aClass = Class.forName(<span class="string">&quot;test.Student&quot;</span>);</span><br><span class="line"><span class="comment">//使用无参构造器创建对象</span></span><br><span class="line"></span><br><span class="line">Student s1 = (Student)aClass.newInstance();</span><br><span class="line"></span><br><span class="line"><span class="comment">//一般方法操共有方法和属性</span></span><br><span class="line">s1.setName(<span class="string">&quot;孙悟空&quot;</span>);</span><br><span class="line">s1.setAge(<span class="number">18</span>);</span><br><span class="line">s1.id = <span class="string">&quot;110&quot;</span>;</span><br><span class="line">System.out.println(s1);</span><br><span class="line"></span><br><span class="line"><span class="comment">//反射操作所有方法和属性</span></span><br><span class="line"><span class="comment">//使用共有方法</span></span><br><span class="line">Method setAge = aClass.getDeclaredMethod(<span class="string">&quot;setAge&quot;</span>, <span class="keyword">int</span>.class);</span><br><span class="line">setAge.invoke(s1,<span class="number">18</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置私有属性值</span></span><br><span class="line">Field name = aClass.getDeclaredField(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">name.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">name.set(s1,<span class="string">&quot;孙悟空&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用私有方法</span></span><br><span class="line">Method setName = aClass.getDeclaredMethod(<span class="string">&quot;setId&quot;</span>, String.class);</span><br><span class="line">setName.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">setName.invoke(s1,<span class="string">&quot;110&quot;</span>);</span><br><span class="line"></span><br><span class="line">System.out.println(s1);</span><br></pre></td></tr></table></figure><h3 id="反射与泛型"><a href="#反射与泛型" class="headerlink" title="反射与泛型"></a>反射与泛型</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test1</span><span class="params">(Map&lt;String,Student&gt; map, List&lt;Student&gt; list)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;test1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String, Student&gt; <span class="title">test2</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;test02&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, NoSuchFieldException, NoSuchMethodException, InstantiationException, IllegalAccessException, InvocationTargetException </span>&#123;</span><br><span class="line">        Class&lt;?&gt; aClass = Class.forName(<span class="string">&quot;test.Main&quot;</span>);</span><br><span class="line">        Method test1 = aClass.getMethod(<span class="string">&quot;test1&quot;</span>, Map.class, List.class);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Type genericParameterType : test1.getGenericParameterTypes()) &#123;</span><br><span class="line">            System.out.println(genericParameterType);</span><br><span class="line">            <span class="keyword">if</span> (genericParameterType <span class="keyword">instanceof</span> ParameterizedType)&#123;</span><br><span class="line">                <span class="keyword">for</span> (Type actualTypeArgument : ((ParameterizedType) genericParameterType).getActualTypeArguments()) &#123;</span><br><span class="line">                    System.out.println(actualTypeArgument);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;======&quot;</span>);</span><br><span class="line">        Method test2 = aClass.getMethod(<span class="string">&quot;test2&quot;</span>);</span><br><span class="line">        Type genericReturnType = test2.getGenericReturnType();</span><br><span class="line">        <span class="keyword">if</span> (genericReturnType <span class="keyword">instanceof</span> ParameterizedType)&#123;</span><br><span class="line">            Type[] actualTypeArguments = ((ParameterizedType) genericReturnType).getActualTypeArguments();</span><br><span class="line">            <span class="keyword">for</span> (Type type:actualTypeArguments)&#123;</span><br><span class="line">                System.out.println(type);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反射与注解"><a href="#反射与注解" class="headerlink" title="反射与注解"></a>反射与注解</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException</span>&#123;</span><br><span class="line">    Class&lt;?&gt; aClass = Class.forName(<span class="string">&quot;test.Student&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (Field declaredField : aClass.getDeclaredFields()) &#123;</span><br><span class="line">        <span class="keyword">if</span> (declaredField.getDeclaredAnnotation(AnnotationField.class) <span class="keyword">instanceof</span> AnnotationField)&#123;</span><br><span class="line">            declaredField.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">            AnnotationField declaredAnnotation = declaredField.getDeclaredAnnotation(AnnotationField.class);</span><br><span class="line">            System.out.println(<span class="string">&quot;%s %s %d&quot;</span>.formatted(declaredAnnotation.columnName() , declaredAnnotation.type(),declaredAnnotation.length()));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;===================&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (Method method : aClass.getDeclaredMethods()) &#123;</span><br><span class="line">        <span class="keyword">if</span> (method.getDeclaredAnnotation(AnnotationMethod.class) <span class="keyword">instanceof</span> AnnotationMethod)&#123;</span><br><span class="line">            method.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">            AnnotationMethod declaredAnnotation = method.getDeclaredAnnotation(AnnotationMethod.class);</span><br><span class="line">            System.out.println(declaredAnnotation);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">age int 2</span></span><br><span class="line"><span class="comment">id varchar 10</span></span><br><span class="line"><span class="comment">===================</span></span><br><span class="line"><span class="comment"><span class="doctag">@test</span>.AnnotationMethod(&quot;method&quot;)</span></span><br><span class="line"><span class="comment"><span class="doctag">@test</span>.AnnotationMethod(&quot;method&quot;)</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>使用<code>org.reflections.Reflections</code>库批量扫描注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">Set&lt;Field&gt; fieldsAnnotatedWith = <span class="keyword">new</span> Reflections(<span class="string">&quot;test&quot;</span>, Scanners.FieldsAnnotated)</span><br><span class="line">    .getFieldsAnnotatedWith(AnnotationField.class);</span><br><span class="line"><span class="keyword">for</span> (Field field:fieldsAnnotatedWith)&#123;</span><br><span class="line">    System.out.println(field);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">&quot;================&quot;</span>);</span><br><span class="line">Set&lt;Method&gt; methodsAnnotatedWith = <span class="keyword">new</span> Reflections(<span class="string">&quot;test&quot;</span>,Scanners.MethodsAnnotated)</span><br><span class="line">    .getMethodsAnnotatedWith(AnnotationMethod.class);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (Method method:methodsAnnotatedWith)&#123;</span><br><span class="line">    System.out.println(method);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">&quot;================&quot;</span>);</span><br><span class="line"></span><br><span class="line">Set&lt;Class&lt;?&gt;&gt; typesAnnotatedWith = <span class="keyword">new</span> Reflections(<span class="string">&quot;test&quot;</span>,Scanners.TypesAnnotated)</span><br><span class="line">    .getTypesAnnotatedWith(AnnotationTable.class);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (Class&lt;?&gt; c: typesAnnotatedWith)&#123;</span><br><span class="line">    System.out.println(c);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(<span class="string">&quot;================&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">91 [main] INFO org.reflections.Reflections - Reflections took 74 ms to scan 1 urls, producing 1 keys and 3 values</span></span><br><span class="line"><span class="comment">private java.lang.String test.Student.name</span></span><br><span class="line"><span class="comment">private int test.Student.age</span></span><br><span class="line"><span class="comment">public java.lang.String test.Student.id</span></span><br><span class="line"><span class="comment">================</span></span><br><span class="line"><span class="comment">113 [main] INFO org.reflections.Reflections - Reflections took 11 ms to scan 1 urls, producing 1 keys and 6 values</span></span><br><span class="line"><span class="comment">123 [main] INFO org.reflections.Reflections - Reflections took 6 ms to scan 1 urls, producing 3 keys and 6 values</span></span><br><span class="line"><span class="comment">public int test.Student.getAge()</span></span><br><span class="line"><span class="comment">private java.lang.String test.Student.getId()</span></span><br><span class="line"><span class="comment">public void test.Student.setName(java.lang.String)</span></span><br><span class="line"><span class="comment">public java.lang.String test.Student.getName()</span></span><br><span class="line"><span class="comment">public void test.Student.setAge(int)</span></span><br><span class="line"><span class="comment">public void test.Student.setId(java.lang.String)</span></span><br><span class="line"><span class="comment">================</span></span><br><span class="line"><span class="comment">class test.Student</span></span><br><span class="line"><span class="comment">class test.Teacher</span></span><br><span class="line"><span class="comment">================</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>使用该库需要准确告知扫描器类型，否则无法扫描</p></blockquote><h1 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h1><h2 id="InetAddress类"><a href="#InetAddress类" class="headerlink" title="InetAddress类"></a>InetAddress类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">InetAddress byName = InetAddress.getByName(<span class="string">&quot;******&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;主机名:&quot;</span>+byName.getHostName());</span><br><span class="line">System.out.println(<span class="string">&quot;ip地址:&quot;</span>+byName.getHostAddress());</span><br><span class="line">System.out.println(byName);</span><br></pre></td></tr></table></figure><h2 id="UDP通信练习"><a href="#UDP通信练习" class="headerlink" title="UDP通信练习"></a>UDP通信练习</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UDPSend</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        InetAddress inetAddress = InetAddress.getByName(<span class="string">&quot;hostIp&quot;</span>);</span><br><span class="line"></span><br><span class="line">        DatagramSocket ds = <span class="keyword">new</span> DatagramSocket();</span><br><span class="line">        BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span><br><span class="line">        String line;</span><br><span class="line">        <span class="keyword">while</span> ((line = br.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">            DatagramPacket datagramPacket = <span class="keyword">new</span> DatagramPacket(line.getBytes(),line.getBytes().length,inetAddress,<span class="number">8888</span>);<span class="comment">//指定数据报发送的地址和端口</span></span><br><span class="line"></span><br><span class="line">            ds.send(datagramPacket);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//接受数据并打印</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UDPReceive</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        DatagramSocket socket = <span class="keyword">new</span> DatagramSocket(<span class="number">8888</span>);</span><br><span class="line">        <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">            DatagramPacket dp = <span class="keyword">new</span> DatagramPacket(bytes,bytes.length );</span><br><span class="line">            socket.receive(dp);</span><br><span class="line">            System.out.println(<span class="string">&quot;接受到:&quot;</span>+<span class="keyword">new</span> String(dp.getData(),<span class="number">0</span>,dp.getLength()));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="TCP通信练习"><a href="#TCP通信练习" class="headerlink" title="TCP通信练习"></a>TCP通信练习</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TCPReceive</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        ServerSocket socket = <span class="keyword">new</span> ServerSocket(<span class="number">8888</span>);</span><br><span class="line">        Socket s = socket.accept();</span><br><span class="line">        InputStreamReader reader = <span class="keyword">new</span> InputStreamReader(s.getInputStream());</span><br><span class="line">        <span class="keyword">char</span>[] bytes = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">int</span> len;</span><br><span class="line">        <span class="keyword">while</span> ( (len = reader.read(bytes)) != -<span class="number">1</span>)&#123;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="keyword">new</span> String(bytes,<span class="number">0</span>,len));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TCPSend</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Socket socket = <span class="keyword">new</span> Socket(<span class="string">&quot;127.0.0.1&quot;</span>,<span class="number">8888</span>);</span><br><span class="line">        BufferedReader bufferedReader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span><br><span class="line"></span><br><span class="line">        OutputStream outputStream = socket.getOutputStream();</span><br><span class="line">        String line = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">while</span> ((line = bufferedReader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">            outputStream.write(line.getBytes());</span><br><span class="line">            outputStream.flush();</span><br><span class="line">        &#125;</span><br><span class="line">        outputStream.close();</span><br><span class="line">        socket.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="并发"><a href="#并发" class="headerlink" title="并发"></a>并发</h1><h2 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h2><h2 id="多进程"><a href="#多进程" class="headerlink" title="多进程"></a>多进程</h2><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20211119173309942.png" alt="image-20211119173309942"></p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20211119173620057.png" alt="image-20211119173620057"></p><h2 id="常用类线程安全对比"><a href="#常用类线程安全对比" class="headerlink" title="常用类线程安全对比"></a>常用类线程安全对比</h2><div class="table-container"><table><thead><tr><th>JDK版本</th><th>不执行同步，更快</th><th>执行同步，安全性高</th></tr></thead><tbody><tr><td><code>JDK5</code></td><td><code>StringBuilder</code></td><td><code>StringBuffer</code></td></tr><tr><td><code>JDK2</code></td><td><code>ArrayList</code></td><td><code>Vector</code></td></tr><tr><td><code>JDK2</code></td><td><code>HashMap</code></td><td><code>HashTable</code></td></tr></tbody></table></div><h1 id="问题汇总"><a href="#问题汇总" class="headerlink" title="问题汇总"></a>问题汇总</h1><h2 id="待解决问题"><a href="#待解决问题" class="headerlink" title="待解决问题"></a>待解决问题</h2><ul><li>List.of()的重载有很多，有1~10个参数的重载，但明明有可变参数的重载为什么还要写那么多的重载</li></ul><p>包名不能是jdk中的含有的包的名称</p><ul><li>为什么<code>Reflections</code>库可以扫描到未被<code>@Retention(RetentionPolicy.RUNTIME)</code>修饰的注解</li></ul><h2 id="已解决问题"><a href="#已解决问题" class="headerlink" title="已解决问题"></a>已解决问题</h2><ul><li>Error: A JNI error has occurred, please check your installation and try again</li></ul><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/屏幕截图 2021-11-19 200235.png" alt="屏幕截图 2021-11-19 200235"></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;文档描述&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Java" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>正则表达式</title>
    <link href="https://dreamcatcherdeng.gitee.io/personal-blog/2022/03/08/RegularExpression/"/>
    <id>https://dreamcatcherdeng.gitee.io/personal-blog/2022/03/08/RegularExpression/</id>
    <published>2022-03-08T13:28:55.601Z</published>
    <updated>2022-05-02T12:35:45.388Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文介绍了正则表达式的常见知识点，并列举了正则表达式的方法。本文的知识点来自韩顺平的正则表达式讲解。</p></blockquote><span id="more"></span><p><a href="https://www.bilibili.com/video/BV1Eq4y1E79W?from=search&amp;seid=3635718524423831028&amp;spm_id_from=333.337.0.0">视频地址</a></p><h1 id="正则表达式的概念"><a href="#正则表达式的概念" class="headerlink" title="正则表达式的概念"></a>正则表达式的概念</h1><p>使用单一的字符串模式描述或匹配一些列具有相同规则的字符串的一种公式。</p><h1 id="正则表达式的使用"><a href="#正则表达式的使用" class="headerlink" title="正则表达式的使用"></a>正则表达式的使用</h1><h2 id="转义符"><a href="#转义符" class="headerlink" title="转义符"></a>转义符</h2><blockquote><p>注：在java的正则表达式中，转义符是<code>\\</code>,即两个<code>\</code>相当于其他语言的一个<code>\</code></p></blockquote><ul><li>匹配一个转义符</li></ul><p><strong>原字符串使用两个反斜杠表示一个反斜杠，模式串使用四个反斜杠匹配一个反斜杠</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str = <span class="string">&quot;hello\\world&quot;</span>；</span><br><span class="line">pattern = <span class="string">&quot;\\\\&quot;</span>;<span class="comment">//前两个\表示一个\，即正常的转义符，后两个\表示一个\，后面的\被前面的\转义使其不再具有转义的功能，从而正常表达为\，所以需要四个\表示一个\</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220210112002027.png" alt="image-20220210112002027"></p><ul><li><p>匹配两个转义符</p><p><strong>原字符串使用四个反斜杠表示两个反斜杠，模式字符串使用八个反斜杠表示两个反斜杠</strong></p><p>通常需要被转义的字符有：</p><p><code>.*+()$/\?[]^&#123;&#125;</code></p></li></ul><h2 id="字符匹配符"><a href="#字符匹配符" class="headerlink" title="字符匹配符"></a>字符匹配符</h2><p>字符匹配符即元字符，用于匹配一般字符的字符</p><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:center">符号解释</th><th style="text-align:center">示例</th><th style="text-align:center">示例解释</th></tr></thead><tbody><tr><td style="text-align:center"><code>[]</code></td><td style="text-align:center">匹配中括号内的任意一个字符</td><td style="text-align:center"><code>[abcde]</code></td><td style="text-align:center">可以匹配a,b,c,d,e中的任意一个字符</td></tr><tr><td style="text-align:center"><code>[^]</code></td><td style="text-align:center">匹配除了<code>^</code>之后的任意一个字符</td><td style="text-align:center"><code>[^abcde]</code></td><td style="text-align:center">可以匹配除了a,b,c,d,e中的任意字符</td></tr><tr><td style="text-align:center"><code>-</code></td><td style="text-align:center">匹配连字符两端之间的任意一个字符</td><td style="text-align:center"><code>[a-e]</code></td><td style="text-align:center">可以匹配从a到z之间的任意一个字符(包括a和e),相当于<code>[abcde]</code></td></tr><tr><td style="text-align:center"><code>.</code></td><td style="text-align:center">匹配除了<code>\n</code>以外的任意一个字符</td><td style="text-align:center"><code>a...e</code></td><td style="text-align:center">可以匹配<code>adase</code>,<code>adsee</code>等，一个<code>.</code>表示任意一个除了<code>\n</code>之外的字符</td></tr><tr><td style="text-align:center"><code>\\d</code></td><td style="text-align:center">匹配单个数字字符</td><td style="text-align:center"><code>\\d</code></td><td style="text-align:center">相当于<code>[0-9]</code></td></tr><tr><td style="text-align:center"><code>\\D</code></td><td style="text-align:center">匹配单个非数字字符</td><td style="text-align:center"><code>\\D</code></td><td style="text-align:center">相当于<code>[^0-9]</code></td></tr><tr><td style="text-align:center"><code>\\w</code></td><td style="text-align:center">匹配单个数字、大小写字母、下划线</td><td style="text-align:center"><code>\\w</code></td><td style="text-align:center">相当于<code>[0-9a-zA-Z_]</code></td></tr><tr><td style="text-align:center"><code>\\W</code></td><td style="text-align:center">匹配单个非数字、大小写字母、下划线</td><td style="text-align:center"><code>\\W</code></td><td style="text-align:center">相当于<code>[^0-9a-zA-Z_]</code></td></tr><tr><td style="text-align:center"><code>(?i)</code></td><td style="text-align:center">不区分大小写匹配后面的字母</td><td style="text-align:center"><code>c(?i)abc</code></td><td style="text-align:center">可以匹配<code>cabc,cABC</code></td></tr><tr><td style="text-align:center"><code>\\s</code></td><td style="text-align:center">匹配任何空白字符</td><td style="text-align:center"><code>\\s</code></td><td style="text-align:center">可以匹配空格，制表符等</td></tr><tr><td style="text-align:center"><code>\\S</code></td><td style="text-align:center">匹配任何非空白字符</td><td style="text-align:center"><code>\\S</code></td><td style="text-align:center">匹配任何可以显示的字符</td></tr></tbody></table></div><blockquote><p>注：若要使匹配字符串时大小写不敏感，还可以使用<code>Pattern.compile(reStr,Pattern.CASE_INSENSITIVE)</code>进行大小写不敏感匹配</p><p><code>[]</code>内的元字符表示字符本身的意思，不再具有特殊意义</p></blockquote><h2 id="选择匹配符"><a href="#选择匹配符" class="headerlink" title="选择匹配符"></a>选择匹配符</h2><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:center">符号解释</th><th style="text-align:center">示例</th><th style="text-align:center">示例解释</th></tr></thead><tbody><tr><td style="text-align:center">`</td><td style="text-align:center">`</td><td style="text-align:center">选择匹配符，匹配符号左右两端任意一个模式串</td><td style="text-align:center">`abc</td><td>DEF`</td><td>可以匹配<code>abc</code>,或<code>DEF</code></td></tr></tbody></table></div><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220302182444082.png" alt="image-20220302182444082"></p><h2 id="限定符"><a href="#限定符" class="headerlink" title="限定符"></a>限定符</h2><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:center">符号解释</th><th style="text-align:center">示例</th><th style="text-align:center">示例解释</th></tr></thead><tbody><tr><td style="text-align:center"><code>*</code></td><td style="text-align:center">指定字符重复0次到n次</td><td style="text-align:center"><code>(abc)*</code></td><td style="text-align:center">可以匹配空白字符,<code>abc，abcabc,abcabcabc</code>等</td></tr><tr><td style="text-align:center"><code>+</code></td><td style="text-align:center">指定字符重复1次到n次</td><td style="text-align:center"><code>m+(abc)*</code></td><td style="text-align:center">至少以一个m开头，0个或多个<code>abc</code>，可以匹配<code>mabc,mabcabc,mmmabc等</code></td></tr><tr><td style="text-align:center"><code>?</code></td><td style="text-align:center">指定字符重复0次到1次</td><td style="text-align:center"><code>m?(abc)*</code></td><td style="text-align:center">以0个或1个m开头，0个或多个<code>abc</code>，可以匹配<code>abc,mabc,mabcabc,mmmabc等</code></td></tr><tr><td style="text-align:center"><code>&#123;n&#125;</code></td><td style="text-align:center">指定n个前面字符</td><td style="text-align:center">`a{3}</td><td style="text-align:center">[abc]{3}`</td><td>可以匹配<code>aaa,abc，abb,bbb,ccc,abc,cba等</code></td></tr><tr><td style="text-align:center"><code>&#123;n,m&#125;</code></td><td style="text-align:center">指定n到m个字符</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><code>&#123;n,&#125;</code></td><td style="text-align:center">指定至少n个字符</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">{,m}</td><td style="text-align:center">指定最多m个字符</td><td style="text-align:center"></td></tr></tbody></table></div><h3 id="贪婪匹配"><a href="#贪婪匹配" class="headerlink" title="贪婪匹配"></a>贪婪匹配</h3><ul><li>java的匹配规则是<strong>贪婪匹配</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str = <span class="string">&quot;11111&quot;</span>;</span><br><span class="line">pattern = <span class="string">&quot;1&#123;3,4&#125;&quot;</span>;</span><br></pre></td></tr></table></figure><p>则按照贪婪匹配原则，pattern将匹配 <strong>4个1而不是3个1</strong></p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220210104620666.png" alt="image-20220210104620666"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str=<span class="string">&quot;1111111&quot;</span>;</span><br><span class="line">pattern = <span class="string">&quot;&#123;3,4&#125;&quot;</span>;</span><br></pre></td></tr></table></figure><p>则按照贪婪匹配原则,pattern将先匹配 <strong>4个1,再匹配3个1</strong></p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220210104713981.png" alt="image-20220210104713981"></p><h3 id="非贪婪匹配"><a href="#非贪婪匹配" class="headerlink" title="非贪婪匹配"></a>非贪婪匹配</h3><p>若想使用非贪婪匹配，只需在限定符后面加<code>?</code></p><ul><li><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220302201400708.png" alt="image-20220302201400708"></li></ul><h2 id="定位符"><a href="#定位符" class="headerlink" title="定位符"></a>定位符</h2><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:center">符号解释</th><th style="text-align:center">示例</th><th style="text-align:center">示例解释</th></tr></thead><tbody><tr><td style="text-align:center"><code>^</code></td><td style="text-align:center">指定起始字符</td><td style="text-align:center"><code>^[0-9]+</code></td><td style="text-align:center">匹配以0-9数字开头的字符如<code>0a,1abc,111</code></td></tr><tr><td style="text-align:center">$$`</td><td style="text-align:center">指定结束字符</td><td style="text-align:center">`[a-z]$$</td><td style="text-align:center">匹配以a-z结尾的字符<code>023a,23b</code></td></tr><tr><td style="text-align:center"><code>\\b</code></td><td style="text-align:center">指定目标串的边界</td><td style="text-align:center"><code>abc\\b</code></td><td style="text-align:center">可以匹配字符串<code>abcddd dddabc abcddd</code>中的<code>dddabc</code>的<code>abc</code></td></tr><tr><td style="text-align:center"><code>\\B</code></td><td style="text-align:center">指定目标串的非边界</td><td style="text-align:center"></td></tr></tbody></table></div><h2 id="捕获分组"><a href="#捕获分组" class="headerlink" title="捕获分组"></a>捕获分组</h2><div class="table-container"><table><thead><tr><th style="text-align:center">捕获形式</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center"><code>(pattern)</code></td><td style="text-align:center">非命名捕获，捕获内容使用捕获的组号来获取</td></tr><tr><td style="text-align:center"><code>(?&lt;name&gt;pattern)</code></td></tr></tbody></table></div><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220302204724900.png" alt="image-20220302204724900"></p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220302205421421.png" alt="image-20220302205421421"></p><h2 id="非捕获分组"><a href="#非捕获分组" class="headerlink" title="非捕获分组"></a>非捕获分组</h2><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20220302205619129.png" alt="image-20220302205619129"> </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RegExp08</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String content = <span class="string">&quot;在线学习 在线教育 在线玩游戏&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//只匹配“在线学习”和“在线教育”</span></span><br><span class="line">        String regStr = <span class="string">&quot;在线(?:学习|教育)&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        //只匹配“在线学习”和“在线教育”的“在线”</span></span><br><span class="line"><span class="comment">//        String regStr = &quot;在线(?=学习|教育)&quot;;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        //只匹配“在线玩游戏”的在线</span></span><br><span class="line"><span class="comment">//        String regStr = &quot;在线(?!学习|教育)&quot;;</span></span><br><span class="line"></span><br><span class="line">        Pattern pattern = Pattern.compile(regStr);</span><br><span class="line">        Matcher matcher = pattern.matcher(content);</span><br><span class="line">        <span class="keyword">while</span> (matcher.find())&#123;</span><br><span class="line">            System.out.println(matcher.group(<span class="number">0</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="反向引用"><a href="#反向引用" class="headerlink" title="反向引用"></a>反向引用</h2><p>圆括号内的内容被捕获后可以在圆括号后被使用，从而写出与圆括号内容相同的内容，这个方法被称为反向引用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RegExp13</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取五位数的回文串</span></span><br><span class="line">        String regStr = <span class="string">&quot;(\\d)(\\d)(\\d)\\2\\1&quot;</span>;</span><br><span class="line">        String content = <span class="string">&quot;123451232145654&quot;</span>;</span><br><span class="line"></span><br><span class="line">        Pattern pattern = Pattern.compile(regStr);</span><br><span class="line">        Matcher matcher = pattern.matcher(content);</span><br><span class="line">        <span class="keyword">while</span> (matcher.find())&#123;</span><br><span class="line">            System.out.println(matcher.group());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">输出：</span></span><br><span class="line"><span class="comment">12321</span></span><br><span class="line"><span class="comment">45654</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RegExp14</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String content = <span class="string">&quot;我...我要...学学学...java&quot;</span>;</span><br><span class="line">        String s = <span class="string">&quot;\\.&quot;</span>;</span><br><span class="line">        String s1 = <span class="string">&quot;(.)\\1+&quot;</span>;</span><br><span class="line">        System.out.println(content);</span><br><span class="line">        Pattern pattern = Pattern.compile(s);</span><br><span class="line">        Matcher matcher = pattern.matcher(content);</span><br><span class="line">        <span class="comment">//将.号删除</span></span><br><span class="line">        content = matcher.replaceAll(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        System.out.println(content);</span><br><span class="line">        <span class="comment">//将连续的重复字替换为一个</span></span><br><span class="line">        pattern = Pattern.compile(s1);</span><br><span class="line">        matcher = pattern.matcher(content);</span><br><span class="line">        content = matcher.replaceAll(<span class="string">&quot;$1&quot;</span>);</span><br><span class="line">        System.out.println(content);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">输出：</span></span><br><span class="line"><span class="comment">我...我要...学学学...java</span></span><br><span class="line"><span class="comment">我我要学学学java</span></span><br><span class="line"><span class="comment">我要学java</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><blockquote><p>注：<code>\\分组好</code>为反向引用，在<code>Pattern.compile()</code>函数编译时使用，<code>$分组号</code>也为反向引用，在编译之后使用</p></blockquote><h2 id="正则表达式的分组原理"><a href="#正则表达式的分组原理" class="headerlink" title="正则表达式的分组原理"></a>正则表达式的分组原理</h2><h3 id="获取分组"><a href="#获取分组" class="headerlink" title="获取分组"></a>获取分组</h3><p>模式串中，每一个<code>()</code>代表一个分组，分组从<code>1</code>开始，使用<code>matcher.group(0)</code>获取模式串匹配到的整个文本，使用<code>matcher.group(1)</code>获得第一个分组，使用<code>matcher.group(1)</code>获得第二个分组，依此类推。</p><h3 id="matcher-group-源码"><a href="#matcher-group-源码" class="headerlink" title="matcher.group()源码"></a><code>matcher.group()</code>源码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">group</span><span class="params">(<span class="keyword">int</span> group)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (first &lt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">&quot;No match found&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (group &lt; <span class="number">0</span> || group &gt; groupCount())</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IndexOutOfBoundsException(<span class="string">&quot;No group &quot;</span> + group);</span><br><span class="line">        <span class="keyword">if</span> ((groups[group*<span class="number">2</span>] == -<span class="number">1</span>) || (groups[group*<span class="number">2</span>+<span class="number">1</span>] == -<span class="number">1</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">return</span> getSubSequence(groups[group * <span class="number">2</span>], groups[group * <span class="number">2</span> + <span class="number">1</span>]).toString();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>传入的参数<code>group</code>表示分组号，<code>groups[]</code>数组中存放着匹配到的分组的索引信息，<code>groups[0]到groups[1]</code>存放的是整个模式串匹配到的字符串的第一个字符到最后一个字符的索引，<code>groups[group*2]到groups[group*2+1)]</code>存放的是第<code>group</code>个分组的第一个和最后一个字符的索引。</p><h1 id="正则表达式常用类及方法"><a href="#正则表达式常用类及方法" class="headerlink" title="正则表达式常用类及方法"></a>正则表达式常用类及方法</h1><h2 id="Pattern类"><a href="#Pattern类" class="headerlink" title="Pattern类"></a><code>Pattern</code>类</h2><h3 id="Pattern-matches（regex-content）"><a href="#Pattern-matches（regex-content）" class="headerlink" title="Pattern.matches（regex,content）"></a><code>Pattern.matches（regex,content）</code></h3><p>若模式串<code>regex</code>字符串<code>content</code>能够整体匹配，返回结果为<code>true</code>否则为<code>false</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RegExp11</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String content = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">        String regex1 = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">String regex2 = <span class="string">&quot;hello.*&quot;</span>;</span><br><span class="line">        System.out.println(Pattern.matches(regex1, content));<span class="comment">//false</span></span><br><span class="line">        System.out.println(Pattern.matches(regex2, content));<span class="comment">//true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Matcher类"><a href="#Matcher类" class="headerlink" title="Matcher类"></a><code>Matcher</code>类</h2><h3 id="matcher-start-和matcher-end"><a href="#matcher-start-和matcher-end" class="headerlink" title="matcher.start()和matcher.end()"></a><code>matcher.start()和matcher.end()</code></h3><p>返回每次匹配到的字符开始和结束的索引</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RegExp12</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String content = <span class="string">&quot;hello world hello&quot;</span>;</span><br><span class="line">        String regex1 = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line"></span><br><span class="line">        Pattern pattern = Pattern.compile(regex1);</span><br><span class="line">        Matcher matcher = pattern.matcher(content);</span><br><span class="line">        <span class="keyword">while</span> (matcher.find())&#123;</span><br><span class="line">            System.out.println(matcher.start());</span><br><span class="line">            System.out.println(matcher.end());</span><br><span class="line">            System.out.println(content.substring(matcher.start(),matcher.end()));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">输出：</span></span><br><span class="line"><span class="comment">0</span></span><br><span class="line"><span class="comment">5</span></span><br><span class="line"><span class="comment">hello</span></span><br><span class="line"><span class="comment">12</span></span><br><span class="line"><span class="comment">17</span></span><br><span class="line"><span class="comment">hello</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p><code>matcher.matches()</code></p><p>也表示整体匹配，和<code>Pattern.matches(regex,content)</code>一样返回结果为<code>boolean</code>类型</p><p><code>matcher.replaceAll(replaceStr)</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RegExp12</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String content = <span class="string">&quot;hello world hello&quot;</span>;</span><br><span class="line">        String regex1 = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line"></span><br><span class="line">        Pattern pattern = Pattern.compile(regex1);</span><br><span class="line">        Matcher matcher = pattern.matcher(content);</span><br><span class="line">      String world = matcher.replaceAll(<span class="string">&quot;world&quot;</span>);</span><br><span class="line">        System.out.println(world);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">输出：</span></span><br><span class="line"><span class="comment">world world world</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>注：<code>matcher.replaceAll（replaceStr）</code>不替换原有的文本，而是拷贝后替换返回新的文本</p></blockquote><h1 id="String类中的正则表达式的使用"><a href="#String类中的正则表达式的使用" class="headerlink" title="String类中的正则表达式的使用"></a><code>String类</code>中的正则表达式的使用</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RegExp15</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//relaceAll()方法</span></span><br><span class="line">        String content = <span class="string">&quot;hello world hi wolrd&quot;</span>;</span><br><span class="line">        content = content.replaceAll(<span class="string">&quot;hello|hi&quot;</span>,<span class="string">&quot;你好&quot;</span>);</span><br><span class="line">        System.out.println(content);</span><br><span class="line"></span><br><span class="line"><span class="comment">//matches()方法</span></span><br><span class="line">        String phone = <span class="string">&quot;13888888888&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (phone.matches(<span class="string">&quot;^1[3|4|5|7|8][0-9]&#123;9&#125;$&quot;</span>))&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;是电话号码！&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;不是电话号码！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//split()方法</span></span><br><span class="line">        String splitStr = <span class="string">&quot;hello#world&amp;hi%wolrd&quot;</span>;</span><br><span class="line">        String[] split = splitStr.split(<span class="string">&quot;[#&amp;%]&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (String s : split)&#123;</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">输出：</span></span><br><span class="line"><span class="comment">你好 world 你好 wolrd</span></span><br><span class="line"><span class="comment">是电话号码！</span></span><br><span class="line"><span class="comment">hello</span></span><br><span class="line"><span class="comment">world</span></span><br><span class="line"><span class="comment">hi</span></span><br><span class="line"><span class="comment">wolrd</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文介绍了正则表达式的常见知识点，并列举了正则表达式的方法。本文的知识点来自韩顺平的正则表达式讲解。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Java" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/Java/"/>
    
    <category term="正则表达式" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/Java/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>算法笔记</title>
    <link href="https://dreamcatcherdeng.gitee.io/personal-blog/2021/11/03/algorithm/"/>
    <id>https://dreamcatcherdeng.gitee.io/personal-blog/2021/11/03/algorithm/</id>
    <published>2021-11-02T16:29:35.247Z</published>
    <updated>2022-05-02T12:35:45.325Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文介绍了算法中常见的知识点和技巧，代码使用伪码或c++实现</p></blockquote> <span id="more"></span><hr><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><ul><li>字符型<ul><li>字符 </li><li>字符串 </li></ul></li><li>数字型<ul><li>整型</li><li>浮点型</li></ul></li><li>bool型<ul><li>bool值<br><details><summary>数据类型取值范围表 </summary></li></ul></li></ul><div class="table-container"><table><thead><tr><th style="text-align:left">类型</th><th style="text-align:left">位</th><th style="text-align:left">范围</th></tr></thead><tbody><tr><td style="text-align:left">char</td><td style="text-align:left">1 个字节</td><td style="text-align:left">-128 到 127 或者 0 到 255</td></tr><tr><td style="text-align:left">unsigned char</td><td style="text-align:left">1 个字节</td><td style="text-align:left">0 到 255</td></tr><tr><td style="text-align:left">signed char</td><td style="text-align:left">1 个字节</td><td style="text-align:left">-128 到 127</td></tr><tr><td style="text-align:left">int</td><td style="text-align:left">4 个字节</td><td style="text-align:left">-2147483648 到 2147483647</td></tr><tr><td style="text-align:left">unsigned int</td><td style="text-align:left">4 个字节</td><td style="text-align:left">0 到 4294967295</td></tr><tr><td style="text-align:left">signed int</td><td style="text-align:left">4 个字节</td><td style="text-align:left">-2147483648 到 2147483647</td></tr><tr><td style="text-align:left">short int</td><td style="text-align:left">2 个字节</td><td style="text-align:left">-32768 到 32767</td></tr><tr><td style="text-align:left">unsigned short int</td><td style="text-align:left">2 个字节</td><td style="text-align:left">0 到 65,535</td></tr><tr><td style="text-align:left">signed short int</td><td style="text-align:left">2 个字节</td><td style="text-align:left">-32768 到 32767</td></tr><tr><td style="text-align:left">long int</td><td style="text-align:left">8 个字节</td><td style="text-align:left">-9,223,372,036,854,775,808 到 9,223,372,036,854,775,807</td></tr><tr><td style="text-align:left">signed long int</td><td style="text-align:left">8 个字节</td><td style="text-align:left">-9,223,372,036,854,775,808 到 9,223,372,036,854,775,807</td></tr><tr><td style="text-align:left">unsigned long int</td><td style="text-align:left">8 个字节</td><td style="text-align:left">0 到 18,446,744,073,709,551,615</td></tr><tr><td style="text-align:left">float</td><td style="text-align:left">4 个字节</td><td style="text-align:left">精度型占4个字节（32位）内存空间，+/- 3.4e +/- 38 (~7 个数字)</td></tr><tr><td style="text-align:left">double</td><td style="text-align:left">8 个字节</td><td style="text-align:left">双精度型占8 个字节（64位）内存空间，+/- 1.7e +/- 308 (~15 个数字)</td></tr><tr><td style="text-align:left">long double</td><td style="text-align:left">16 个字节</td><td style="text-align:left">长双精度型 16 个字节（128位）内存空间，可提供18-19位有效数字。</td></tr><tr><td style="text-align:left">wchar_t</td><td style="text-align:left">2 或 4 个字节</td><td style="text-align:left">1 个宽字符</td></tr></tbody></table></div><p>&lt;/details&gt;</p><h1 id="符号定义"><a href="#符号定义" class="headerlink" title="符号定义"></a>符号定义</h1><div class="table-container"><table><thead><tr><th style="text-align:center">数学符号</th><th style="text-align:left">定义</th></tr></thead><tbody><tr><td style="text-align:center">$\pi$</td><td style="text-align:left"><code>#define P acos(-1.0)</code></td></tr><tr><td style="text-align:center">$\varepsilon$</td><td style="text-align:left"><code>#define eps 1e-8</code></td></tr><tr><td style="text-align:center">$+\infty$</td><td style="text-align:left"><code>INF</code></td></tr></tbody></table></div><blockquote><p>对于<code>unsigned int</code>型<code>#define INF 0xffffffff</code>，对于<code>int</code>型<code>#define INF 0x7fffffff</code>，一般的问题 <code>#define INF 0x3f3f3f3f</code></p></blockquote><h1 id="函数定义"><a href="#函数定义" class="headerlink" title="函数定义"></a>函数定义</h1><h2 id="浮点数的比较"><a href="#浮点数的比较" class="headerlink" title="浮点数的比较"></a>浮点数的比较</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//等于</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">equal</span><span class="params">(<span class="keyword">double</span> a,<span class="keyword">double</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">fabs</span>(a-b) &lt; eps;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//大于</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">more</span><span class="params">(<span class="keyword">double</span> a,<span class="keyword">double</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (a-b) &gt; eps;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//小于</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">less</span><span class="params">(<span class="keyword">double</span> a,<span class="keyword">double</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (a-b) &lt; (-eps);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//大于等于</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">more_equal</span><span class="params">(<span class="keyword">double</span> a,<span class="keyword">double</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (a-b) &gt; (-eps);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//小于等于</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">less_equal</span><span class="params">(<span class="keyword">double</span> a,<span class="keyword">double</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (a-b) &lt; eps;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="获取数组的长度"><a href="#获取数组的长度" class="headerlink" title="获取数组的长度"></a>获取数组的长度</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> get_length(array) (sizeof(array) / sizeof(array[0]))</span></span><br></pre></td></tr></table></figure><h1 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h1><blockquote><p>注:排序算法，默认按升序排</p><h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/bubbleSort-1630041514436.gif" alt="冒泡排序"></p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//冒泡排序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bubble_sort</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt; &amp;array)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> length = array.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = length;i &gt;= <span class="number">0</span>;--i)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; i; ++j) &#123;</span><br><span class="line">            <span class="keyword">if</span> (array[j<span class="number">-1</span>] &gt; array[j])&#123;</span><br><span class="line">                <span class="built_in">swap</span>(array[j<span class="number">-1</span>],array[j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="简单选择排序"><a href="#简单选择排序" class="headerlink" title="简单选择排序"></a>简单选择排序</h2><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/selectionSort-1630041521071.gif" alt="选择排序"><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//选择排序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">select_sort</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt; &amp;array)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> length = array.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; length - <span class="number">1</span>;++i)&#123;</span><br><span class="line">        <span class="keyword">int</span> min = i;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i+<span class="number">1</span>; j &lt; i; ++j) &#123;</span><br><span class="line">            <span class="keyword">if</span> (array[i] &gt; array[j])</span><br><span class="line">            &#123;</span><br><span class="line">                min = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">swap</span>(array[i],array[min]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h2><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/8082826-efd1067c85cd0a95.gif" alt="img"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//插入排序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert_sort</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt; &amp;array)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> length = array.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; length;++i)&#123;</span><br><span class="line">        <span class="keyword">int</span> current = array[i];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = i<span class="number">-1</span>;j &gt;= <span class="number">0</span>;--j)&#123;</span><br><span class="line">            <span class="keyword">if</span>(array[j] &gt; current)&#123;</span><br><span class="line">                array[j+<span class="number">1</span>] = array[j];</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                array[j+<span class="number">1</span>] = current;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//归并排序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt; &amp;arr,<span class="keyword">int</span> left,<span class="keyword">int</span> mid,<span class="keyword">int</span> right)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = left,j = mid+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">temp</span><span class="params">(right-left+<span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">while</span> ((i &lt;= mid) &amp;&amp; (j &lt;= right))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(arr[i] &lt;= arr[j])&#123;</span><br><span class="line">            temp[k++] = arr[i++];</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            temp[k++] = arr[j++];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(j &lt;= right)&#123;</span><br><span class="line">        temp[k++] = arr[j++];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(i &lt;= mid)&#123;</span><br><span class="line">        temp[k++] = arr[i++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(k &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        arr[--j] = temp[--k];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge_sort</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt; &amp;arr,<span class="keyword">int</span> left,<span class="keyword">int</span> right)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(left &lt; right)&#123;</span><br><span class="line">        <span class="keyword">int</span> mid = left + (right-left)/<span class="number">2</span>;</span><br><span class="line">        <span class="built_in">merge_sort</span>(arr,left,mid);</span><br><span class="line">        <span class="built_in">merge_sort</span>(arr,mid+<span class="number">1</span>,right);</span><br><span class="line">        <span class="built_in">merge</span>(arr,left,mid,right);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h2><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/8082826-baea8ca0324958f9.gif" alt="img"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">partition</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt; &amp;arr,<span class="keyword">int</span> left,<span class="keyword">int</span> right)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = left,j= right + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> temp = arr[i];</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">        <span class="keyword">while</span>(arr[++i] &lt; temp &amp;&amp; i &lt; right);</span><br><span class="line">        <span class="keyword">while</span>(temp &lt; arr[--j]);</span><br><span class="line">        <span class="keyword">if</span>(i &gt;= j)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">swap</span>(arr[i],arr[j]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    arr[left] = arr[j];</span><br><span class="line">    arr[j] = temp;</span><br><span class="line">    <span class="keyword">return</span> j;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span>  <span class="title">quick_sort</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt; &amp;arr,<span class="keyword">int</span> left,<span class="keyword">int</span> right)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(left &lt; right)&#123;</span><br><span class="line">        <span class="keyword">int</span> base = <span class="built_in">partition</span>(arr,left,right);</span><br><span class="line">        <span class="built_in">quick_sort</span>(arr,left,base<span class="number">-1</span>);</span><br><span class="line">        <span class="built_in">quick_sort</span>(arr,base+<span class="number">1</span>,right); </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="堆排序"><a href="#堆排序" class="headerlink" title="堆排序"></a>堆排序</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">graph TD</span><br><span class="line">1--&gt;2</span><br><span class="line">1--&gt;3</span><br><span class="line">2--&gt;4</span><br><span class="line">2--&gt;5</span><br><span class="line">3--&gt;6</span><br><span class="line">3--&gt;7</span><br><span class="line">4--&gt;8</span><br><span class="line">4--&gt;9</span><br><span class="line">5--&gt;10</span><br><span class="line">5--&gt;11</span><br><span class="line">6--&gt;12</span><br><span class="line">6--&gt;13</span><br><span class="line">7--&gt;14</span><br><span class="line">7--&gt;15</span><br></pre></td></tr></table></figure><h2 id="桶排序"><a href="#桶排序" class="headerlink" title="桶排序"></a>桶排序</h2><h2 id="基数排序"><a href="#基数排序" class="headerlink" title="基数排序"></a>基数排序</h2><h2 id="计数排序"><a href="#计数排序" class="headerlink" title="计数排序"></a>计数排序</h2><h1 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h1><h1 id="贪心"><a href="#贪心" class="headerlink" title="贪心"></a>贪心</h1><h1 id="二分法"><a href="#二分法" class="headerlink" title="二分法"></a>二分法</h1><h2 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查找x在有序数组arr中的索引，若不存在返回-1</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">binary_search</span><span class="params">(vector&lt;<span class="keyword">int</span>&gt; arr,<span class="keyword">int</span> x,<span class="keyword">int</span> length)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> left = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> right = length<span class="number">-1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(left &lt;= right)&#123;</span><br><span class="line">        <span class="keyword">int</span> mid = (left + right)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(arr[mid] &lt; x)&#123;</span><br><span class="line">            left = mid + <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(arr[mid] &gt; x)&#123;</span><br><span class="line">            right = mid - <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> mid;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二分法求近似值"><a href="#二分法求近似值" class="headerlink" title="二分法求近似值"></a>二分法求近似值</h2><p>$f(x) = x^3+x^2-4$， 求$f(x)=0$的近似解</p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20210827200211194.png" alt="image-20210827200211194"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">f</span><span class="params">(<span class="keyword">double</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x*x*x + x*x - <span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">solve</span><span class="params">(<span class="keyword">double</span> left,<span class="keyword">double</span> right)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">double</span> mid = left+(right-left)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">equal</span>(<span class="built_in">f</span>(mid),<span class="number">0.0</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> mid;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">more</span>(<span class="built_in">f</span>(mid),<span class="number">0.0</span>))&#123;</span><br><span class="line">            right = mid;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            left = mid;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="快速幂"><a href="#快速幂" class="headerlink" title="快速幂"></a>快速幂</h1><h2 id="整数快速幂"><a href="#整数快速幂" class="headerlink" title="整数快速幂"></a>整数快速幂</h2><p>对于任意的数$x$，都可以通过位运算将它化为多个2的幂的和的形式。<br>例如:</p><script type="math/tex; mode=display">    100_{10} = 1100100_{2} = 2^2+2^5+2^6 \\    753_{10} = 1011110001_2 = 2^9+2^7+2^6+2^5+2^4+2^0</script><p>显然对于$2^n$，我们可以通过移位运算快速求得</p><script type="math/tex; mode=display">2^n = 1<<n</script><p>当指数很大时，例如:$x^{753}$,再计算机中要表示成$753$个$x$相乘的形式,要进行752次乘法运算:</p><script type="math/tex; mode=display"> \begin{array}{c}      x^{753}=\underbrace{x  \cdot  x \cdots x \cdot x}_{753}\end{array}</script><p>因为每次$x^n$计算的结果可以迭代成为下一次的结果$x^{2n}$，只需要做9次乘法运算</p><script type="math/tex; mode=display">\begin{align}    x^1 &= x \\    x^2 &= (x^1）^2  \\    x^4 &= (x^{2})^2 \\    x^{8}  &= (x^4)^2 \\    x^{16} &=(x^{8})^2    \\    x^{32} &= (x^{16})^2  \\    x^{64} &=(x^{32})^2    \\    x^{128} &=(x^{64})^2    \\    x^{256} &=(x^{128})^2    \\    x^{512} &=(x^{256})^2\end{align}</script><p>又因为$x^{735}$可以表示为:</p><script type="math/tex; mode=display">x^{735} = x^{2^9+2^7+2^6+2^5+2^4+2^0}=x^{512}+x^{128}+x^{64}+x^{32}+x^{16}+x^1</script><p>则只需要做5次加法运算。</p><p>可以通过位运算求得x在第0，4，5，6，7，9次位运算时做加法运算，因此需要9次位运算。</p><script type="math/tex; mode=display">  753_{10} = 1011110001_2 = 2^9+2^7+2^6+2^5+2^4+2^0\\</script><p>总共需要9次乘法运算，9次位运算，5次加法运算</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//快速幂代码是实现:</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">quick_power</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> N)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> base = x;</span><br><span class="line">    <span class="keyword">int</span> result = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(N)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(N&amp;<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            result *= base;</span><br><span class="line">        &#125;</span><br><span class="line">        base *= base;</span><br><span class="line">        N = N&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h1><p>定义 $Matrix$ 为 $row \times col$ 的矩阵.<br>矩阵乘法:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Matrix <span class="title">mul</span><span class="params">(Matrix A,Matrix B)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N = A.row;</span><br><span class="line">    <span class="keyword">int</span> L = A.col;</span><br><span class="line">    <span class="keyword">int</span> M = B.col;</span><br><span class="line">    Matrix result = <span class="keyword">new</span> <span class="built_in">Matrix</span>(N,M);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; N;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; L;j++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>;k &lt; M;k++)</span><br><span class="line">            result[i][j] += A[i][k] * B[k][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="矩阵快速幂"><a href="#矩阵快速幂" class="headerlink" title="矩阵快速幂"></a>矩阵快速幂</h1><p>定义 $SquareMatrix$ 为 $n \times n$ 的方阵<br>对于一个方阵 A ,它的n次幂为：</p><script type="math/tex; mode=display">A^n=\prod_{i=1}^n{A}</script><p>用递归代码:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">SquareMatrix <span class="title">matrixPower</span><span class="params">(SquareMatrix A,<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(n == <span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> A;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">mul</span>(<span class="built_in">matrix_power</span>(A,N<span class="number">-1</span>),A);     </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>非递归代码:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">SquareMatrix <span class="title">matrixPower</span><span class="params">(SquareMatrix A,<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    Square_Matrix result = <span class="keyword">new</span> <span class="built_in">Square_Matrix</span>(A);</span><br><span class="line">    <span class="keyword">int</span> N = A.row;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; N;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; N;j++)&#123;</span><br><span class="line">            result[i][j] = A[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        result = <span class="built_in">mul</span>(result,A);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对于$A^n$，需要做n-1次乘法运算。由整数快速幂的计算方法，你可能已经想到了，方阵也可以简化运算。没错，这就是矩阵快速幂。</p><p>如$A^{19}$次方:</p><script type="math/tex; mode=display">A^{19} = A^{16} + A^2 + A^1</script><p>同样后面的运算结果可以由前面的运算结果迭代而来:</p><script type="math/tex; mode=display">A^1</script><script type="math/tex; mode=display">A^2 = A^1 * A^1</script><script type="math/tex; mode=display">A^4 = A^2 * A^2</script><script type="math/tex; mode=display">A^8 = A^4 * A^4</script><script type="math/tex; mode=display">A^{16}=A^8*A^8</script><p>运算过程和整数快速幂相同，而两个矩阵的乘法运算上面已经有代码了</p><p>下面是矩阵快速幂代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">SquareMatrix <span class="title">matrixQuickPower</span><span class="params">(SquareMatrix A,<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    SquareMatrix base = A;</span><br><span class="line">    SquareMatrix result;</span><br><span class="line">    <span class="comment">//对B进行初始化，初始化为单位阵</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; N;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; N;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i == j)&#123;</span><br><span class="line">                result[i][j] = <span class="number">1</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                result[i][j] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            result = <span class="built_in">mul</span>(result,base);</span><br><span class="line">        &#125;</span><br><span class="line">        base = <span class="built_in">mul</span>(base,base);</span><br><span class="line">        n = n&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>矩阵快速幂的运用:</p><p>对于数列1,1,2,3,5……求其第$10^8$项。</p><p>记$f(0)=0,f(1) = 1$,对于该数列，易得：</p><script type="math/tex; mode=display">\begin{align}f(n)=1*f(n-1)+1*f(n-2)\\f(n-1) = 1*f(n-1) + 0*f(n-2) \\f(n- 1)=1*f(n-2)+1*f(n-3)\\f(n-2) = 1*f(n-2) + 0*f(n-3) \\\end{align}</script><script type="math/tex; mode=display">\begin{equation}    \left[    \begin{array}{c c}    f(n) & f(n-1) \\    f(n - 1) & f(n-2)    \end{array} \right]    =     \left[    \begin{array}{c c}    f(n - 1) & f(n-2)\\    f(n - 2) & f(n - 3)    \end{array}    \right]    \left[    \begin{array}{c c}    1 & 1\\    1& 0    \end{array}    \right]\end{equation}</script><p>根据规律建立递推方程:</p><script type="math/tex; mode=display">\begin{align}    \left[    \begin{array}{c c}    f(n) & f(n-1) \\    f(n - 1) & f(n-2)    \end{array} \right]    &=     \left[    \begin{array}{c c}    f(2) & f(1)\\    f(1) & f(0)    \end{array}    \right]    \cdot    \underbrace{    \left[    \begin{array}{c c}    1 & 1\\    1& 0    \end{array}    \right]    \cdots    \left[    \begin{array}{c c}    1 & 1\\    1& 0    \end{array}    \right]    }_{n-2} \\    &=    \left[    \begin{array}{c c}    1 & 1\\    1 & 0    \end{array}    \right] \cdot    \left[    \begin{array}{c c}    1 & 1\\    1 & 0    \end{array}    \right]^{n-2} \\    &=    \left[    \begin{array}{c c}    1 & 1\\    1 & 0    \end{array}    \right]^{n-1}\end{align}</script><p>此时，使用矩阵快速幂可快速求得$\left[\begin{array}{c c}1 &amp; 1\ 1 &amp; 0 \end{array}\right]^{n-1}$的第一行第一列的值，此项就是$f(n)$的值。</p><p><a href="https://www.cnblogs.com/cmmdc/p/6936196.html">参考链接</a></p><h1 id="双指针"><a href="#双指针" class="headerlink" title="双指针"></a>双指针</h1><p>对于求解递增序列arr中，满足 $arr[i] + arr[j] = M$ 的问题可以采用双指针技巧缩短时间复杂度。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(i &lt; j)&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[i] + a[j] == M)&#123;</span><br><span class="line">        cout &lt;&lt; i &lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;j&lt;&lt;endl;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(a[i] + a[j] &lt; M)&#123;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        j--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h1><h2 id="BFS"><a href="#BFS" class="headerlink" title="BFS"></a>BFS</h2><h2 id="DFS"><a href="#DFS" class="headerlink" title="DFS"></a>DFS</h2><h1 id="树"><a href="#树" class="headerlink" title="树"></a>树</h1><h1 id="图"><a href="#图" class="headerlink" title="图"></a>图</h1><h1 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h1><h1 id="数论"><a href="#数论" class="headerlink" title="数论"></a>数论</h1><h2 id="公约数与公倍数"><a href="#公约数与公倍数" class="headerlink" title="公约数与公倍数"></a>公约数与公倍数</h2><p>最大公约数：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> !b?a:<span class="built_in">gcd</span>(b,a%b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最小公倍数：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lcm</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (a/<span class="built_in">gcd</span>(a,b))*b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="分数加减"><a href="#分数加减" class="headerlink" title="分数加减"></a>分数加减</h2><p>约定:</p><ul><li>分母始终为正</li><li>分母不为0</li><li>若分子为0，将分母改为1</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fraction</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> up;<span class="comment">//分子</span></span><br><span class="line">    <span class="keyword">int</span> down;<span class="comment">//分母</span></span><br><span class="line">    <span class="built_in">Fraction</span>()&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">Fraction</span>(<span class="keyword">int</span> up,<span class="keyword">int</span> down)&#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;up = up;</span><br><span class="line">        <span class="keyword">this</span>-&gt;down = down;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>-&gt;down &lt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">this</span>-&gt;up = -<span class="keyword">this</span>-&gt;up;</span><br><span class="line">            <span class="keyword">this</span>-&gt;down = -<span class="keyword">this</span>-&gt;down;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>-&gt;up == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">this</span>-&gt;down = <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> d = <span class="built_in">gcd</span>(<span class="built_in">abs</span>(<span class="keyword">this</span>-&gt;up),<span class="built_in">abs</span>(<span class="keyword">this</span>-&gt;down));</span><br><span class="line">            <span class="keyword">this</span>-&gt;up /= d;</span><br><span class="line">            <span class="keyword">this</span>-&gt;down /= d;</span><br><span class="line">        &#125;</span><br><span class="line">        value = (<span class="keyword">double</span>)up / down;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> !b?a:<span class="built_in">gcd</span>(b,a%b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Fraction <span class="keyword">operator</span>+(Fraction&amp; f)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Fraction</span>(<span class="keyword">this</span>-&gt;up * f.down + f.up * <span class="keyword">this</span>-&gt;down, <span class="keyword">this</span>-&gt;down * f.down);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Fraction <span class="keyword">operator</span>-(Fraction&amp; f)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Fraction</span>(<span class="keyword">this</span>-&gt;up * f.down - f.up*<span class="keyword">this</span>-&gt;down, <span class="keyword">this</span>-&gt;down * f.down);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Fraction <span class="keyword">operator</span>*(Fraction&amp; f)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Fraction</span>(<span class="keyword">this</span>-&gt;up * f.up, <span class="keyword">this</span>-&gt;down * f.down);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Fraction <span class="keyword">operator</span>/(Fraction&amp; f)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Fraction</span>(<span class="keyword">this</span>-&gt;up * f.down, <span class="keyword">this</span>-&gt;down * f.up);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>-&gt;down == <span class="number">1</span>)&#123;</span><br><span class="line">            cout &lt;&lt; <span class="keyword">this</span>-&gt;up &lt;&lt; endl;</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; up &lt;&lt;<span class="string">&quot;/&quot;</span>&lt;&lt;down &lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="高精"><a href="#高精" class="headerlink" title="高精"></a>高精</h2><h2 id="素数"><a href="#素数" class="headerlink" title="素数"></a>素数</h2><h2 id="埃拉托斯特尼筛法"><a href="#埃拉托斯特尼筛法" class="headerlink" title="埃拉托斯特尼筛法"></a>埃拉托斯特尼筛法</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//求小于n的所有素数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Eratosthenes</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> p = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; ++i) is_prime[i] = <span class="number">1</span>;</span><br><span class="line">  is_prime[<span class="number">0</span>] = is_prime[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">    <span class="keyword">if</span> (is_prime[i]) &#123;</span><br><span class="line">      prime[p++] = i;  <span class="comment">//将素数i 存入prime数组中</span></span><br><span class="line">      <span class="keyword">if</span> ((<span class="keyword">long</span> <span class="keyword">long</span>)i * i &lt;= n)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i * i; j &lt;= n; j += i)</span><br><span class="line">          <span class="comment">// j = 2 * i已经被2的倍数筛选过了</span></span><br><span class="line">          <span class="comment">// j = 3 * i已经被3的倍数筛选过了</span></span><br><span class="line">          <span class="comment">// ...</span></span><br><span class="line">          <span class="comment">// j = (i-1) * i已经被(i-1)的倍数筛选过了</span></span><br><span class="line">          <span class="comment">//所以应该从j = i*i开始筛选</span></span><br><span class="line">          is_prime[j] = <span class="number">0</span>;  <span class="comment">// 是i的倍数的均不是素数</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="质因子分解"><a href="#质因子分解" class="headerlink" title="质因子分解"></a>质因子分解</h2><h2 id="大整数运算"><a href="#大整数运算" class="headerlink" title="大整数运算"></a>大整数运算</h2><h2 id="扩展欧几里得算法"><a href="#扩展欧几里得算法" class="headerlink" title="扩展欧几里得算法"></a>扩展欧几里得算法</h2><h2 id="排列组合"><a href="#排列组合" class="headerlink" title="排列组合"></a>排列组合</h2><h2 id="博弈论"><a href="#博弈论" class="headerlink" title="博弈论"></a>博弈论</h2><h1 id="常用模板题"><a href="#常用模板题" class="headerlink" title="常用模板题"></a>常用模板题</h1><h2 id="两日期之间间隔天数"><a href="#两日期之间间隔天数" class="headerlink" title="两日期之间间隔天数 "></a><a href="https://leetcode-cn.com/problems/number-of-days-between-two-dates/">两日期之间间隔天数 </a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">daysBetweenDates</span><span class="params">(string date1, string date2)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> year1,year2,month1,month2,day1,day2;</span><br><span class="line">    <span class="built_in">sscanf</span>(date1.<span class="built_in">c_str</span>(),<span class="string">&quot;%d-%d-%d&quot;</span>,&amp;year1,&amp;month1,&amp;day1);</span><br><span class="line">    <span class="built_in">sscanf</span>(date2.<span class="built_in">c_str</span>(),<span class="string">&quot;%d-%d-%d&quot;</span>,&amp;year2,&amp;month2,&amp;day2);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">fabs</span>(<span class="built_in">myDate</span>(year1,month1,day1)-<span class="built_in">myDate</span>(year2,month2,day2));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">daysBetweenDates</span>(<span class="string">&quot;2019-06-29&quot;</span>,<span class="string">&quot;2019-06-30&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">solution <span class="number">1</span>:</span><br><span class="line"> <span class="function"><span class="keyword">int</span> <span class="title">myDate</span><span class="params">(<span class="keyword">int</span> year, <span class="keyword">int</span> month, <span class="keyword">int</span> day)</span> </span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (month &lt; <span class="number">3</span>)&#123;</span><br><span class="line">        year--;</span><br><span class="line">        month += <span class="number">12</span>;</span><br><span class="line">    &#125;</span><br><span class="line">       </span><br><span class="line">    <span class="keyword">return</span> <span class="number">365</span> * year + year / <span class="number">4</span> - year / <span class="number">100</span> + year / <span class="number">400</span> + (<span class="number">153</span> * month - <span class="number">457</span>) / <span class="number">5</span> + day - <span class="number">306</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">solution <span class="number">2</span>:</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isLeap</span><span class="params">(<span class="keyword">int</span> year)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>((year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span>) || year % <span class="number">400</span> == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x == <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x == <span class="number">2</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x &gt;= <span class="number">3</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">13</span>*(x+<span class="number">1</span>)/<span class="number">5</span><span class="number">-7</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">myDate</span><span class="params">(<span class="keyword">int</span> year,<span class="keyword">int</span> month,<span class="keyword">int</span> day)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m = (<span class="built_in">isLeap</span>(year) &amp;&amp; month &lt;= <span class="number">2</span>)?<span class="built_in">f</span>(month)<span class="number">-1</span>:<span class="built_in">f</span>(month);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">365</span>*(year - <span class="number">1</span>) + year / <span class="number">4</span> - year / <span class="number">100</span> + year / <span class="number">400</span> + <span class="number">28</span>*(month - <span class="number">1</span>) + m +day;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">solution <span class="number">3</span>:</span><br><span class="line"><span class="keyword">int</span> f[] = &#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">16</span>,<span class="number">19</span>,<span class="number">21</span>,<span class="number">24</span>,<span class="number">26</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">myDate</span><span class="params">(<span class="keyword">int</span> year,<span class="keyword">int</span> month,<span class="keyword">int</span> day)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m = (<span class="built_in">isLeap</span>(year) &amp;&amp; month &lt;= <span class="number">2</span>)?f[month]<span class="number">-1</span>:f[month];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">365</span>*(year - <span class="number">1</span>) + year / <span class="number">4</span> - year / <span class="number">100</span> + year / <span class="number">400</span> + <span class="number">28</span>*(month - <span class="number">1</span>) + m +day;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">solution <span class="number">4</span>:</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">myDate</span><span class="params">(<span class="keyword">int</span> year,<span class="keyword">int</span> month,<span class="keyword">int</span> day)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(month &lt; <span class="number">3</span>)&#123;</span><br><span class="line">        year--;</span><br><span class="line">        month += <span class="number">12</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">365</span>*(year - <span class="number">1</span>) + year / <span class="number">4</span> - year / <span class="number">100</span> + year / <span class="number">400</span> + <span class="number">28</span>*(month - <span class="number">1</span>) + <span class="number">13</span>*(month+<span class="number">1</span>)/<span class="number">5</span><span class="number">-7</span> +day;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="拼数"><a href="#拼数" class="headerlink" title="拼数"></a><a href="https://www.luogu.com.cn/problem/P1012">拼数</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">string result[<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">comp</span><span class="params">(string a,string b)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a+b&gt;b+a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)&#123;</span><br><span class="line">cin&gt;&gt;result[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(result,result+n,comp);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt;n;i++)&#123;</span><br><span class="line">cout&lt;&lt;result[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h2><blockquote><p>除基取余法</p></blockquote><p>将N进制数<code>x</code>转换为十进制数<code>y</code>：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//x为整数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">convertNto10</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> N)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> y = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> base = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(x != <span class="number">0</span>)&#123;</span><br><span class="line">        y += (x % <span class="number">10</span>)*base;</span><br><span class="line">        x = x / <span class="number">10</span>;</span><br><span class="line">        base = base * N;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//x为字符串</span></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="title">convertNto10</span><span class="params">(string x,<span class="keyword">int</span> N)</span></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> base = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> y = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = x.<span class="built_in">length</span>() - <span class="number">1</span>;i &gt;= <span class="number">0</span>;i--)&#123;</span><br><span class="line">        y += (x[i] &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; x[i] &lt;= <span class="string">&#x27;Z&#x27;</span>)?((x[i]-<span class="string">&#x27;A&#x27;</span> + <span class="number">10</span>)*base):((x[i] - <span class="string">&#x27;0&#x27;</span>)*base);</span><br><span class="line">        base *= N;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将十进制<code>x</code>转换为N进制数<code>y</code> (所支持转换的十进制数   $0 \leq x \leq 2^{64} - 1$):</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">string <span class="title">convert10toN</span><span class="params">(<span class="keyword">unsigned</span>  <span class="keyword">long</span> <span class="keyword">long</span> x,<span class="keyword">int</span> N)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> length = <span class="number">19</span>;</span><br><span class="line">    <span class="keyword">char</span> arr[length];</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x != <span class="number">0</span>)&#123;</span><br><span class="line">        arr[i++] = ((x % N)&gt;<span class="number">9</span>)? ((x % N) - <span class="number">10</span> + <span class="string">&#x27;A&#x27;</span>):((x % N) + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">        x /= N;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">string <span class="title">y</span><span class="params">(arr)</span></span>;</span><br><span class="line">    <span class="built_in">reverse</span>(y.<span class="built_in">begin</span>(),y.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>任意进制N，P之间的转换$(1 \leq N,P \leq 36)$:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">string <span class="title">convertNtoP</span><span class="params">(string num,<span class="keyword">int</span> N,<span class="keyword">int</span> P)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">convert10toN</span>(<span class="built_in">convertNto10</span>(num,N),P);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="回文串判断"><a href="#回文串判断" class="headerlink" title="回文串判断"></a>回文串判断</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(string s)</span></span>&#123;</span><br><span class="line">   string t = s;</span><br><span class="line">   <span class="built_in">reverse</span>(t.<span class="built_in">begin</span>(),t.<span class="built_in">end</span>());</span><br><span class="line">   <span class="keyword">return</span> t == s;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(string s)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> length = s.<span class="built_in">length</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; length/<span class="number">2</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i] != s[length-i<span class="number">-1</span>])&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文介绍了算法中常见的知识点和技巧，代码使用伪码或c++实现&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="算法" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/%E7%AE%97%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>MySQL</title>
    <link href="https://dreamcatcherdeng.gitee.io/personal-blog/2021/11/03/MySQL/"/>
    <id>https://dreamcatcherdeng.gitee.io/personal-blog/2021/11/03/MySQL/</id>
    <published>2021-11-02T16:29:12.544Z</published>
    <updated>2022-05-02T12:35:45.384Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文介绍了MySQL的基本知识点，收录了SQL学习和练习网站，收录了学习MySQL过程中常见的问题及解决办法</p></blockquote><span id="more"></span><h1 id="MySQL学习教程"><a href="#MySQL学习教程" class="headerlink" title="MySQL学习教程"></a>MySQL学习教程</h1><ul><li><p><a href="https://www.runoob.com/mysql/mysql-tutorial.html">菜鸟教程</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1Vy4y1z7EX?from=search&amp;seid=2131736679206311905&amp;spm_id_from=333.337.0.0">老杜带你学_mysql入门基础</a></p></li><li><p><a href="https://dev.mysql.com/doc/refman/8.0/en/">MySQL官方参考手册</a></p></li><li><p><a href="https://www.nowcoder.com/activity/oj?tab=1">牛客在线练习</a></p></li><li><p><a href="https://leetcode-cn.com/problemset/database/">leetcode在线练习</a></p></li></ul><h1 id="MySQL常见问题"><a href="#MySQL常见问题" class="headerlink" title="MySQL常见问题"></a>MySQL常见问题</h1><h2 id="乱码问题"><a href="#乱码问题" class="headerlink" title="乱码问题"></a>乱码问题</h2><ul><li>查看字符编码<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span><span class="keyword">show</span> variables <span class="keyword">like</span> &quot;character%&quot;;</span><br></pre></td></tr></table></figure></li><li>设置字符编码<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msyql&gt;set character_set_client  = utf8;</span><br><span class="line">msyql&gt;set character_set_connection  = utf8;</span><br><span class="line">msyql&gt;set character_set_database  = utf8;</span><br><span class="line">msyql&gt;set character_set_results  = utf8;</span><br><span class="line">msyql&gt;set character_set_server  = utf8;</span><br></pre></td></tr></table></figure><blockquote><p>注：这种方式设置的字符编码是临时的，MySQL重启后字符编码会恢复为默认值。</p></blockquote></li></ul><p>如果设置了字符编码存入数据库时还是乱码，则使用<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span><span class="keyword">set</span> names(&quot;UTF8&quot;)</span><br></pre></td></tr></table></figure><br>该语句等同于以下三条语句:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msyql<span class="operator">&gt;</span><span class="keyword">set</span> character_set_client  <span class="operator">=</span> utf8;</span><br><span class="line">msyql<span class="operator">&gt;</span><span class="keyword">set</span> character_set_results  <span class="operator">=</span> utf8;</span><br><span class="line">msyql<span class="operator">&gt;</span><span class="keyword">set</span> character_set_connection  <span class="operator">=</span> utf8;</span><br></pre></td></tr></table></figure></p><h2 id="连接问题"><a href="#连接问题" class="headerlink" title="连接问题"></a>连接问题</h2><ul><li>连接数据库</li></ul><p>登录指定服务器<code>192.168.*.*</code>:</p><p>mysql -h 服务器ip -u 用户名  -p密码</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cmd</span>&gt;mysql -h <span class="number">192</span>.<span class="number">168</span>.*.* -uroot -p</span><br><span class="line"><span class="function">password:******</span></span><br></pre></td></tr></table></figure><p>登录默认服务器localhost:</p><p>mysql -u用户名  -p密码:</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cmd</span>&gt;mysql -uroot -p</span><br><span class="line"><span class="function">password:******</span></span><br></pre></td></tr></table></figure><blockquote><p><code>-p</code>后面填写密码，但此密码填写时为明文，mysql不建议这么做，所以一般<code>-p</code>后面参数为空，提示<code>password:</code>后输入密码</p><ul><li>退出数据库<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span>exit</span><br><span class="line">mysql<span class="operator">&gt;</span>quit</span><br></pre></td></tr></table></figure><h2 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h2></li></ul></blockquote>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span>update mysql.user <span class="keyword">set</span> authertication_string<span class="operator">=</span>password(&quot;password&quot;) <span class="keyword">where</span> <span class="keyword">user</span><span class="operator">=</span>&quot;username&quot; <span class="keyword">and</span> Host<span class="operator">=</span>&quot;hostip&quot;;</span><br></pre></td></tr></table></figure><h2 id="常量与系统变量"><a href="#常量与系统变量" class="headerlink" title="常量与系统变量"></a>常量与系统变量</h2><ul><li><strong>常量</strong><br>常量包含字符串、数字、日期、bool值、null值等</li><li><strong>系统变量</strong><br>系统变量可分为全局变量和会话变量，全局变量作用于MySQL服务器开启到结束用<code>@@变量名</code>表示，会话变量作用于会话连接开始到结束用<code>@变量名</code>表示</li><li><p>显示系统变量<br>显示以<code>a</code>开头的系统变量</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span><span class="keyword">show</span> variables <span class="keyword">like</span> &quot;a%&quot;</span><br></pre></td></tr></table></figure><h1 id="MySQL语法规范"><a href="#MySQL语法规范" class="headerlink" title="MySQL语法规范"></a>MySQL语法规范</h1></li><li><p>不区分大小写，建议关键字大写，表名、列名小写</p></li><li><p>每条命令最好用分号结尾</p></li><li><p>每条命令根据需要可缩进换行</p></li><li><p>注释</p><p>​    单行注释： <code>#注释文字</code></p><p>​    单行注释：<code>-- 注释文字（有空格）</code></p><p>​    多行注释：<code>/*注释文字*/</code></p></li></ul><h1 id="MySQL常用命令符"><a href="#MySQL常用命令符" class="headerlink" title="MySQL常用命令符"></a>MySQL常用命令符</h1><ol><li><p>查看当前数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span><span class="keyword">show</span> databases;</span><br></pre></td></tr></table></figure></li><li><p>打开指定数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span>use databasename;</span><br></pre></td></tr></table></figure></li><li><p>查看当前所有表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span><span class="keyword">show</span> tables;</span><br></pre></td></tr></table></figure></li><li><p>查看其他库的所有表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span><span class="keyword">show</span> tables <span class="keyword">from</span> datebasename;</span><br></pre></td></tr></table></figure><blockquote><p>注：当表名或库名为非正常字段时使用反引号将其包裹,比如当表名为某个关键字时，使用反引号将其包裹</p></blockquote></li><li><p>创建表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line">    列名 列类型，</span><br><span class="line">列名 列类型，</span><br><span class="line">...</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li></ol><ol><li><p>查看服务器版本</p><p>方式一:登录到mysql服务端</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msyql<span class="operator">&gt;</span><span class="keyword">select</span> version();</span><br></pre></td></tr></table></figure><p>方式二:不登录mysql服务端</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cmd</span>&gt;mysql --version</span><br><span class="line"><span class="built_in">cmd</span>&gt;msyql -V</span><br></pre></td></tr></table></figure><blockquote><p>注：这里的V是大写V</p></blockquote></li><li><p>更改定界符</p><p>MySQL默认以输入定界符 <code>;</code>后，将<code>;</code>以前的作为命令执行单元换成，MySQL提供了更改命令执行符的命令<code>delimiter</code>。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span>delimiter <span class="operator">/</span><span class="operator">/</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> version()<span class="operator">/</span><span class="operator">/</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+</span></span><br><span class="line"><span class="operator">|</span> version() <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">8.0</span><span class="number">.26</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li></ol><h1 id="MySQL数据类型"><a href="#MySQL数据类型" class="headerlink" title="MySQL数据类型"></a>MySQL数据类型</h1><ol><li>字符串型</li></ol><ul><li>CHAR</li><li>VARCHAR</li><li>TEXT</li></ul><ol><li>数字整型</li></ol><ul><li>TINYINT</li><li>SMALLINT</li><li>MEDIUMINT</li><li>INT</li><li>BIGINT</li></ul><ol><li>日期和时间型</li></ol><ul><li>DATE</li><li>TIME</li><li>DATETIME</li><li>YEAR</li><li>TIMESTAMP</li></ul><ol><li>数字二进制型</li></ol><ul><li>TINYBLOB</li><li>TINYTEXT</li><li>BLOB</li><li>TEXT</li><li>MEDIUMBLOB</li><li>MEDIUMTEXT</li><li>LONGBLOB</li><li>LONGTEXT<br><details><summary>数据类型取值范围表</summary></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">类型</th><th style="text-align:center">字节大小</th><th style="text-align:center">有符号范围</th><th style="text-align:center">无符号范围</th></tr></thead><tbody><tr><td style="text-align:center">SMALLINT</td><td style="text-align:center">2 bytes</td><td style="text-align:center">(-32 768，32 767)</td><td style="text-align:center">(0，65 535)</td></tr><tr><td style="text-align:center">MEDIUMINT</td><td style="text-align:center">3 bytes</td><td style="text-align:center">(-8 388 608，8 388 607)</td><td style="text-align:center">(0，16 777 215)</td></tr><tr><td style="text-align:center">INT或INTEGER</td><td style="text-align:center">4 bytes</td><td style="text-align:center">(-2 147 483 648，2 147 483 647)</td><td style="text-align:center">(0，4 294 967 295)</td></tr><tr><td style="text-align:center">BIGINT</td><td style="text-align:center">8 bytes</td><td style="text-align:center">(-9,223,372,036,854,775,808，9 223 372 036 854 775 807)</td><td style="text-align:center">(0，18 446 744 073 709 551 615)</td></tr><tr><td style="text-align:center">FLOAT</td><td style="text-align:center">4 bytes</td><td style="text-align:center">(-3.402 823 466 E+38，-1.175 494 351 E-38)，0，(1.175 494 351 E-38，3.402 823 466 351 E+38)</td><td style="text-align:center">0，(1.175 494 351 E-38，3.402 823 466 E+38)</td></tr><tr><td style="text-align:center">DOUBLE</td><td style="text-align:center">8 bytes</td><td style="text-align:center">(-1.797 693 134 862 315 7 E+308，-2.225 073 858 507 201 4 E-308)，0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td><td style="text-align:center">0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td></tr><tr><td style="text-align:center">DATE</td><td style="text-align:center">3</td><td style="text-align:center">1000-01-01/9999-12-31</td><td style="text-align:center">YYYY-MM-DD</td></tr><tr><td style="text-align:center">TIME</td><td style="text-align:center">3</td><td style="text-align:center">‘-838:59:59’/‘838:59:59’</td><td style="text-align:center">HH:MM:SS</td></tr><tr><td style="text-align:center">YEAR</td><td style="text-align:center">1</td><td style="text-align:center">1901/2155</td><td style="text-align:center">YYYY</td></tr><tr><td style="text-align:center">DATETIME</td><td style="text-align:center">8</td><td style="text-align:center">1000-01-01 00:00:00/9999-12-31 23:59:59</td><td style="text-align:center">YYYY-MM-DD HH:MM:SS</td></tr><tr><td style="text-align:center">TIMESTAMP</td><td style="text-align:center">4</td><td style="text-align:center">1970-01-01 00:00:00/2038结束时间是第 <strong>2147483647</strong> 秒，北京时间 <strong>2038-1-19 11:14:07</strong>，格林尼治时间 2038年1月19日 凌晨 03:14:07</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">CHAR</td><td style="text-align:center">0-255 bytes</td><td style="text-align:center"></td><td style="text-align:center">定长字符串</td></tr><tr><td style="text-align:center">VARCHAR</td><td style="text-align:center">0-65535 bytes</td><td style="text-align:center"></td><td style="text-align:center">变长字符串</td></tr><tr><td style="text-align:center">TINYBLOB</td><td style="text-align:center">0-255 bytes</td><td style="text-align:center"></td><td style="text-align:center">不超过 255 个字符的二进制字符串</td></tr><tr><td style="text-align:center">TINYTEXT</td><td style="text-align:center">0-255 bytes</td><td style="text-align:center"></td><td style="text-align:center">短文本字符串</td></tr><tr><td style="text-align:center">BLOB</td><td style="text-align:center">0-65 535 bytes</td><td style="text-align:center"></td><td style="text-align:center">二进制形式的长文本数据</td></tr><tr><td style="text-align:center">TEXT</td><td style="text-align:center">0-65 535 bytes</td><td style="text-align:center"></td><td style="text-align:center">长文本数据</td></tr><tr><td style="text-align:center">MEDIUMBLOB</td><td style="text-align:center">0-16 777 215 bytes</td><td style="text-align:center"></td><td style="text-align:center">二进制形式的中等长度文本数据</td></tr><tr><td style="text-align:center">MEDIUMTEXT</td><td style="text-align:center">0-16 777 215 bytes</td><td style="text-align:center"></td><td style="text-align:center">中等长度文本数据</td></tr></tbody></table></div><p>&lt;/details&gt;</p><h1 id="Navicat快捷键"><a href="#Navicat快捷键" class="headerlink" title="Navicat快捷键"></a>Navicat快捷键</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">打开查询窗口，新建查询窗口　　  Ctrl + Q</span><br><span class="line">打开一个mysql命令行窗口　　      F6</span><br><span class="line">运行查询窗口的SQL语句　　       Ctrl + R</span><br><span class="line">只运行选中的SQL语句                Ctrl + Shift + R</span><br><span class="line">运行光标右方或者已选择的语句　　F7</span><br><span class="line">注释SQL语句                             Ctrl +　/ 或者添加 #</span><br><span class="line">取消注释SQL语句                      Ctrl + Shift + /</span><br><span class="line">在查询窗口，打开一个新的查询窗口        Ctrl + N</span><br><span class="line">关闭当前窗口        Ctrl + W</span><br><span class="line">在表内容显示页面，快速切换到表设计页面　　Ctrl + D</span><br><span class="line">在表设计页面，快速切换到表内容显示页面　　Ctrl + O</span><br><span class="line">删除当前行　　   Ctrl + L　　</span><br><span class="line">复制本行　　      Ctrl + D</span><br><span class="line">查看历史日志　　Ctrl + H</span><br><span class="line">跳到整篇语句开头　　　Ctrl + Home</span><br><span class="line">跳到整篇语句结尾　　    Ctrl + End</span><br><span class="line">下一个Tab　　　           Ctrl + Tab</span><br><span class="line">打开一个查询窗口，并打开一个SQL文件覆盖当前窗口　　Ctrl + Q,Ctrl + O</span><br><span class="line">本行与上一行切换　　                                          Ctrl + T</span><br><span class="line">新建收藏夹（可把查询语句保存在收藏夹中）　　Ctrl + Shift + 1</span><br><span class="line">打开帮助文件　　F1　　</span><br></pre></td></tr></table></figure><h1 id="Mysql关键字"><a href="#Mysql关键字" class="headerlink" title="Mysql关键字"></a>Mysql关键字</h1><details><summary>MySQL关键字预览表</summary>|       key       |                            function                            || :-------------: | :------------------------------------------------------------: ||      where      |                            指定条件                            ||       as        |                       起别名 （可省略）                        ||      from       |                          指定数据来源                          ||    distinct     |                   去重,查询结构中重复的结果                    ||      like       |                            模糊查询                            ||     between     |                          指定查询区间                          ||       in        |                        指定查询结果列表                        || join ... on ... |                            连接查询                            ||      inner      |               内连接，取出两表共有的部分作为主表               ||      left       | 左连接，取出左表作为主表，右表与左表共有的部分作为从表加入主表 ||      right      | 右连接，取出右表作为主表，左表与右表共有的部分作为从表加入主表 ||    order by     |                              排序                              ||      limit      |                    分页，所有语句的最后一个                    |</details><h1 id="数据库语言"><a href="#数据库语言" class="headerlink" title="数据库语言"></a>数据库语言</h1><ul><li>DQL语言（Data Query Language）</li><li>DML语言（Data Manipulation Language）</li><li>DDL语言（Data Define Language)</li><li>TCL语言（Transaction Control Language)</li></ul><h2 id="DQL"><a href="#DQL" class="headerlink" title="DQL"></a>DQL</h2><p>数据查询语言专用于数据查询,查询列表可以是表中的字段，常量，表达式，函数</p><h3 id="1-查看有哪些数据库"><a href="#1-查看有哪些数据库" class="headerlink" title="1. 查看有哪些数据库"></a>1. 查看有哪些数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span><span class="keyword">show</span> databases;</span><br></pre></td></tr></table></figure><h3 id="2-查询表中有哪些字段"><a href="#2-查询表中有哪些字段" class="headerlink" title="2. 查询表中有哪些字段"></a>2. 查询表中有哪些字段</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span><span class="keyword">show</span> columns <span class="keyword">from</span> tablename;</span><br></pre></td></tr></table></figure><h3 id="3-查询记录"><a href="#3-查询记录" class="headerlink" title="3. 查询记录"></a>3. 查询记录</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msyql<span class="operator">&gt;</span><span class="keyword">select</span> key0[,key1,...] <span class="keyword">from</span> tablename [<span class="keyword">where</span> <span class="string">&#x27;conditioin&#x27;</span>];</span><br></pre></td></tr></table></figure><ul><li><p>查询单个字段所对应的结果</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> key0 <span class="keyword">from</span> tablename;</span><br></pre></td></tr></table></figure></li><li><p>查询多个字段所对应的结果</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> key0,key1,... <span class="keyword">from</span> tablename;</span><br></pre></td></tr></table></figure></li><li><p>查询所有字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> tablename;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>模糊查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> key <span class="keyword">from</span> tablename <span class="keyword">where</span> key <span class="keyword">like</span> <span class="string">&#x27;pattern&#x27;</span>;</span><br><span class="line"><span class="comment">--pattern是mysql的模糊查询匹配模式</span></span><br></pre></td></tr></table></figure><ul><li><p><code>%</code>    任意多个字符</p></li><li><p><code>_</code>    一个字符</p></li><li><p><code>__</code>    两个字</p></li><li><code>[ABCK]</code>  指定A,B,C,K任意一个字符</li><li><code>[A-Z]</code>  指定A-Z任意一个字符</li><li><code>[^A]</code>  指定非A字符</li><li>…</li></ul></li><li><p>联表查询</p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20210606165607454.png" alt="image-20210606165607454"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span><span class="keyword">select</span> t1.key1,t2.key1 </span><br><span class="line"><span class="operator">-</span><span class="operator">&gt;</span><span class="keyword">from</span> tablename1 <span class="keyword">as</span> t1 </span><br><span class="line"><span class="operator">-</span><span class="operator">&gt;</span><span class="keyword">inner</span> <span class="keyword">join</span> tablename2 <span class="keyword">as</span> t2 </span><br><span class="line"><span class="operator">-</span><span class="operator">&gt;</span><span class="keyword">on</span> t1.key1 <span class="operator">=</span>t2.key1</span><br></pre></td></tr></table></figure><p>自联结</p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20210606173841115.png" alt="image-20210606173841115"></p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20210606173917792.png" alt="image-20210606173917792"></p></li></ul><ul><li><p>例题</p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20210606175602962.png" alt="image-20210606175602962"></p></li></ul><ul><li>子查询<h3 id="4-使用查询语句做运算"><a href="#4-使用查询语句做运算" class="headerlink" title="4. 使用查询语句做运算"></a>4. 使用查询语句做运算</h3></li><li>算术运算<br><details><summary>算术运算符预览表</summary></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">+</td><td style="text-align:center">加法运算</td></tr><tr><td style="text-align:center">-</td><td style="text-align:center">减法运算</td></tr><tr><td style="text-align:center">/</td><td style="text-align:center">除法运算</td></tr><tr><td style="text-align:center">*</td><td style="text-align:center">乘法运算</td></tr><tr><td style="text-align:center">%</td><td style="text-align:center">求余运算</td></tr><tr><td style="text-align:center">mod</td><td style="text-align:center">求余运算</td></tr><tr><td style="text-align:center">div</td><td style="text-align:center">除法运算</td></tr></tbody></table></div><p>&lt;/details&gt;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="number">1</span><span class="operator">+</span><span class="number">2</span><span class="operator">*</span><span class="number">3</span><span class="number">-4</span><span class="operator">/</span><span class="number">5</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span><span class="operator">+</span><span class="number">2</span><span class="operator">*</span><span class="number">3</span><span class="number">-4</span><span class="operator">/</span><span class="number">5</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">6.2000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="string">&#x27;abcdefe&#x27;</span> <span class="keyword">like</span> <span class="string">&#x27;a_&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="string">&#x27;abcdefe&#x27;</span> <span class="keyword">like</span> <span class="string">&#x27;a_&#x27;</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span>                   <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="string">&#x27;abcdefe&#x27;</span> <span class="keyword">like</span> <span class="string">&#x27;a%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="string">&#x27;abcdefe&#x27;</span> <span class="keyword">like</span> <span class="string">&#x27;a%&#x27;</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span>                   <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="string">&#x27;abcdefe&#x27;</span> regexp <span class="string">&#x27;[*c]&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="string">&#x27;abcdefe&#x27;</span> regexp <span class="string">&#x27;[*c]&#x27;</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+</span></span><br><span class="line"><span class="operator">|</span>                       <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="string">&#x27;abcdefe&#x27;</span> regexp <span class="string">&#x27;[*h]&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="string">&#x27;abcdefe&#x27;</span> regexp <span class="string">&#x27;[*h]&#x27;</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+</span></span><br><span class="line"><span class="operator">|</span>                       <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>比较运算<br><details><summary>比较运算符预览表</summary></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">运算符</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">=</td><td style="text-align:center">等于</td></tr><tr><td style="text-align:center">&lt;</td><td style="text-align:center">小于</td></tr><tr><td style="text-align:center">…</td><td style="text-align:center">…</td></tr><tr><td style="text-align:center">is null</td><td style="text-align:center">判空</td></tr><tr><td style="text-align:center">is not null</td><td style="text-align:center">判非空</td></tr><tr><td style="text-align:center">between … and …</td><td style="text-align:center">区间比较</td></tr><tr><td style="text-align:center">in</td><td style="text-align:center">属于</td></tr><tr><td style="text-align:center">not in</td><td style="text-align:center">不属于</td></tr><tr><td style="text-align:center">like</td><td style="text-align:center">模式匹配</td></tr><tr><td style="text-align:center">not like</td><td style="text-align:center">模式匹配</td></tr><tr><td style="text-align:center">regexp</td><td style="text-align:center">正则匹配</td></tr></tbody></table></div><p>&lt;/details&gt;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="string">&#x27;A&#x27;</span><span class="operator">&lt;</span> <span class="string">&#x27;B&#x27;</span>,<span class="number">1</span><span class="operator">+</span><span class="number">1</span><span class="operator">=</span><span class="number">2</span>,<span class="number">7</span><span class="operator">&lt;&gt;</span><span class="number">7</span>,<span class="number">7</span><span class="operator">!=</span><span class="number">7</span>,<span class="string">&#x27;a&#x27;</span><span class="operator">&lt;=</span><span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;a&#x27;</span> <span class="keyword">is</span> <span class="keyword">null</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------+------+------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="string">&#x27;A&#x27;</span><span class="operator">&lt;</span> <span class="string">&#x27;B&#x27;</span> <span class="operator">|</span> <span class="number">1</span><span class="operator">+</span><span class="number">1</span><span class="operator">=</span><span class="number">2</span> <span class="operator">|</span> <span class="number">7</span><span class="operator">&lt;&gt;</span><span class="number">7</span> <span class="operator">|</span> <span class="number">7</span><span class="operator">!=</span><span class="number">7</span> <span class="operator">|</span> <span class="string">&#x27;a&#x27;</span><span class="operator">&lt;=</span><span class="string">&#x27;a&#x27;</span> <span class="operator">|</span> <span class="string">&#x27;a&#x27;</span> <span class="keyword">is</span> <span class="keyword">null</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------+------+------+----------+-------------+</span></span><br><span class="line"><span class="operator">|</span>        <span class="number">1</span> <span class="operator">|</span>     <span class="number">1</span> <span class="operator">|</span>    <span class="number">0</span> <span class="operator">|</span>    <span class="number">0</span> <span class="operator">|</span>        <span class="number">1</span> <span class="operator">|</span>           <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------+------+------+----------+-------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><ul><li>逻辑运算<br><details><summary>逻辑运算符预览表</summary></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">&amp;&amp;</td><td style="text-align:center">与</td></tr><tr><td style="text-align:center">\</td><td style="text-align:center">\</td><td></td><td>或</td></tr><tr><td style="text-align:center">or</td><td style="text-align:center">或</td></tr><tr><td style="text-align:center">!</td><td style="text-align:center">非</td></tr><tr><td style="text-align:center">not</td><td style="text-align:center">非</td></tr><tr><td style="text-align:center">nor</td><td style="text-align:center">异或</td></tr></tbody></table></div><p>&lt;/details&gt;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="keyword">not</span>(<span class="string">&#x27;A&#x27;</span><span class="operator">=</span><span class="string">&#x27;B&#x27;</span>),(<span class="string">&#x27;c&#x27;</span><span class="operator">=</span>&quot;C&quot;),(<span class="string">&#x27;c&#x27;</span><span class="operator">&lt;</span><span class="string">&#x27;D&#x27;</span>),(<span class="number">1</span><span class="operator">=</span><span class="number">2</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+-----------+-----------+-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">not</span>(<span class="string">&#x27;A&#x27;</span><span class="operator">=</span><span class="string">&#x27;B&#x27;</span>) <span class="operator">|</span> (<span class="string">&#x27;c&#x27;</span><span class="operator">=</span>&quot;C&quot;) <span class="operator">|</span> (<span class="string">&#x27;c&#x27;</span><span class="operator">&lt;</span><span class="string">&#x27;D&#x27;</span>) <span class="operator">|</span> (<span class="number">1</span><span class="operator">=</span><span class="number">2</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+-----------+-----------+-------+</span></span><br><span class="line"><span class="operator">|</span>            <span class="number">1</span> <span class="operator">|</span>         <span class="number">1</span> <span class="operator">|</span>         <span class="number">1</span> <span class="operator">|</span>     <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+-----------+-----------+-------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="keyword">not</span>(<span class="string">&#x27;A&#x27;</span><span class="operator">=</span><span class="string">&#x27;B&#x27;</span>),(<span class="string">&#x27;c&#x27;</span><span class="operator">=</span>&quot;C&quot;)<span class="keyword">and</span>(<span class="string">&#x27;c&#x27;</span><span class="operator">&lt;</span><span class="string">&#x27;D&#x27;</span>)<span class="keyword">or</span>(<span class="number">1</span><span class="operator">=</span><span class="number">2</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">not</span>(<span class="string">&#x27;A&#x27;</span><span class="operator">=</span><span class="string">&#x27;B&#x27;</span>) <span class="operator">|</span> (<span class="string">&#x27;c&#x27;</span><span class="operator">=</span>&quot;C&quot;)<span class="keyword">and</span>(<span class="string">&#x27;c&#x27;</span><span class="operator">&lt;</span><span class="string">&#x27;D&#x27;</span>)<span class="keyword">or</span>(<span class="number">1</span><span class="operator">=</span><span class="number">2</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+------------------------------+</span></span><br><span class="line"><span class="operator">|</span>            <span class="number">1</span> <span class="operator">|</span>                            <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><ul><li>位运算<br><details><summary>位运算符预览表</summary></li></ul><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">&amp;</td><td style="text-align:center">按位与</td></tr><tr><td style="text-align:center">\</td><td style="text-align:center"></td><td>按位或</td></tr><tr><td style="text-align:center">~</td><td style="text-align:center">按位取反</td></tr><tr><td style="text-align:center">^</td><td style="text-align:center">按位异或</td></tr><tr><td style="text-align:center">&lt;&lt;</td><td style="text-align:center">左移</td></tr><tr><td style="text-align:center">&gt;&gt;</td><td style="text-align:center">右移</td></tr></tbody></table></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="number">1</span><span class="operator">&amp;</span><span class="number">2</span>,<span class="number">1</span><span class="operator">|</span><span class="number">2</span>,<span class="number">1</span><span class="operator">&gt;&gt;</span><span class="number">2</span>,<span class="number">1</span><span class="operator">&lt;&lt;</span><span class="number">2</span>,<span class="operator">~</span><span class="number">1</span>,<span class="number">2</span><span class="operator">^</span><span class="number">1</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-----+------+------+----------------------+-----+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span><span class="operator">&amp;</span><span class="number">2</span> <span class="operator">|</span> <span class="number">1</span><span class="operator">|</span><span class="number">2</span> <span class="operator">|</span> <span class="number">1</span><span class="operator">&gt;&gt;</span><span class="number">2</span> <span class="operator">|</span> <span class="number">1</span><span class="operator">&lt;&lt;</span><span class="number">2</span> <span class="operator">|</span> <span class="operator">~</span><span class="number">1</span>                   <span class="operator">|</span> <span class="number">2</span><span class="operator">^</span><span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-----+------+------+----------------------+-----+</span></span><br><span class="line"><span class="operator">|</span>   <span class="number">0</span> <span class="operator">|</span>   <span class="number">3</span> <span class="operator">|</span>    <span class="number">0</span> <span class="operator">|</span>    <span class="number">4</span> <span class="operator">|</span> <span class="number">18446744073709551614</span> <span class="operator">|</span>   <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-----+------+------+----------------------+-----+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="number">2</span><span class="operator">&amp;</span><span class="number">3</span>,<span class="number">2</span><span class="operator">|</span><span class="number">3</span>,<span class="number">2</span><span class="operator">&gt;&gt;</span><span class="number">3</span>,<span class="number">2</span><span class="operator">&lt;&lt;</span><span class="number">3</span>,<span class="operator">~</span><span class="number">2</span>,<span class="number">2</span><span class="operator">^</span><span class="number">3</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-----+------+------+----------------------+-----+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2</span><span class="operator">&amp;</span><span class="number">3</span> <span class="operator">|</span> <span class="number">2</span><span class="operator">|</span><span class="number">3</span> <span class="operator">|</span> <span class="number">2</span><span class="operator">&gt;&gt;</span><span class="number">3</span> <span class="operator">|</span> <span class="number">2</span><span class="operator">&lt;&lt;</span><span class="number">3</span> <span class="operator">|</span> <span class="operator">~</span><span class="number">2</span>                   <span class="operator">|</span> <span class="number">2</span><span class="operator">^</span><span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-----+------+------+----------------------+-----+</span></span><br><span class="line"><span class="operator">|</span>   <span class="number">2</span> <span class="operator">|</span>   <span class="number">3</span> <span class="operator">|</span>    <span class="number">0</span> <span class="operator">|</span>   <span class="number">16</span> <span class="operator">|</span> <span class="number">18446744073709551613</span> <span class="operator">|</span>   <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+-----+------+------+----------------------+-----+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>&lt;/details&gt;</p><ul><li>运算优先级<br>| 优先级 |                    运算符                    |<br>| :——: | :—————————————————————: |<br>|   1    |                      !                       |<br>|   2    |                      ~                       |<br>|   3    |                      ^                       |<br>|   4    |                * / % div mod                 |<br>|   5    |                     + -                      |<br>|   6    |                    &gt;&gt; &lt;&lt;                     |<br>|   7    |                      &amp;                       |<br>|   8    |                      |                      |<br>|   9    | =,&lt;=&gt;,&lt;,&gt;=,&lt;=,&lt;&gt;,!=,&gt;,in,is,null,like,regexp |<br>|   10   |       between and,case,when,then,else        |<br>|   11   |                     not                      |<br>|   12   |                    &amp;&amp; and                    |<br>|   13   |                 || or xor                  |<br>|   14   |               :=     (赋值号)                |</li></ul><h2 id="DDL"><a href="#DDL" class="headerlink" title="DDL"></a>DDL</h2><p>数据定义语言设计对库和表的管理，包括创建、删除、修改</p><h3 id="数据库相关操作"><a href="#数据库相关操作" class="headerlink" title="数据库相关操作"></a>数据库相关操作</h3><ul><li>关键字</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">创建:<span class="keyword">create</span></span><br><span class="line">修改:<span class="keyword">alter</span></span><br><span class="line">删除:<span class="keyword">drop</span></span><br></pre></td></tr></table></figure><ul><li>创建数据库</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- sql server下创建</span></span><br><span class="line"><span class="keyword">CREATE</span> DATABASE EDUC ;</span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">PRIMARY</span>(</span><br><span class="line">NAME <span class="operator">=</span>&quot;student_data&quot;,</span><br><span class="line">FILENAME<span class="operator">=</span><span class="string">&#x27;D:\29247\Documents\MYSQL\sql_data\student_data.mdf&#x27;</span>,</span><br><span class="line">SIZE <span class="operator">=</span> <span class="number">10</span>,</span><br><span class="line">MAXSIZE <span class="operator">=</span> <span class="number">50</span>,</span><br><span class="line">FILEGROWTH <span class="operator">=</span> <span class="number">5</span><span class="operator">%</span>)</span><br><span class="line">LOG <span class="keyword">ON</span> </span><br><span class="line">(NAME <span class="operator">=</span> &quot;student_log&quot;,FILENAME <span class="operator">=</span><span class="string">&#x27;D:\29247\Documents\MYSQL\sql_data\student_log.ldf&#x27;</span>,</span><br><span class="line">SIZE <span class="operator">=</span> <span class="number">2</span>MB,</span><br><span class="line">MAXSIZE <span class="operator">=</span> <span class="number">5</span>MB,</span><br><span class="line">FILEGROWTH <span class="operator">=</span> <span class="number">1</span>MB)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-- Mysql下创建</span><br><span class="line">create database databasename;-- 以默认方式创建数据库</span><br><span class="line">create database databasename charset=utf8;-- 以指定方式创建数据库</span><br><span class="line">create database [if not exists] databasename;</span><br></pre></td></tr></table></figure><ul><li>查看怎样创建的数据库</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show create database [if exists] databasename;</span><br></pre></td></tr></table></figure><ul><li>删除数据库</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop database databasename;</span><br></pre></td></tr></table></figure><p>删除数据库时，可能遇到一下问题</p><p><img src="https://gitee.com/DreamcatcherDENG/drawing-bed/raw/master/img/image-20210505181112066.png" alt="image-20210505181112066"></p><h3 id="表的相关操作"><a href="#表的相关操作" class="headerlink" title="表的相关操作"></a>表的相关操作</h3><h4 id="一-表的设计"><a href="#一-表的设计" class="headerlink" title="一 .表的设计"></a>一 .表的设计</h4><ol><li><p>字段的属性</p><p>每张表都会存在一下5个字段</p><p><code>id</code> 主键</p><p><code>version</code> 乐观锁</p><p><code>is_delete</code>伪删除</p><p><code>gmt_create</code>创建时间</p><p><code>gmt_update</code>修改时间</p></li><li><p>表的创建</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">create table if not exists `tablename`(</span><br><span class="line">&#x27;attr&#x27; type(width) not NULL AUTO_INCREMENT COMMENT &#x27;description&#x27;,</span><br><span class="line">    ‘attr1’ type(width) not NULL DEFAULT &#x27; &#x27; COMMENT &#x27; &#x27;,</span><br><span class="line">    字段类型是否为空自动增长备注，</span><br><span class="line">    ...</span><br><span class="line">    primary key (&#x27;attr&#x27;)</span><br><span class="line">)ENGINE=INNODB DEFAULT CHARSET=utf-8;</span><br></pre></td></tr></table></figure></li></ol><ol><li><p>表的修改</p><ul><li><p>修改表名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table &quot;表名&quot; rename as &#x27;表名&#x27;;</span><br></pre></td></tr></table></figure></li><li><p>添加字段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table &quot;表名&quot; add 字段名 字段属性 [字段属性]</span><br></pre></td></tr></table></figure></li><li><p>修改表的字段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table &quot;表名&quot; modify 字段名 字段属性 --修改表的属性</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table &quot;表名&quot; change 字段名 字段名 字段属性 --表的字段重命名</span><br></pre></td></tr></table></figure></li><li><p>删除表的字段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table &quot;表名&quot; drop 字段名</span><br></pre></td></tr></table></figure></li><li><p>删除表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop table &quot;tablename&quot;</span><br></pre></td></tr></table></figure></li><li><p>添加外键</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table &quot;表名&quot;</span><br><span class="line">add constraint &#x27;FK_字段名&#x27; foreign key(`字段名`) references `字段名`;</span><br></pre></td></tr></table></figure><p>一般不建议在表中直接引用外键，推荐在应用层实现外键操作</p></li></ul></li></ol><h4 id="二-表数据的操作"><a href="#二-表数据的操作" class="headerlink" title="二.表数据的操作"></a>二.表数据的操作</h4><ul><li><p>插入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into tablename(attr0[,attr1,...]) values (value0[,value1,...]);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">insert into tablename values (value0,value1,...); </span><br><span class="line">--不写表的字段时values需要全部写出</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">insert into tablename values (value0,value1,...),(value0,value1,...),...; </span><br><span class="line">--同时添加多条记录</span><br></pre></td></tr></table></figure></li><li><p>修改</p><p>不指定修改条件会改动所有的字段 <del><code>update table set key=&#39;value&#39;;</code></del></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update tablename set key1=&#x27;value1&#x27;,key2=&#x27;value2&#x27; where &#x27;conditions&#x27;; </span><br></pre></td></tr></table></figure></li><li><p>删除</p><p><code>delete</code>和<code>truncat</code></p><p>相同点：都能删除表中的数据但不会删除表的结构</p><p>不同点：<code>delete</code>不会清空自增，<code>truncat</code>会清空自增</p><p><code>delete</code>删除的问题，使用<code>delete</code>删除数据库的现象：</p><ul><li>InnoDB    自增会从1开始（存在内存中）</li><li>MyISAM 自增会从上以自增量开始(存在文件中)</li></ul><p>不指定删除条件会删除所有的字段 <del><code>delete from tablename</code></del></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete from tablename where &#x27;conditions&#x27;;</span><br></pre></td></tr></table></figure><p>清空表中的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">truncate tablename;</span><br></pre></td></tr></table></figure><h1 id="SQL编程"><a href="#SQL编程" class="headerlink" title="SQL编程"></a>SQL编程</h1></li></ul><h2 id="Mysql函数"><a href="#Mysql函数" class="headerlink" title="Mysql函数"></a><a href="https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html">Mysql函数</a></h2><ul><li><p>数学函数<br>|        函数         |                 功能                  |<br>| :————————-: | :—————————————————-: |<br>|     abs(number)     |               求绝对值                |<br>|    sign(number)     | 返回number的符号 $s$,$s \in {-1,0,1}$ |<br>|     sin(number)     |                 正弦                  |<br>|     cos(number)     |                 余弦                  |<br>|     tan(number)     |                 正切                  |<br>|    asin(number)     |                反正弦                 |<br>|    acos(number)     |                反余弦                 |<br>|    atan(number)     |                反正切                 |<br>|   ceiling(number)   |               向上取整                |<br>|    floor(number)    |               向下取整                |<br>| round(number[,int]) |  默认四舍五入，int参数指定保留小数位  |<br>|   greatest(array)   |               求最大值                |<br>|    least(array)     |               求最小值                |<br>|   degree(radian)    |              弧度转角度               |<br>|   radians(degree)   |              角度转弧度               |<br>|        Pi()         |                 $\pi$                 |<br>|     exp(number)     |              $e^{value}$              |<br>|     log(number)     |           $\log<em>e(number)$            |<br>|    log10(number)    |          $log</em>{10}(number)$           |<br>|      pow(a,n)       |                 $a^n$                 |<br>|       sqrt(n)       |               $\sqrt n$               |<br>|       rand()        |      产生随机数$x$, $x \in(0,1)$      |</p></li><li><p>字符串函数<br>|             函数             |                         功能                          |<br>| :—————————————: | :—————————————————————————-: |<br>|       char_length(str)       |                   求字符串字符长度                    |<br>| concat(str1,str2[,str3,…]) |                      拼接字符串                       |<br>|         left(str,i)          |                     返回0~i的子串                     |<br>|         right(str,i)         |                  返回i~length的子串                   |<br>|         length(str)          |                   求字符串字节长度                    |<br>|          lower(str)          |                        转小写                         |<br>|          upper(str)          |                        转大写                         |<br>|          ltrim(str)          |                     删除起始空格                      |<br>|          rtrim(str)          |                     删除末尾空格                      |<br>|   replace(str1,str2,str3)    |                用str3替换str1中的str2                 |<br>|         reverse(str)         |                         反转                          |<br>|      substring(str,i,j)      | 取i~j的子窜$substr,substr = str[i;j]$其中 $ i,j$ 可取 |</p></li></ul><ul><li><p><a href="https://dev.mysql.com/doc/refman/5.7/en/aggregate-functions.html">聚合函数</a></p><p>|    函数    |     功能      |<br>| :————: | :—————-: |<br>| avg(field) |   求平均值    |<br>|  count(*)  | 求arr元素个数 |<br>| max(field) |   求最大值    |<br>| min(field) |   求最小值    |<br>| sum(field) |     求和      |</p></li><li><p><a href="https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html">时间日期函数</a></p></li><li><p><a href="https://dev.mysql.com/doc/refman/8.0/en/encryption-functions.html">加密函数</a></p><h3 id="函数的使用"><a href="#函数的使用" class="headerlink" title="函数的使用"></a>函数的使用</h3></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-&gt;select date_format(now(),&quot;%Y年%m月%d日 %H点%i分%s秒&quot;);</span><br><span class="line"></span><br><span class="line">+------------------------------------------------+</span><br><span class="line">| date_format(now(),&quot;%Y年%m月%d日 %H点%i分%s秒&quot;) |</span><br><span class="line">+------------------------------------------------+</span><br><span class="line">| 2021年06月09日 11点07分10秒                    |</span><br><span class="line">+------------------------------------------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br></pre></td></tr></table></figure><h2 id="Mysql自定义函数"><a href="#Mysql自定义函数" class="headerlink" title="Mysql自定义函数"></a>Mysql自定义函数</h2><ul><li>当函数体为复合类型时，应该使用<code>begin ... end</code>包裹复合结构</li><li>创建函数不能重名</li><li>符合结构中可以包含声明、循环、条件控制等语句</li></ul><h3 id="创建无参函数"><a href="#创建无参函数" class="headerlink" title="创建无参函数:"></a>创建无参函数:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-&gt;create function function_name()</span><br><span class="line">-&gt;returns return_type</span><br><span class="line">-&gt;return return_body;</span><br></pre></td></tr></table></figure><p><em><u>注：创建函数之前需要先信任函数创建者<code>set global log_bin_trust_function_creators=1</code>;</u></em></p><h3 id="例"><a href="#例" class="headerlink" title="例:"></a>例:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-&gt;create function mydate() </span><br><span class="line">-&gt;returns varchar(30)</span><br><span class="line">-&gt;return date_format(now(),&quot;%Y年%m月%d日 %H点%i分%s秒&quot;);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-&gt; select mydate();</span><br><span class="line">+-----------------------------+</span><br><span class="line">| mydate()                    |</span><br><span class="line">+-----------------------------+</span><br><span class="line">| 2021年06月09日 11点14分30秒   |</span><br><span class="line">+-----------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><h3 id="创建有参函数"><a href="#创建有参函数" class="headerlink" title="创建有参函数"></a>创建有参函数</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-&gt;create function function_name(num1 type,num2 type)</span><br><span class="line">-&gt;returns return_type</span><br><span class="line">-&gt;return return_body;</span><br></pre></td></tr></table></figure><h3 id="例-1"><a href="#例-1" class="headerlink" title="例:"></a>例:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-&gt;create function myAvg(num1 int,num2 int) </span><br><span class="line">-&gt;returns int</span><br><span class="line">-&gt;return (num1+num2)/2;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-&gt;select myAvg(10,14);</span><br><span class="line">+--------------+</span><br><span class="line">| myAvg(10,14) |</span><br><span class="line">+--------------+</span><br><span class="line">|           12 |</span><br><span class="line">+--------------+</span><br><span class="line">1 row in set (0.01 sec)</span><br></pre></td></tr></table></figure><h3 id="删除函数："><a href="#删除函数：" class="headerlink" title="删除函数："></a>删除函数：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop function [if exists] function_name;</span><br></pre></td></tr></table></figure><h2 id="Mysql自定义存储过程"><a href="#Mysql自定义存储过程" class="headerlink" title="Mysql自定义存储过程"></a>Mysql自定义存储过程</h2><p>存储过程（Stored Procedure）是一种在数据库中存储复杂程序，以便外部程序调用的一种数据库对象。</p><p>存储过程是为了完成特定功能的SQL语句集，经编译创建并保存在数据库中，用户可通过指定存储过程的名字并给定参数(需要时)来调用执行。</p><p>存储过程思想上很简单，就是数据库 SQL 语言层面的代码封装与重用。</p><h3 id="无参存储过程的创建"><a href="#无参存储过程的创建" class="headerlink" title="无参存储过程的创建"></a>无参存储过程的创建</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-&gt;create procedure procedure_name()</span><br><span class="line">-&gt;procedure_body;</span><br></pre></td></tr></table></figure><p>例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-&gt;create procedure show_version()</span><br><span class="line">-&gt;select version();</span><br></pre></td></tr></table></figure><p>调用:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-&gt;call show_version();</span><br><span class="line">+-----------+</span><br><span class="line">| version() |</span><br><span class="line">+-----------+</span><br><span class="line">| 8.0.23    |</span><br><span class="line">+-----------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br></pre></td></tr></table></figure><h3 id="有参数的存储过程的创建"><a href="#有参数的存储过程的创建" class="headerlink" title="有参数的存储过程的创建"></a>有参数的存储过程的创建</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delimiter //</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create procedure delete_cou_by_cid(id int)</span><br><span class="line">-&gt; begin</span><br><span class="line">-&gt; delete from cou where cid=id;</span><br><span class="line">-&gt; end</span><br><span class="line">-&gt; //</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-&gt;call delete_cou_by_cid(1)//</span><br></pre></td></tr></table></figure><p><strong><em><u>创建存储过程时参数和字段不能是相同名称</u></em></strong></p><h3 id="带返回值的存储过程"><a href="#带返回值的存储过程" class="headerlink" title="带返回值的存储过程"></a>带返回值的存储过程</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create procedure delete_cou_by_cid(in id int,out num int)</span><br><span class="line">-&gt; begin</span><br><span class="line">-&gt; delete from cou where cid=id into num;</span><br><span class="line">-&gt; end</span><br><span class="line">-&gt; //</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">call delete_cou_by_cid(1,@num)//</span><br><span class="line">select @num//</span><br></pre></td></tr></table></figure><p><code>out</code>关键字指定存储过程的返回值</p><h3 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句:"></a>条件语句:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">-&gt; DELIMITER //  </span><br><span class="line">-&gt; CREATE PROCEDURE proc2(IN parameter int)  </span><br><span class="line">-&gt; begin </span><br><span class="line">-&gt; declare var int;  </span><br><span class="line">-&gt; set var=parameter+1;  </span><br><span class="line">-&gt; if var=0 then </span><br><span class="line">-&gt; insert into t values(17);  </span><br><span class="line">-&gt; end if;  </span><br><span class="line">-&gt; if parameter=0 then </span><br><span class="line">-&gt; update t set s1=s1+1;  </span><br><span class="line">-&gt; else </span><br><span class="line">-&gt; update t set s1=s1+2;  </span><br><span class="line">-&gt; end if;  </span><br><span class="line">-&gt; end;  </span><br><span class="line">-&gt; //  </span><br><span class="line">mysql &gt; DELIMITER ;</span><br></pre></td></tr></table></figure><h3 id="case语句"><a href="#case语句" class="headerlink" title="case语句:"></a>case语句:</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">mysql &gt; DELIMITER //  </span><br><span class="line">mysql &gt; CREATE PROCEDURE proc3 (in parameter int)  </span><br><span class="line">-&gt; begin </span><br><span class="line">-&gt; declare var int;  </span><br><span class="line">-&gt; set var=parameter+1;  </span><br><span class="line">-&gt; case var  </span><br><span class="line">-&gt; when 0 then   </span><br><span class="line">-&gt; insert into t values(17);  </span><br><span class="line">-&gt; when 1 then   </span><br><span class="line">-&gt; insert into t values(18);  </span><br><span class="line">-&gt; else   </span><br><span class="line">-&gt; insert into t values(19);  </span><br><span class="line">-&gt; end case;  </span><br><span class="line">-&gt; end;  </span><br><span class="line">-&gt; //  </span><br><span class="line">mysql &gt; DELIMITER ; </span><br><span class="line">case</span><br><span class="line">when var=0 then</span><br><span class="line">insert into t values(30);</span><br><span class="line">when var&gt;0 then</span><br><span class="line">when var&lt;0 then</span><br><span class="line">else</span><br><span class="line">end case</span><br></pre></td></tr></table></figure><h3 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句:"></a>循环语句:</h3><ul><li><p><code>while ... end while</code>在执行操作前检查结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql &gt; DELIMITER //  </span><br><span class="line">mysql &gt; CREATE PROCEDURE proc4()  </span><br><span class="line">-&gt; begin </span><br><span class="line">-&gt; declare var int;  </span><br><span class="line">-&gt; set var=0;  </span><br><span class="line">-&gt; while var&lt;6 do  </span><br><span class="line">-&gt; insert into t values(var);  </span><br><span class="line">-&gt; set var=var+1;  </span><br><span class="line">-&gt; end while;  </span><br><span class="line">-&gt; end;  </span><br><span class="line">-&gt; //  </span><br><span class="line">mysql &gt; DELIMITER ;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p><code>repeat ... end repeat</code>在执行操作后检查结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql &gt; DELIMITER //  </span><br><span class="line">mysql &gt; CREATE PROCEDURE proc5 ()  </span><br><span class="line">-&gt; begin   </span><br><span class="line">-&gt; declare v int;  </span><br><span class="line">-&gt; set v=0;  </span><br><span class="line">-&gt; repeat  </span><br><span class="line">-&gt; insert into t values(v);  </span><br><span class="line">-&gt; set v=v+1;  </span><br><span class="line">-&gt; until v&gt;=5  </span><br><span class="line">-&gt; end repeat;  </span><br><span class="line">-&gt; end;  </span><br><span class="line">-&gt; //  </span><br><span class="line">mysql &gt; DELIMITER ;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p><code>loop ·····endloop</code>loop 循环不需要初始条件，这点和 while 循环相似，同时和 repeat 循环一样不需要结束条件, leave 语句的意义是离开循环。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql &gt; DELIMITER //  </span><br><span class="line">mysql &gt; CREATE PROCEDURE proc6 ()  </span><br><span class="line">-&gt; begin </span><br><span class="line">-&gt; declare v int;  </span><br><span class="line">-&gt; set v=0;  </span><br><span class="line">-&gt; LOOP_LABLE:loop  </span><br><span class="line">-&gt; insert into t values(v);  </span><br><span class="line">-&gt; set v=v+1;  </span><br><span class="line">-&gt; if v &gt;=5 then </span><br><span class="line">-&gt; leave LOOP_LABLE;  </span><br><span class="line">-&gt; end if;  </span><br><span class="line">-&gt; end loop;  </span><br><span class="line">-&gt; end;  </span><br><span class="line">-&gt; //  </span><br><span class="line">mysql &gt; DELIMITER ;</span><br></pre></td></tr></table></figure></li></ul><h3 id="存储过程与函数的比较"><a href="#存储过程与函数的比较" class="headerlink" title="存储过程与函数的比较"></a>存储过程与函数的比较</h3><p>存储过程的功能更复杂，函数的针对性更强</p><p>存储过程可以返回多个值，函数只能返回一个值</p><p>存储过程一般独立执行，函数可以作为其他SQL语句的一个组成部分</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文介绍了MySQL的基本知识点，收录了SQL学习和练习网站，收录了学习MySQL过程中常见的问题及解决办法&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="MySQL" scheme="https://dreamcatcherdeng.gitee.io/personal-blog/categories/MySQL/"/>
    
    
  </entry>
  
</feed>
